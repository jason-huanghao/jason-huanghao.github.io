<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>分类指标</title>
    <url>/2021/05/31/Machine%20Learning/%E5%88%86%E7%B1%BB%E6%8C%87%E6%A0%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Predifinition"><a href="#Predifinition" class="headerlink" title="Predifinition"></a>Predifinition</h1><p>Suppose that there is a set $s$ to be predicted as class $c$. A data point in $s$ is can be predicted as positive (P, means belonging to $c$), or negative (N, means belonging to other classes)</p>
<table>
<thead>
<tr>
<th></th>
<th>Predicted P</th>
<th>Predicgted N</th>
</tr>
</thead>
<tbody><tr>
<td>P</td>
<td>TP</td>
<td>FN</td>
</tr>
<tr>
<td>N</td>
<td>FP</td>
<td>TN</td>
</tr>
</tbody></table>
<span id="more"></span>
<p>TP: Actual Positive, Predicted as Positive<br>FN: Actual Positive, Predicted as Negative<br>TN: Actual Negative, Predicted as Negative<br>FP: Actual Negative, Predicted as Positive</p>
<h1 id="Standard-Criteria"><a href="#Standard-Criteria" class="headerlink" title="Standard Criteria"></a>Standard Criteria</h1><p>Precision</p>
<p>$P(c)=\frac{TP_c}{TP_c + FP_c}$</p>
<p>Recall</p>
<p>$R(c)=\frac{TP_c}{TP_c + FN_c}$</p>
<p>F1</p>
<p>$F1(c)=2× \frac{P(c)×R(c)}{P(c)+R(c)}$</p>
<h1 id="Macro-Criteria"><a href="#Macro-Criteria" class="headerlink" title="Macro Criteria"></a>Macro Criteria</h1><p>Note that the Macro Criteria will highly influenced by the small classes. |C| is the number of classes.</p>
<p>Macro Precision</p>
<p>$P_{macro}=\sum_{c}\frac{P(c)}{|C|}$</p>
<p>Macro Recall</p>
<p>$R_{macro}=\sum_c\frac{R(c)}{|C|}$</p>
<p>Macro F1</p>
<p>$F1_{macro}=\sum_c\frac{F1(c)}{|C|}$</p>
<h1 id="Micro-Criteria"><a href="#Micro-Criteria" class="headerlink" title="Micro Criteria"></a>Micro Criteria</h1><p>$P_{micro}=R_{micro}=F1_{micro}=\sum_c\frac{TP(c)}{|D|}$<br>, where |D| is the size of data set.</p>
<h1 id="Weighted-Criteria"><a href="#Weighted-Criteria" class="headerlink" title="Weighted Criteria"></a>Weighted Criteria</h1><p>Weighted Precision</p>
<p>$P_{weighted}=\sum_c\frac{|c|}{|D|}P(c)$</p>
<p>Weighted Recall</p>
<p>$R_{weighted}=\sum_c\frac{|c|}{|D|}R(c)$</p>
<p>Weighted F1<br>$F1_{weighted}=\sum_c\frac{|c|}{|D|}F1(c)$</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
        <tag>分类</tag>
      </tags>
  </entry>
  <entry>
    <title>估计方法</title>
    <url>/2021/06/15/Machine%20Learning/%E5%8F%82%E6%95%B0%E4%BC%B0%E8%AE%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210615200450.png"></p>
<span id="more"></span>

<h1 id="预定义符号"><a href="#预定义符号" class="headerlink" title="预定义符号"></a>预定义符号</h1><p>训练数据：$D={(x_1,y_1),(x_2,y_2),…,(x_n, y_n)}$</p>
<p>模型参数：$\theta$</p>
<p>预测数据：$x^*$</p>
<p>概率函数与似然函数 </p>
<p>对于函数 $P(x|\theta)$，从不同角度分为两种情况：</p>
<ol>
<li>如果 $\theta$ 已知，$x$ 是变量，则 $P(x|\theta)$ 称为概率函数，表示不同 $x$ 出现的概率</li>
<li>如果 $x$ 已知，$\theta$ 是未知变量，则 $P(x|\theta)$ 称为概率函数，表示不同 $\theta$ 下，$x$ 出现的概率，也记作 $L(\theta|x)$</li>
</ol>
<h1 id="ML（最大似然估计，频率主义）"><a href="#ML（最大似然估计，频率主义）" class="headerlink" title="ML（最大似然估计，频率主义）"></a>ML（最大似然估计，频率主义）</h1><p>ML 的思想是找出使得观测数据 $D$ 发生概率最大的参数</p>
<p>学习目标</p>
<p>$\theta_{ML}=\underset{\theta}{argmax}\ p(D|\theta)$</p>
<p>通常对目标函数对 $\theta$ 求导，令导师等于 0 即可求出最优解</p>
<p><strong>预测</strong></p>
<p>$p(\hat y|x^*,\theta_{ML})$</p>
<p><strong>缺点</strong></p>
<ol>
<li>没有考虑后验概率</li>
<li>容易过拟合数据</li>
</ol>
<p>最大似然估计的求解步骤：</p>
<ol>
<li>确定似然函数</li>
<li>将似然函数转换为对数似然函数</li>
<li>求对数似然函数的最大值（求导，解似然方程）</li>
</ol>
<h1 id="MAP（最大后验估计，频率主义）"><a href="#MAP（最大后验估计，频率主义）" class="headerlink" title="MAP（最大后验估计，频率主义）"></a>MAP（最大后验估计，频率主义）</h1><p>ML 把参数 $\theta$ 看做一个固定值，而 MAP 则认为 $\theta$ 是一个随机变量，$\theta$ 要满足某种概率分布，即先验分布，因此求解 $\theta$ 时不仅要考虑似然函数 $p(D|\theta)$ 还要考虑 $\theta$ 的先验分布 $p(\theta)$。MAP 通常被认为是正则化的 ML</p>
<p><strong>学习目标</strong></p>
<p>$\theta_{MAP}=\underset{\theta}{argmax}\ p(D|\theta)p(\theta)$</p>
<p>目标式中可以对两个概率加 $log$ 函数</p>
<p><strong>预测</strong></p>
<p>$p(\hat y|x^*,\theta_{MAP})$</p>
<p><strong>优势</strong></p>
<ol>
<li>加入了先验知识</li>
<li>$p(\theta)$ 相当于起到了正则化的作用，如果 $p(\theta)$ 服从高斯分布，则相当于加了 L2 norm；如果如果 $p(\theta)$ 服从拉普拉斯分布，相当于加了 L1 norm？</li>
</ol>
<p>最大后验概率估计的求解步骤：</p>
<ol>
<li>确定参数的先验分布以及似然函数</li>
<li>确定参数的后验分布函数</li>
<li>将后验分布函数转换为对数函数</li>
<li>求对数函数的最大值（求导，解方程）</li>
</ol>
<h1 id="Beyesian（贝叶斯估计，贝叶斯主义）"><a href="#Beyesian（贝叶斯估计，贝叶斯主义）" class="headerlink" title="Beyesian（贝叶斯估计，贝叶斯主义）"></a>Beyesian（贝叶斯估计，贝叶斯主义）</h1><p>贝叶斯估计要解决的不是如何估计参数，而是用来估计新测量数据出现的概率。贝叶斯估计同样假定 $\theta$ 是一个随机变量，但贝叶斯估计并不是直接估计出θ的某个特定值，而是估计 $\theta$ 的分布，这是贝叶斯估计与最大后验概率估计不同的地方。在贝叶斯估计中，先验 $p(D)$ 是不能忽视的。在已知 $D$ 的情况下，$\theta$ 的分布描述为后验分布 $p(\theta|D)$，如果后验分布范围较窄，则估计的准确度相对较高；反之，后验分布范围较广，则估计的准确度较低</p>
<p><strong>学习目标</strong></p>
<p>计算 $p(\theta|D)$</p>
<p><strong>预测</strong></p>
<p>$p(x^*|D)=\int_{\theta} p(x^*|\theta)p(\theta|D)\ d\theta=\int_{\theta}p(x^*|\theta)\frac{p(\theta)p(D|\theta)}{p(D)}d\theta$</p>
<p>贝叶斯估计先为所有可能的模型计算一个权重，最终的 predict 结果是根据所有模型按照权重加权投出的结果</p>
<p><strong>难点</strong></p>
<p>贝叶斯估计估计结果可靠，但是为了给每个模型 $\theta$ 计算一个权重，也就是后验概率 $p(\theta|D)$，为了计算这个后验概率我们需要计算</p>
<p>$p(\theta|D)=\frac{p(\theta)p(D|\theta)}{\int_{\theta}p(\theta)p(D|\theta)d\theta}$</p>
<p>但是要分母中的积分计算代价是非常大的，为此整个贝叶斯领域的核心技术在于近似计算 $p(\theta|D)$，称之为 Beyesian Inference。对于贝叶斯估计，我们希望近似计算分母 $p(D)$，通过对 $\theta$ 采样实现。<br>$p(D)=\frac{1}{S}\sum_{s=1}^S p(D|\theta^{(s)})$</p>
<p>此外，还可以通过为后验概率分布选择适合的先验分布，从而实现后验概率分布的直接计算，通常能表示为 「后验 = 先验 + 数据」或者 「$posterior\sim prior \times likelihood$」。如果没有共轭，在需要计算多批新样本数据下的后验分布时，每次计算都需要整体重新计算</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210616120647.png"></p>
<p>如果后验分布与先验分布属于同类（分布形式相同），则先验分布与后验分布被称为共轭分布，而先验分布被称为似然函数的共轭先验</p>
<p>比如抛硬币这个实验，结果（也就是 Likelihood）满足二项分布，而二项分布的参数满足分布 $Beta(\theta|\alpha,\beta)=\frac{1}{B(\alpha,\beta)}x^{\alpha-1}x^{\beta-1}$（先验分布），如果抛硬币的 10 个结果中产生了 6 个正面（概率为 $\theta$），4 个反面（概率为 $1-\theta$）。那么后验概率的计算为</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210616121309.png"></p>
<p>贝叶斯估计的求解步骤：</p>
<ol>
<li>确定参数的似然函数</li>
<li>确定参数的先验分布，应是后验分布的共轭先验</li>
<li>确定参数的后验分布函数</li>
<li>根据贝叶斯公式求解参数的后验分布</li>
</ol>
<p><strong>注</strong>：二项分布参数的共轭先验是Beta分布，多项式分布参数的共轭先验是Dirichlet分布，指数分布参数的共轭先验是Gamma分布，⾼斯分布均值的共轭先验是另⼀个⾼斯分布，泊松分布的共轭先验是Gamma分布</p>
<h1 id="这个三个估计方法差别"><a href="#这个三个估计方法差别" class="headerlink" title="这个三个估计方法差别"></a>这个三个估计方法差别</h1><p>比如你是班里的班长，你有个问题想知道答案，你可以问所有的班里的学生。 一种方案是，问一个学习最好的同学。 另一种方案是，问所有的同学，然后把答案综合起来，但综合的时候，会按照每个同学的成绩好坏来做个权重。 第一种方案的思想类似于ML,MAP，第二种方案类似于贝叶斯模型。</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://yuanxiaosc.github.io/2018/06/20/%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%B0%E8%AE%A1%E3%80%81%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1%E3%80%81%E6%9C%80%E5%A4%A7%E5%90%8E%E9%AA%8C%E4%BC%B0%E8%AE%A1%E4%B8%89%E8%80%85%E7%9A%84%E5%8C%BA%E5%88%AB/">贝叶斯估计、最大似然估计和最大后验估计 参考1</a></li>
<li><a href="http://noahsnail.com/2018/05/17/2018-05-17-%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%B0%E8%AE%A1%E3%80%81%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1%E3%80%81%E6%9C%80%E5%A4%A7%E5%90%8E%E9%AA%8C%E6%A6%82%E7%8E%87%E4%BC%B0%E8%AE%A1/">贝叶斯估计、最大似然估计和最大后验估计 参考2</a></li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
        <tag>参数估计</tag>
      </tags>
  </entry>
  <entry>
    <title>EM算法</title>
    <url>/2021/06/12/Machine%20Learning/EM%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="EM-基本思想"><a href="#EM-基本思想" class="headerlink" title="EM 基本思想"></a>EM 基本思想</h1><p>已知观察数据，未知隐含数据和模型参数。在E步，我们所做的事情是固定模型参数的值，优化隐含数据的分布（猜想隐变量的数据），而在M步，我们所做的事情是固定隐含数据分布，优化模型参数的值（基于观测数据和猜测的隐变量数据最大化对数似然函数）</p>
<span id="more"></span>

<p>这个算法与 MLE（maximum likelihood estimation）的差别是：MLE 针对无隐变量的模型，先收集所有变量的观测数据，然后根据完整的观测数据去估计参数；EM 针对含隐变量的模型，先根据可观测变量的数据猜测隐变量的数据，然后根据隐变量数据和观测数据来估计参数<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210612104008.png"></p>
<h1 id="EM-推导"><a href="#EM-推导" class="headerlink" title="EM 推导"></a>EM 推导</h1><h2 id="Jensen’s-inequality"><a href="#Jensen’s-inequality" class="headerlink" title="Jensen’s inequality"></a>Jensen’s inequality</h2><p>如果函数 $g(x)$ 是凸函数，那么有 $g(E(x))\geq E(g(x))$</p>
<p>证明如下，过点 $(x, g(E(x)))$ 所一条切线，假设切线公式为 $L(x)=a+bx$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210612110505.png"></p>
<h2 id="EM-算法"><a href="#EM-算法" class="headerlink" title="EM 算法"></a>EM 算法</h2><p><strong>整体思想</strong></p>
<p>假设有 $n$ 个独立同分布的数据 ${x^{1}, x^{(2)},…,x^{(n)}}$，我们要估计一个包含隐变量 $z$ 和变量 $x$ 的模型的参数，改模型表示为 $p(x,z;\theta)$,</p>
<p>那么，关于变量 $x$ 的概率密度为 $p(x;\theta)=\sum_{z} p(x,z;\theta)$</p>
<p>模型的训练目标为极大对数似然函数 $l(\theta)=log(\sum_{i=1}^{n}p(x^{(i)};\theta))=\sum_{i=1}^{n}\sum_{z^{(i)}}p(x^{(i)}, z^{(i)};\theta)$。由于 $z$ 是隐变量，数据无法观测，优化这个目标是困难的</p>
<p>EM 算法，通过构造 $l(\theta)$ 的下界函数，通过在 E 步根据参数和部分观测数据计算下界函数，在 M 步最大化下界函数来实现对参数 $\theta$ 的逐步优化</p>
<p><strong>下界函数 ELBO 推导</strong></p>
<p>先考虑对一个数据样例 $x$ 的优化过程，即针对目标 $log(p(x;\theta))=log(\sum_{z} p(x,z;\theta))$，令分布 $Q(z)$ 为隐变量 $z$ 的一个分布，$\sum_{z}Q(z)=1, Q(z)\geq 0$，此时重写目标</p>
<p>$log(p(x;\theta))=log(\sum_{z} p(x,z;\theta))=log\sum_{z}Q(z)\frac{p(x,z;\theta)}{Q(z)} \geq \sum_{z}Q(z)log\frac{p(x,z;\theta)}{Q(z)}$</p>
<p>上面不等式根据 Jensen 不等式可推导，因为 $log(\frac{p(x,z;\theta)}{Q(z)})$ 是一个关于 $z$ 的凸函数</p>
<p><strong>Q 函数的确定</strong></p>
<p>对于任意一个 $Q(z)$ 上面的不等式都成立，但是我们希望找到的下界函数跟目标函数足够接近（也就是令不等式的等式成立），此时必须满足条件 $\frac{p(x,z;\theta)}{Q(z)}=c$，这意味着 $Q(z)\sim p(x,z;\theta)$，而 $\sum_z Q(z)=1$（归一化概率分布），因此我们可以计算出 $Q(z)$ 为 </p>
<p>$Q(z)=\frac{p(x,z;\theta)}{\sum_{z} p(x,z;\theta)}=\frac{p(x,z;\theta)}{p(x;\theta)}=p(z|x;\theta)$</p>
<p>这样我们就唯一确定了 $Q(z)$ 函数为 $z$ 的给定观测数据 $x$ 和参数 $\theta$ 的后验概率，即给定了观测数据和参数，就可以猜测出 $z$ 的概率分布（隐数据），基于此就计算出了一个新的 ELBO</p>
<p><strong>EM 算法</strong></p>
<p>在此重写我们的目标函数和下界函数的关系 </p>
<p>$l(\theta)=\sum_{i}log(p(x_i;\theta))\geq \sum_{i}ELBO(x^{(i)};Q_i(z^{(i)}),\theta)=\sum_{i}\sum_{z^{(i)}} Q_i(z^{(i)})log\frac{p(x^{(i)},z^{(i)};\theta)}{Q_i(z^{(i)})}$，对于任意 $Q_i,i=1,2,…,n$ 必须满足 $Q_i(z^{(i)})=p(z^{(i)}|x^{(i)};\theta)$</p>
<p>  <strong>Initialization</strong></p>
<p>  随机初始化 $\theta$</p>
<p>  <strong>E-step</strong></p>
<p>  对于每一个 $i$，令</p>
<p>  $Q_i(z^{(i)}):=p(z^{(i)}|x^{(i)};\theta)$</p>
<p>  <strong>M-step</strong></p>
<p>  $\theta:=\underset{\theta}{argmax}\sum_{i}^{n} ELBO(x^{(i)};Q_i,\theta) =\underset{\theta}{argmax}\sum_{i}^{n}\sum_{z^{(i)}}Q_i(z^{(i)})log\frac{p(x^{(i)},z^{(i)};\theta)}{Q_i(z^{(i)})}$</p>
<h1 id="收敛性证明"><a href="#收敛性证明" class="headerlink" title="收敛性证明"></a>收敛性证明</h1><p>$l(\theta^{(t+1)})\geq \sum_{i=1}^{n} ELBO(x^{(i)},Q_i^{(t)},\theta^{(t+1)}) \geq \sum_{i=1}^{n} ELBO(x^{(i)},Q_i^{(t)},\theta^{(t)}) =l(\theta^{(t)})$</p>
<p>其中 $\theta^{(t+1)}$ 是通过 $\underset{\theta}{argmax} \sum_{i=1}^n ELBO(x^{(i)};Q_i^{(t)},\theta)$ 求出来的最优参数</p>
<h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><h2 id="K-means-算法"><a href="#K-means-算法" class="headerlink" title="K-means 算法"></a>K-means 算法</h2><p>K-means 算法开始给定随机的聚类簇的中心（簇的中心就是隐变量），根据聚类簇的中心划分数据。在 E 步中估计 K 个簇的中心位置。然后计算得到每个样本最近的质心，并把样本聚类到最近的这个质心，这个就是 M 步</p>
<h2 id="GMM-混合高斯模型"><a href="#GMM-混合高斯模型" class="headerlink" title="GMM 混合高斯模型"></a>GMM 混合高斯模型</h2><h2 id="LDA-主题模型"><a href="#LDA-主题模型" class="headerlink" title="LDA 主题模型"></a>LDA 主题模型</h2><h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://www.cnblogs.com/pinard/p/6912636.html">刘建平老师 Pinard EM 算法原理总结</a></li>
<li><a href="http://cs229.stanford.edu/notes2020spring/cs229-notes8.pdf">Tengyu Ma and Andrew Ng CS229 Lecture notes</a></li>
<li><a href="https://link.zhihu.com/?target=http://ai.stanford.edu/~chuongdo/papers/em_tutorial.pdf">What is the expectation maximization algorithm?</a></li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>EM</tag>
      </tags>
  </entry>
  <entry>
    <title>GMM模型</title>
    <url>/2021/06/12/Machine%20Learning/GMM%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="单个高维高斯分布"><a href="#单个高维高斯分布" class="headerlink" title="单个高维高斯分布"></a>单个高维高斯分布</h1><p>$d$ 维的高斯分布的密度函数为</p>
<p>$N(x;\mu,\Sigma)=\frac{1}{\sqrt{(2\pi)^{d}det(\Sigma)}}exp\left[-\frac{1}{2}(x-\mu)^T \Sigma^{-1}(x-\mu) \right]]$</p>
<p>其中 $x$ 是一个 $d$ 维的数据，$\mu$ 是一个 $d$ 维的向量，$\Sigma$ 是一个 $d\times d$ 的协方差矩阵</p>
<span id="more"></span>

<h1 id="混合高斯推导"><a href="#混合高斯推导" class="headerlink" title="混合高斯推导"></a>混合高斯推导</h1><p><strong>混合高斯模型的概率密度函数</strong></p>
<p>$p(x|\Theta)=\sum_k \alpha_k N(x;\mu_k,\Sigma_k)=\sum_k \alpha_k\frac{1}{\sqrt{(2\pi)^d det(\Sigma_k)}}exp\left[-\frac{1}{2}(x-\mu_k)^T \Sigma_k^{-1}(x-\mu_k)\right]$</p>
<p>其中 $\Theta$ 包含 ${\alpha_k,\mu_k,\Sigma_k},k=1,2,…,K$</p>
<p><strong>ELBO 下限函数的推导</strong></p>
<p>$l(\Theta)=\sum_i log(p(x_i|\Theta))$</p>
<p>$=\sum_i log(\sum_{k}p(x_i,z_k|\Theta))$</p>
<p>$=\sum_i log(\sum_{k}p(x_i|z_k,\Theta)p(z_k=k))$</p>
<p>$= \sum_i log(\sum_{k}Q_k(z_k|x_i,\mu_k,\Sigma_k)\frac{p(x_i|z_k=k,\mu_k,\Sigma_k)p(z_k=k)}{Q_k(z_k|x_i,\mu_k,\Sigma_k)})$</p>
<p>$\geq ELBO(\Theta) = \sum_i \sum_k Q_k(z_k|x_i,\mu_k,\Sigma_k) log\frac{p(x_i|z_k=k,\mu_k,\Sigma_k)p(z_k=k)}{Q_k(z_k|x_i,\mu_k,\Sigma_k)}$</p>
<p><strong>Q 函数的推导</strong></p>
<p>为了使得获得一个最好的 $(\Theta)$ 的 ELBO 下限函数，要求 $\frac{p(x_i|z_k=k,\mu_k,\Sigma_k)p(z_k=k)}{Q_k(z_k|x_i,\mu_k,\Sigma_k)}=c$，而 $\sum_k Q_k(z_k|x_i,\mu_k,\Sigma_k)=1$（分母归一化），因此</p>
<p>$Q_k(z_k|x_i,\mu_k,\Sigma_k)=\frac{p(x_i|z_k=k,\mu_k,\Sigma_k)p(z_k=k) }{\sum_k p(x_i|z_k=k,\mu_k,\Sigma_k)p(z_k=k)}=\frac{N(x_i|\mu_k,\Sigma_k)\alpha_k}{\sum_k N(x_i|\mu_k,\Sigma_k)\alpha_k}=p(z_k=k|x_i,\mu_k,\Sigma_k)$</p>
<p>其中 $p(z_k=k)=\alpha_k$ 为先验概率；GMM 选用的隐变量是 $z=[z_1,…,z_K]$, 代表数据 $x_i$ 来自第 $k$ 个高斯分布的概率。关于隐变量 $z_k$ 的 Q 函数为 $Q_k(z_k)=p(z_k=k|x_i,\mu_k, \Sigma_k)$（给定部分观测数据 $x_i$ 和参数，$z_k$ 的后验概率）。不等式由 Jensen 不等式推导得到（$E(f(x))\geq f(E(x))$ 如果 $f(x)$ 是一个凸函数）</p>
<p>那么 EM 在 E 步时计算 Q 函数，在 M 步最大化 $\Theta={\alpha_k, \mu_k, \Sigma_k},k=1,2,…,K$</p>
<h1 id="GMM-的EM-算法"><a href="#GMM-的EM-算法" class="headerlink" title="GMM 的EM 算法"></a>GMM 的EM 算法</h1><p><strong>Initialization</strong></p>
<p>初始化参数 ${\alpha_k,\mu_k,\Sigma_k},k=1,2,…,K$</p>
<p><strong>E-step</strong></p>
<p>计算 Q 函数 $Q_k(z_k|x_i,\mu_k,\Sigma_k)=\frac{N(x_i|\mu_k,\Sigma_k)\alpha_k}{\sum_k N(x_i|\mu_k,\Sigma_k)\alpha_k}$</p>
<p>计算新的 ELBO 函数 </p>
<p>$ELBO(\Theta)=\sum_i\sum_k Q_k(z_k|x_i,\mu_k,\Sigma_k) log\frac{p(x_i|z_k=k,\mu_k,\Sigma_k)p(z_k=k)}{Q_k(z_k|x_i,\mu_k,\Sigma_k)}$</p>
<p>$=\sum_i\sum_k Q_k(z_k|x_i,\mu_k,\Sigma_k)log\left(\frac{\alpha_k}{Q_k(z_k|x_i,\mu_k,\Sigma_k)}\frac{1}{\sqrt{(2\pi)^d det(\Sigma_k)}}exp[-\frac{1}{2}(x_i-\mu_k)^T\Sigma_k^T(x_i-\mu_k)]\right)$</p>
<p><strong>M-step</strong><br>用更新过后的 $ELBO(\Theta)$ 对参数 $\alpha_k,\mu_k,\Sigma_k,k=1,2,…,K$ 分别求导，令导数等于 0，令 $Q_k(i)=Q_k(z_k|x_i,\mu_k,\Sigma_k)$ 最后得到参数更新公式</p>
<p>更新参数 $\alpha_k, k=1,2,…,K$，<br>$\alpha_k=\frac{\sum_i Q_k(i)}{N}$</p>
<p>更新参数 $\alpha_k, k=1,2,…,K$，<br>$\mu_k==\frac{\sum_i Q_k(i)x_i}{\sum_i Q_k(i)}$</p>
<p>更新参数 $\alpha_k, k=1,2,…,K$，<br>$\Sigma_k=\frac{\sum_i Q_k(i)(x_i-\mu_k)(x_i-\mu_k)^T}{\sum_i Q_k(i)}$</p>
<p>其中 $N$ 是数据点的数量（假设每个数据点都是独立同分布产生的），$K$ 是 GMM 中高斯分布的个数</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://wjchen.net/post/cn/gmm-em-cn.html">https://wjchen.net/post/cn/gmm-em-cn.html</a></li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>GMM</tag>
      </tags>
  </entry>
  <entry>
    <title>SVM模型</title>
    <url>/2021/06/16/Machine%20Learning/SVM%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="空间几何基础"><a href="#空间几何基础" class="headerlink" title="空间几何基础"></a>空间几何基础</h1><h2 id="点到平面距离公式"><a href="#点到平面距离公式" class="headerlink" title="点到平面距离公式"></a>点到平面距离公式</h2><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210616164127.png"></p>
<p>如图，有一个平面 $\alpha: $ax+by+cz+d=0$，它的法向量 $\vec n=(a,b,c)$（平面内任意一个向量与 $\vec n$ 的点积为 0），求平面外一点 $B=(x_1,y_1,z_1)$ 到平面 $\alpha$ 的距离</p>
<span id="more"></span>
<p>取平面内任意一点 $A=(x_0,y_0,z_0)$，则向量 $\overrightarrow{AB}=(x_1-x_0,y_1-y_0,z_1-z_0)$ ，点 $B$ 到平面 $\alpha$ 的距离等于 $|\overrightarrow{AB}|cos\theta$，而 $cos\theta=\frac{\vec n \cdot \overrightarrow{AB}}{|\vec n|| \overrightarrow{AB}|}$，</p>
<p>因此点 $B$ 到平面的距离 $h=\overrightarrow{AB}\cdot \frac{\vec n}{|\vec n|}=\left|(x_1-x_0,y_1-y_0,z_1-z_0)\cdot \frac{(a,b,c)}{\sqrt{a^2+b^2+c^2}} \right|=\frac{|a(x_1-x_0)+b(y_1-y_0)+c(z_1-z_0))|}{\sqrt{a^2+b^2+c^2}}$，</p>
<p>又 $ax_0+by_0+cz_0+d=0$，所以最终点 $B$ 到平面的距离为 $h=\frac{|ax_1+by_1+cz_1+d|}{\sqrt{a^2+b^2+c^2}}$,</p>
<p>推广到 n 维空间中点 $A=(x_1,x_2,…,x_n)$，超平面 $\pi$: $a_1y_1+a_2y_2+…+a_ny_n+d=0$，则点 $A$ 到平面 $\pi$ 的距离为 $\frac{|a_1x_1+a_2x_2+…+a_nx_n+d|}{\sqrt{ {a_1}^2+{a_2}^{2}+…+{a_n}^2}}$</p>
<h2 id="两个平面之间的距离"><a href="#两个平面之间的距离" class="headerlink" title="两个平面之间的距离"></a>两个平面之间的距离</h2><p>已知两个超平面 ${\pi}_1$: $a_1x_1+a_2x_2+…+a_nx_n+d_1=0$ 和超平面 ${\pi}_2: $a_1y_1+a_2y_2+…+a_ny_n+d_2=0$。<br>取 ${\pi}_1$ 中任意一点 $P(x_1,x_2,…,x_n)$，则 $P$ 到 $\pi_2$ 的距离为 $h=\frac{|a_1x_1+a_2x_2+…+a_nx_n+d_2|}{\sqrt{ {a_1}^2+{a_2}^2+…+{a_n}^2 }}$。由于 $P$ 在平面 $\pi_1$ 上，所以有 $a_1x_1+a_2x_2+…+a_nx_n+d_1=0$，最后 $h=\frac{|d_2-d_1|}{\sqrt{ {a_1}^2+{a_2}^2+…+{a_n}^2}}$</p>
<h1 id="SVM-间隔"><a href="#SVM-间隔" class="headerlink" title="SVM 间隔"></a>SVM 间隔</h1><h2 id="函数间隔"><a href="#函数间隔" class="headerlink" title="函数间隔"></a>函数间隔</h2><p>令 $w^Tx+b=0$ 为我们的划分超平面，对于任何一个数据点 $x$，它的标签为 $y\in [-1,1]$，我们规定，当 $w^Tx+b&gt;0$，$x$ 被划分为正例，当 $w^Tx+b&lt;0$，$x$ 被划分为反例。定义函数间隔为 </p>
<p>$\gamma(x) = y(w^Tx+b)=yf(x)$</p>
<p>当 $\gamma &gt; 0$，那么说明数据点 $x$ 被正确分类</p>
<p>那么 SVM 训练的目标为 $\hat \gamma = min\ \gamma(x_i), i = 1,2,…,n$</p>
<h2 id="几何间隔"><a href="#几何间隔" class="headerlink" title="几何间隔"></a>几何间隔</h2><p>由于函数间隔 $\hat\gamma$ 的值会随着参数 $w$ 和 $b$ 的缩放（超平面不变）而变化，比如 $w$ 和 $b$ 变成 $2w$ 和 $2b$，$f(x)$ 会变成 $2f(x)$，如果按照最小化函数间隔，永远求不出个最优的参数 $w$ 和 $b$。为此将目标给为最小化几何间隔</p>
<p>$\tilde \gamma=\frac{y(w^Tx+b)}{||w||}=\frac{yf(x)}{||w||}=\frac{\gamma(x)}{||w||}$</p>
<p>其中 $\frac{f(x)}{||w||}$ 其实就是点 $x$ 到超平面 $w^Tx+b=0$ 的几何距离</p>
<h2 id="最大间隔分类器"><a href="#最大间隔分类器" class="headerlink" title="最大间隔分类器"></a>最大间隔分类器</h2><p>对于我们的分类器，希望最大化 $max\ \tilde{\gamma}$，并且对所有的数据点要满足 $y_i(w^Tx_i)+b=\gamma(x_i)\geq \hat \gamma, i=1,2,…,n$。</p>
<p>这里我们可以取 $\hat \gamma=1$（这个值可以随意取一个大于 0 的数，参数 $b$ 可以在训练过程中调整），如此 SVM 的优化目标为 </p>
<p>$max\frac{1}{||w||},\ s.t.,\ y_i(w^Tx_i+b)\geq 1,i=1,2,…,n$</p>
<p>这个问题的优化目标就如下图所示</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210616205916.png"></p>
<h1 id="深入推导"><a href="#深入推导" class="headerlink" title="深入推导"></a>深入推导</h1><h2 id="线性可分问题"><a href="#线性可分问题" class="headerlink" title="线性可分问题"></a>线性可分问题</h2><p><strong>Max 问题变为 Min 问题</strong></p>
<p>$min\frac{1}{2}||w||^2,\ s.t.,\ y_i(w^Tx_i+b)\geq 1,i=1,2,…,n$</p>
<p><strong>对偶问题转化</strong></p>
<p>上面的问题是一个凸二次规划问题，可以直接用现成优化方法。还可以用朗格朗日对偶性，将原问题变化成它的对偶问题来求解。这样做的好处：（1）对偶问题更容易求解；（2）方便引入核函数</p>
<p>定义拉格朗日函数</p>
<p>$L(w,b,\alpha)=\frac{1}{2}||w||^2-\sum_{i=1}^n \alpha_i(y_i(w^Tx_i+b)-1)$</p>
<p>现在来看，我们的目标为 $\underset{w,b}{min}\ \underset{\alpha_i\geq 0}{max}\ L(w,b,\alpha)=p^*$</p>
<p>其中 $p^*$ 为问题的最优值。容易验证，如果有那个条件 $y_i(w^Tx_i+b)&lt;1$ 不满足，那么里面的 $max$ 问题就会趋向 $\infty$，只有当所有的条件都满足时，才能求出外面的 $min$ 问题，最小值为 $\frac{1}{2}||w||^2$</p>
<p>此时对换 $min$ 和 $max$ 就得到了原问题的对偶问题</p>
<p>$\underset{\alpha_i\geq 0}{max}\ \underset{w,b}{min}\ L(w,b,\alpha)=d^*$</p>
<p>其中 $d^*$ 为问题的最优值，并且满足 $d^<em>\leq p^</em>$。由这个对偶问题，从而实现先对 $w$ 和 $b$ 极小化，然后对 $\alpha_i$ 极大化</p>
<p><strong>注：</strong> 只有原问题能满足 KTT 条件才能转化为它的对偶问题来求解。<br>KTT 条件定义如下：</p>
<p>对于一个凸函数 $f(x)$，求解 $min\ f(x)$</p>
<p>$s.t. h_j(x)=0,j=1,…,p;\ g_k(x)\leq 0,k=1,…,q$</p>
<p>KTT 条件如下：</p>
<ol>
<li>$h_j(x)=0,j=1,…,p;\ g_k(x)\leq 0,k=1,…,q$</li>
<li>$\bigtriangledown f(x)+\sum_{j=1}^p \lambda_j\bigtriangledown h_j(x) + \sum_{k=1}^q \mu_k\bigtriangledown g_k(x) = 0, \lambda_j\neq 0,\mu_k\geq 0, \mu_kg_k(x)=0$</li>
</ol>
<p><strong>问题求解</strong></p>
<ol>
<li><p>固定 $\alpha_i$，最小化 $w$ 和 $b$</p>
<p> $\frac{\partial L}{\partial w}=0 \Rightarrow w=\sum_{i=1}^n \alpha_i y_i x_i$ </p>
<p> $\frac{\partial L}{\partial b}=0 \Rightarrow b=\sum_{i=1}^n \alpha_i y_i=0$</p>
<p> 代入 $L(w,b,\alpha)=\frac{1}{2}||w||^2-\sum_{i=1}^n \alpha_i(y_i(w^Tx_i+b)-1)$ 得到</p>
<p> $L(w,b,\alpha)$</p>
<p> $=\frac{1}{2}\sum_{i,j=1}^n \alpha_i\alpha_jy_iy_jx_i^Tx_j-\sum_{i,j=1}^n\alpha_i\alpha_jy_iy_jx_i^Tx_j-b\sum_{i=1}^n \alpha_i y_i+\sum_{i=1}^n \alpha_i$ </p>
<p> $=\sum_{i=1}^n \alpha_i-\frac{1}{2}\sum_{i,j=1}^n\alpha_i\alpha_jy_iy_jx_i^Tx_j$</p>
</li>
</ol>
<ol start="2">
<li><p>代入上一步求解的最优 $w^*$ 和 $b^*$，然后对 $\alpha$ 最大化</p>
<p> 由上一步求出了新的朗格朗日函数不包含 $w$ 和 $b$，得到：</p>
<p> $\underset{\alpha}{max}\sum_{i=1}^n \alpha_i-\frac{1}{2}\sum_{i,j=1}^n\alpha_i\alpha_jy_iy_jx_i^Tx_j$</p>
<p> $s.t.,\ \alpha_i\geq 0,i=1,…,n$</p>
<p> $\sum_{i=1}^n \alpha_i y_i=0$</p>
<p> 求得 $L(w,b,\alpha)$ 关于 $w$ 和 $b$ 最小化，以及对 $\alpha$ 的极大化之后，最后使用 SMO 算法求解对偶问题中的拉格朗日乘子 $\alpha$，由此可以求出 $\alpha_i$</p>
<p> 根据 $w=\sum_{i=1}^n \alpha_i y_i x_i$ 可求出 $w$, 然后通过 $b^*=y_j-\sum_{i=1}^n\alpha_i y_i(x_i^Tx_j),\alpha_j&gt;0$ 求出 $b$。而分类函数 $f(x)=w^Tx+b$，其中 $w=\sum_{i=1}^n \alpha_iy_ix_i$，代入得到分类函数 $f(x)=\sum_{i=1}^n \alpha_iy_i\langle x_i,x\rangle+b$</p>
</li>
</ol>
<h2 id="线性不可分问题"><a href="#线性不可分问题" class="headerlink" title="线性不可分问题"></a>线性不可分问题</h2><p>由上面的分类函数可以看出，新的数据点 $x^*$ 的分类，只需要计算它与训练数据点的内积即可（可用于推广 Kernel）。而 SVM 中的支持向量（supporting vectors）是对应 $\alpha_i\neq 0$ 的训练数据点。</p>
<p>感性理解就是，$x^*$ 分类其实只与分类超平面有关，而这个超平面只受支持向量的影响，所以其他的训练数据点不需要参与决策</p>
<p>理性理解，回到我们的拉格朗日乘式子，$\underset{\alpha_i\geq 0}{max}\ \frac{1}{2}||w||^2-\sum_{i=1}^n \alpha_i(y_i(w^Tx_i+b)-1)$</p>
<p>对于一个支持向量来说，$y_i(w^Tx_i+b)-1=0$，$\alpha_i$ 可以不为 0；对于非支持向量的数据点来说$y_i(w^Tx_i+b)-1&gt;0$， 为了求极大，必须满足 $\alpha_i=0$（$\alpha_i\geq 0$）</p>
<h2 id="松弛变量使用"><a href="#松弛变量使用" class="headerlink" title="松弛变量使用"></a>松弛变量使用</h2><p>加入松弛变量是为了解决离群点的问题，因为当训练数据中存在函数间隔大于 1 时，采用一个松弛变量来实现对一些数据点的软间隔</p>
<p>由此，原目标函数：</p>
<p>$max\ \frac{1}{2}||w||^2;\ y_i(w^Tx_i+b)\geq 1,i=1,…,n$</p>
<p>就变成了新的目标函数：</p>
<p>$max\ \frac{1}{2}||w||^2+C\sum_{i=1}^n \xi_i;\ y_i(w^Tx_i)-b\geq 1- \xi_i, \xi_i\geq 0,i=1,…,n$ </p>
<p>其中 $C&gt;0$ 用于平衡对两个目标：（1）最大化几何间隔；（2）使误分点尽量少。当 $C$ 很大时，对误分类的惩罚大（着重考虑减少误分点）；相反，就更重视最大化几何间隔</p>
<p>用拉格朗日乘数法对上面的新目标求对偶问题得</p>
<ol>
<li>拉格朗日函数</li>
</ol>
<p>$L(w,b,\alpha,\xi,\mu)=\frac{1}{2}||w||^2+C\sum_{i=1}^n \xi_i$</p>
<p>$-\sum_{i=1}^n\alpha_i(y_i(w^Tx_i+b)-1+\xi_i)-\sum_{i=1}^n\mu_i\xi_i$</p>
<ol start="2">
<li>对偶问题</li>
</ol>
<p>$\underset{\alpha}{min}\frac{1}{2}\sum_{i,j=1}^n \alpha_i\alpha_jy_iy_j(x_i^Tx_j)-\sum_{i=1}^n\alpha_i$</p>
<p>$s.t.\ \sum_{i=1}^n \alpha_i y_i=0,0 \leq \alpha_i\leq C,i=1,…,n$</p>
<ol start="3">
<li>求解<br>（1）求解得到最优 $\alpha^*=(\alpha_1^*,\alpha_2^*,…,\alpha_n^*)^T$</li>
</ol>
<p>（2）计算 $w^*=\sum_{i=1}^n\alpha_i^* y_ix_i$</p>
<p>（3）选择一个数据 $j,0&lt;\alpha_j^*&lt;C$，计算 $b^*=y_j-\sum_{i=1}^n y_i\alpha_i^*(x_i^Tx_j)$</p>
<p>（4）得到决策函数 $f(x)=sign({w^*}^Tx+b)$</p>
<p>软间隔支持向量<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210617113314.png"><br>软间隔支持向量可以在三个位置（1）间隔边界上；（2）间隔边界与分离超平面之间；（3）分离超平面误分的那一侧。<br>若 $a_i^*&lt;C$，则 $\xi_i=0$，支持向量 $x_i$ 恰好落在间隔边界上；若 $a_i^*=C, 0&lt;\xi_i&lt;1$，则分类正确，$x_i$ 在间隔边界与分离超平面之间；若 $a_i^*=C,\xi_i=1$，则 $x_i$ 在分离超平面上；若 $a_i^*=C,\xi_i &gt; 1$，则 $x_i$ 位于分离超平面误分一侧</p>
<h2 id="核函数"><a href="#核函数" class="headerlink" title="核函数"></a>核函数</h2><p>之前讲到对原问题求偶问题，第二优点就是方便引入核函数。核函数的作用主要是为了解决线性不可分的数据。它的思想是通过<strong>隐式</strong>地将低维空间的数据隐式到高维空间，然后对数据进行线性分割，但是只需要通过低维非线性计算既可以实现。</p>
<p>引入核函数后的目标函数</p>
<p>$\underset{\alpha}{min}\frac{1}{2}\sum_{i,j=1}^n \alpha_i\alpha_jy_iy_j\kappa(x_i^,x_j)-\sum_{i=1}^n\alpha_i$<br>$s.t.\ \sum_{i=1}^n \alpha_i y_i=0,0 \leq \alpha_i\leq C,i=1,…,n$</p>
<h2 id="SMO-Sequential-Minimal-Optimization-算法"><a href="#SMO-Sequential-Minimal-Optimization-算法" class="headerlink" title="SMO (Sequential Minimal Optimization) 算法"></a>SMO (Sequential Minimal Optimization) 算法</h2><p>SVM 推导过程：分类函数，最大化分类间隔，max1/||w||，min1/2||w||^2，凸二次规划，拉格朗日函数，转化为对偶问题，SMO算法，都为寻找一个最优解，一个最优分类平面</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://blog.csdn.net/v_JULY_v/article/details/7624837">支持向量机通俗导论</a></li>
<li>李航老师统计机器学习第2版</li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>“聚类指标”</title>
    <url>/2021/06/06/Machine%20Learning/%E2%80%9C%E8%81%9A%E7%B1%BB%E6%8C%87%E6%A0%87%E2%80%9D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>compactness：同一个簇内对象间的距离</p>
<p>separation：度量一个簇和其他簇的分离程度</p>
<p>connectivity：空间距离相近的对象放在同一聚类的程度</p>
<span id="more"></span>
<h1 id="Silhouette-Coefficient"><a href="#Silhouette-Coefficient" class="headerlink" title="Silhouette Coefficient"></a>Silhouette Coefficient</h1><p>衡量一个对象与同簇的对象的相似性对比它与其他簇的对象的相似性的程度</p>
<p>假设 $C_i$ 是一个包含了数据 $i$ 的簇，对于数据点 $i, i\in C_i$ 而言，有</p>
<p>$a(i)=\frac{1}{C_i|-1}\sum_{j\in C_i, i\neq j}d(i,j)$</p>
<p>$b(i)=\underset{k\neq i}{min}\frac{1}{C_k|}\sum_{j\in C_k}d(i,j)$</p>
<p>数据 $i$ 的 Silhouette 值定义为 $s(i)\frac{b(i)-a(i)}{max{a(i), b(i)}},\ if\ |C_i|&gt;1$; $s(i)=0,\ if \ |C_i|=1$，而 $-1\leq s(i)\leq 1$。当 $s(i)$ 越靠近 1，说明数据 $i$ 被聚类在越适合的簇中，若 $s(i)=0$，说明数据 $i$ 处在两个簇中间，若 $s(i)$ 越靠近 -1，说明数据 $i$ 很可能被错分了</p>
<p>对一个 $K$ 个簇的集合，整体的 Silhouette Coefficient 定义为</p>
<p>$SC=\underset{k}{max} \frac{1}{|C_k|}\sum_{i\in C_k} s(i)$</p>
<h1 id="Dunn-Index"><a href="#Dunn-Index" class="headerlink" title="Dunn Index"></a>Dunn Index</h1><p>对于一个具有 $K$ 个簇的集合，它的 Dunn Index 定义如下：</p>
<p>$DI=\frac{\underset{1\leq i&lt;j \leq K}{min}\delta(C_i, C_j)}{\underset{1\leq k \leq K}{max} \Delta_k}$</p>
<p>其中 $\delta(C_i, C_j)$ 指代簇间距离，$\Delta_k$ 指代簇内聚类（直径），这个值越小越好</p>
<h2 id="簇间距离的各种定义"><a href="#簇间距离的各种定义" class="headerlink" title="簇间距离的各种定义"></a>簇间距离的各种定义</h2><ol>
<li>两个簇之间最近的两个数据点之间的距离 $\delta(C_i, C_j)=\underset{x\in C_i, y\in C_j}{min}d(x,y)$</li>
<li>两个簇之间最远的两个数据点之间的距离 $\delta(C_i, C_j)=\underset{x\in C_i, y\in C_j}{max}d(x,y)$</li>
<li>两个簇中心的距离 $\delta(C_i, C_j)=d(\mu_i, \mu_j), \mu_k=\frac{\sum_{x\in C_k} x}{|C_k|}$</li>
</ol>
<h2 id="簇内聚类（直径）的各种定义"><a href="#簇内聚类（直径）的各种定义" class="headerlink" title="簇内聚类（直径）的各种定义"></a>簇内聚类（直径）的各种定义</h2><ol>
<li>簇内距离最大的数据对的聚类 $\Delta_k = \underset{x,y\in C_k}{max} d(x,y)$ </li>
<li>簇内所有词对的平均距离 $\Delta_k = \frac{2}{|C_k|(|C_k|-1)}\sum_{x,y\in C_k,x\neq y}d(x,y)$</li>
<li>簇内所有点到簇中心的聚类 $\Delta_k = \frac{\sum_{x\in C_k} d(x,\mu_k)}{|C_k|}$</li>
</ol>
<h1 id="Rand-Index-需要-Gold-Standard：一个人工分好的簇集合"><a href="#Rand-Index-需要-Gold-Standard：一个人工分好的簇集合" class="headerlink" title="Rand Index (需要 Gold Standard：一个人工分好的簇集合)"></a>Rand Index (需要 Gold Standard：一个人工分好的簇集合)</h1><p>假设一个集合 $S={o_1, o_2,…,o_n}$ 包含 $n$ 个元素。对它有一个划分 $X={X_1,X_2,…,X_r}$，包含了 $r$ 个子集；一个划分 $Y={Y_1,Y_2,…,Y_s}$，包含了 $s$ 个子集，定义如下几个符号：</p>
<h2 id="Rand-Index"><a href="#Rand-Index" class="headerlink" title="Rand Index"></a>Rand Index</h2><p>$a$: 出现在 $X$ 中相同子集，并且出现在 $Y$ 中相同子集的元素对的个数 $(x,y), x\in X_i, y\in X_i, x\in Y_j, y\in Y_j$ </p>
<p>$b$: 出现在 $X$ 中不同子集，并且出现在 $Y$ 中不同子集的元素对的个数 $(x,y), x\in X_i, y\notin X_i, x\notin Y_j, y\in Y_j$ </p>
<p>$c$: 出现在 $X$ 中相同子集，并且出现在 $Y$ 中不同子集的元素对的个数 $(x,y), x\in X_i, y\in X_i, x\notin Y_j, y\in Y_j$ </p>
<p>$d$: 出现在 $X$ 中不同子集，并且出现在 $Y$ 中相同子集的元素对的个数 $(x,y), x\notin X_i, y\in X_i, x\in Y_j, y\in Y_j$ </p>
<p>Rand Index 的定义为 $RI=\frac{a+b}{a+b+c+d}=\frac{a+b}{\tbinom{n}{2}}=\frac{TP+TN}{TP+TN+FP+FN}$，它衡量了两个划分的相似程度</p>
<h2 id="Adjusted-Rand-Index"><a href="#Adjusted-Rand-Index" class="headerlink" title="Adjusted Rand Index"></a>Adjusted Rand Index</h2><table>
<thead>
<tr>
<th></th>
<th>$Y_1$</th>
<th>$Y_2$</th>
<th>…</th>
<th>$Y_s$</th>
<th>sum</th>
</tr>
</thead>
<tbody><tr>
<td><strong>$X_1$</strong></td>
<td>$n_{11}$</td>
<td>$n_{2}$</td>
<td>…</td>
<td>$n_{1s}$</td>
<td>$a_{1}$</td>
</tr>
<tr>
<td><strong>$X_2$</strong></td>
<td>$n_{21}$</td>
<td>$n_{22}$</td>
<td>…</td>
<td>$n_{2s}$</td>
<td>$a_{2}$</td>
</tr>
<tr>
<td><strong>…</strong></td>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
<td>…</td>
</tr>
<tr>
<td><strong>$X_r$</strong></td>
<td>$n_{r1}$</td>
<td>$n_{r2}$</td>
<td>…</td>
<td>$n_{rs}$</td>
<td>$a_{r}$</td>
</tr>
<tr>
<td><strong>sum</strong></td>
<td>$b_{1}$</td>
<td>$b_{2}$</td>
<td>…</td>
<td>$b_{s}$</td>
<td></td>
</tr>
</tbody></table>
<p>Adjusted Rand Index 的定义为 $ARI=\frac{\sum_{ij}\tbinom{n_{ij}}{2}-\left[\sum_i \tbinom{a_i}{2} \sum_j \tbinom{b_j}{2}\right]/\tbinom{n}{2}}{\frac{1}{2}\left[\sum_i \tbinom{a_i}{2} \sum_j \tbinom{b_j}{2}\right]-\left[\sum_i \tbinom{a_i}{2} \sum_j \tbinom{b_j}{2}\right]/\tbinom{n}{2}}$，它是基于 Rand Index 的改进，用于应对当 $r\neq s$ 的情况</p>
<h1 id="Micro-Precision-Recall-F1-需要-Gold-Standard：一个人工分好的簇集合"><a href="#Micro-Precision-Recall-F1-需要-Gold-Standard：一个人工分好的簇集合" class="headerlink" title="Micro Precision, Recall, F1 (需要 Gold Standard：一个人工分好的簇集合)"></a>Micro Precision, Recall, F1 (需要 Gold Standard：一个人工分好的簇集合)</h1><p>这个评判指标完全和分类中的一样，<a href="https://jason-hao.cyou/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%88%86%E7%B1%BB%E6%8C%87%E6%A0%87.html">链接在这里</a> 唯一不同的是如何决定 cluster 跟 Gold Standard 中的哪个 class 去计算指标，相对于先要给出 cluster 的class 标签。大致有两种方式：（1）由人工决定，这在一些词聚类上可以使用；（2）用 majority voting $\underset{1\leq k\leq K}{argmax}|Cluster_i \cap Class_k|$ 来决定 cluster $i$ 的 class 标签</p>
<h1 id="Topic-Coherence"><a href="#Topic-Coherence" class="headerlink" title="Topic Coherence"></a>Topic Coherence</h1><p><a href="https://jason-hao.cyou/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E4%B8%BB%E9%A2%98%E6%8C%87%E6%A0%87.html">Reference Page</a></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://en.wikipedia.org/wiki/Silhouette_(clustering)">https://en.wikipedia.org/wiki/Silhouette_(clustering)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Dunn_index">https://en.wikipedia.org/wiki/Dunn_index</a></li>
<li><a href="https://en.wikipedia.org/wiki/Rand_index">https://en.wikipedia.org/wiki/Rand_index</a></li>
<li><a href="http://qpleple.com/topic-coherence-to-evaluate-topic-models/">http://qpleple.com/topic-coherence-to-evaluate-topic-models/</a></li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
      <tags>
        <tag>聚类</tag>
        <tag>clustering</tag>
      </tags>
  </entry>
  <entry>
    <title>主题指标</title>
    <url>/2021/06/07/Machine%20Learning/%E4%B8%BB%E9%A2%98%E6%8C%87%E6%A0%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通常 Topic Model 对文本数据集建模，模型对训练数据集拟合的程度自然而然的使用来作为衡量模型好坏的指标，但是这样学出来的主题通常与人对主题的理解有较大差异。由此提出了一些用于衡量 Topic 质量的指标，主要分为两种（1）intrinsic measures；（2）extrinsic measures</p>
<span id="more"></span>
<p>在这篇最新的 <a href="https://svn.aksw.org/papers/2015/WSDM_Topic_Evaluation/public.pdf">paper</a> 中，主题质量的衡量分为四个步骤：</p>
<ol>
<li>Segmentation of Word Subsets 某个主题内词子集的划分</li>
<li>Probability Estimation 基本的概率值的计算</li>
<li>Confirmation Measure 支持度计算</li>
<li>Aggregation 整合所有主题上的主题指标</li>
</ol>
<h1 id="1-Segmentation-of-Word-Subsets"><a href="#1-Segmentation-of-Word-Subsets" class="headerlink" title="1 Segmentation of Word Subsets"></a>1 Segmentation of Word Subsets</h1><p>一个词集合 $W$ 的一致性（Coherence）是用于描述主题内一个词子集被其他词子集支持的程度。本步骤主要的任务是构造一个词子集对集合 $S$，数学表示为 $S={(W’, W^*)}, W’\cap W^* = \emptyset，W’\subseteq W, W^* \subseteq W$ </p>
<h1 id="2-Probability-Estimation"><a href="#2-Probability-Estimation" class="headerlink" title="2 Probability Estimation"></a>2 Probability Estimation</h1><p>考虑数据单元的粒度大小，对于词有四个不同的概率计算方法</p>
<p>$P_{bd}$: Boolean Document Estimation. 在文档级别上对出现的词只计数一次</p>
<p>$P_{bp}$: Boolean Paragraph Estimation. 在段落级别上对出现的词只计数一次</p>
<p>$P_{bs}$: Boolean Sentence Estimation. 在句子级别上对出现的词只计数一次</p>
<p>$P_{sw}$: Boolean Sliding Window Estimation. 在窗口（窗口大小可自定义）级别上对出现的词只计数一次</p>
<p>概率 $P(w_i, w_j)=\frac{Count(w_i,w_j)}{|D|}$</p>
<p>概率 $P(w_i)=\frac{Count(w_i)}{|D|}$</p>
<p>其中 $Count(w_i,w_j)$ 是同时出现 $w_i$ 和 $w_j$ 的数据单元个数，$Count(w_i)$ 是包含 $w_i$ 的数据单元的数量，$|D|$ 是数据集中数据单元的数量。当数据单元的粒度为文档的时候，$|D|$ 就是总的文档的数量；当粒度为 Window 的时候，$|D|$ 就是总的窗口的数量</p>
<h1 id="3-Confirmation-Measure"><a href="#3-Confirmation-Measure" class="headerlink" title="3 Confirmation Measure"></a>3 Confirmation Measure</h1><p>这个步骤就是真正定义 topic score 衡量主题质量的方法了，各种 Topic Coherence 计算方法在这个步骤上不同，基于上一步中的概率公式来计算</p>
<h2 id="UMass-Mimno11a"><a href="#UMass-Mimno11a" class="headerlink" title="UMass Mimno11a"></a>UMass <a href="">Mimno11a</a></h2><p>$score(w_i,w_j)=log\frac{P_{bd}(w_i,w_j)+\epsilon}{P_{bd}(w_j)}, j&lt;i$</p>
<h2 id="UCI-Newman10a"><a href="#UCI-Newman10a" class="headerlink" title="UCI Newman10a"></a>UCI <a href="">Newman10a</a></h2><p>$score(w_i,w_j)=log\frac{P_{sw}(w_i,w_j)+\epsilon}{P_{sw}(w_i)P_{sw}(w_j)}, j&lt;i$</p>
<h2 id="NPMI"><a href="#NPMI" class="headerlink" title="NPMI"></a>NPMI</h2><p>$score(w_i,w_j)=\frac{log\frac{P_{sw}(w_i,w_j)+\epsilon}{P_{sw}(w_i)P_{sw}(w_j)}}{-log(P_{sw}(w_i,w_j))+\epsilon}, j&lt;i$</p>
<h2 id="Word2vec-based-Similarity-Score"><a href="#Word2vec-based-Similarity-Score" class="headerlink" title="Word2vec based Similarity Score"></a>Word2vec based Similarity Score</h2><p>$score(w_i,w_j) = cosine(V_{w_i}, V_{w_j}), j&lt;i$</p>
<h2 id="TF-IDF-based-improvement-for-UMass"><a href="#TF-IDF-based-improvement-for-UMass" class="headerlink" title="TF-IDF based improvement for UMass"></a>TF-IDF based improvement for UMass</h2><p>$score(w_i,w_j) = log(\frac{\sum_{d=1}^{|D|} \left(tfidf(d,w_i)\times tfidf(d,w_j)+\epsilon\right)}{\sum_{d=1}^{|D|} tfidf(d,w_j)}), j&lt;i$</p>
<h2 id="TBuckets"><a href="#TBuckets" class="headerlink" title="TBuckets"></a>TBuckets</h2><p><a href="https://www.aclweb.org/anthology/E17-2070/">Reference Paper</a></p>
<h1 id="4-Aggregation"><a href="#4-Aggregation" class="headerlink" title="4 Aggregation"></a>4 Aggregation</h1><p>上面的三个步骤是针对一个主题的计算方法，第四步是为了整合多个 Topic 上的得分。比如和取多个主题得分的均值，中位数或者几何中心等等</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://www.aclweb.org/anthology/D12-1087.pdf">Exploring Topic Coherence over many models and many topics 2012</a></li>
<li><a href="https://svn.aksw.org/papers/2015/WSDM_Topic_Evaluation/public.pdf">Exploring the Space of Topic Coherence Measures 2015</a></li>
<li><a href="https://radimrehurek.com/gensim/models/coherencemodel.html">Gensim Implements of Topic Coherence Measurements</a></li>
<li><a href="https://labs.imaginea.com/how-to-measure-topic-coherence/">https://labs.imaginea.com/how-to-measure-topic-coherence/</a></li>
<li><a href="http://qpleple.com/topic-coherence-to-evaluate-topic-models/">http://qpleple.com/topic-coherence-to-evaluate-topic-models/</a></li>
<li><a href="http://qpleple.com/bib/#Newman10a">http://qpleple.com/bib/#Newman10a</a></li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
  </entry>
  <entry>
    <title>朴素贝叶斯法</title>
    <url>/2021/05/31/Machine%20Learning/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span>

<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>数据集：$D={(x_1, y_1), (x_2, y_2), …, (x_N, y_N)}$. 其中 $x\in X, X\subseteq \mathbf{R}^n$; $y\in Y, Y={c_1, C_2, …, C_K}$. </p>
<p>当给定一个新的数据 $x$，它的分类是什么？<br>即求 $P(Y=c_k|X=x)=\frac{P(Y=c_k)P(X=x|Y=c_k)}{P(X=x)}=\frac{P(Y=c_k)P(X=x|Y=c_k)}{\sum_{k’}P(Y=c_{k’})P(X=x|Y=c_{k’})}$</p>
<h1 id="问题建模"><a href="#问题建模" class="headerlink" title="问题建模"></a>问题建模</h1><p>为此对于上面的问题，最重要的是对先验概率 $P(Y=c_k), k=1,2,…,K$ 和条件概率 $P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},…,X^{(n)}=x^{(n)}|Y=c_k), k=1,2,…,K$ 进行建模，或者说对联合概率 $P(X,Y)=P(Y)P(X|Y)$ 进行建模. </p>
<p>最终 $x$ 的分类为 $y=f(x)=\underset{c_k}{argmax}\frac{P(Y=c_k)P(X=x|Y=c_k)}{\sum_{k’}P(Y=c_{k’})P(X=x|Y=c_{k’})}$</p>
<h1 id="条件独立性假设"><a href="#条件独立性假设" class="headerlink" title="条件独立性假设"></a>条件独立性假设</h1><p>假设 $x$ 的每一个维度都有 $V$ 个取值，那么所需要的参数个数是 $K\times V^n$, 为此，朴素贝叶斯对条件概率分布做了条件独立性假设，令<br>$P(X=x|Y=c_k)=P(X^{(1)}=x^{(1)},…,X^{(n)}=x^{(n)}|Y=c_k)=\prod_{j=1}^n P(X^{(j)}=x^{(j)}|Y=c_k)$，这样联合概率的参数个数变为了 $K\times n \times V$</p>
<h1 id="参数估计"><a href="#参数估计" class="headerlink" title="参数估计"></a>参数估计</h1><h2 id="最大后验概率估计"><a href="#最大后验概率估计" class="headerlink" title="最大后验概率估计"></a>最大后验概率估计</h2><p>对于先验概率 $P(Y=c_k)=\frac{\sum_{i=1}^N I(y_i=c_k)}{N}, k=1,2,…,K$</p>
<p>对于条件概率 $P(X^{(j)}=a_{jv}|Y=c_k)=\frac{\sum_{i=1}^N I(a_{jv}, y_i=c_k)}{\sum_{i=1}^N I(y_i=c_k)}, j=1,2,…,n; v=1,2,…,V; k=1,2,…,K$</p>
<h2 id="贝叶斯估计"><a href="#贝叶斯估计" class="headerlink" title="贝叶斯估计"></a>贝叶斯估计</h2><p>对于先验概率 $P(Y=c_k)=\frac{\sum_{i=1}^N I(y_i=c_k)}{N}, k=1,2,…,K$</p>
<p>对于条件概率 $P(X^{(j)}=a_{jv}|Y=c_k)=\frac{\sum_{i=1}^N I(a_{jv}, y_i=c_k)+\lambda}{\sum_{i=1}^N I(y_i=c_k)+V\lambda}, j=1,2,…,n; v=1,2,…,V; k=1,2,…,K$</p>
<p>为每个特征维度 $x^{(j)}$ 的每种取值，预先存在 $\lambda$ 个样例，这样对那些没有出现过的样例的概率进行平滑，不至于概率为 0，当 $\lambda=1$ 时，称为拉普拉斯平滑</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li>《统计学习方法第2版》</li>
</ol>
]]></content>
      <categories>
        <category>Machine Learning</category>
      </categories>
  </entry>
  <entry>
    <title>How to write a quilified academic paper?</title>
    <url>/2021/07/05/Research%20Method/How-to-write-a-quilified-academic-paper/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>This blog is a water-tight version of Zhiyuanliu’s tutorial on how to write a qualified NLP paper.</p>
<h1 id="Process-of-Paper-Publication"><a href="#Process-of-Paper-Publication" class="headerlink" title="Process of Paper Publication"></a>Process of Paper Publication</h1><p>Usually, a classic process of paper publication is :</p>
<p>Proposal $\longrightarrow$ Model Design $\longrightarrow$ Coding $\longleftrightarrow$ Parameter Tuning $\longrightarrow$ Paper Writing $\longleftrightarrow$ Paper Reediting $\longrightarrow$ Paper Sumbmitting $\longrightarrow$ Presentation</p>
<p>An excellet paper = An excellent work (step 1) + An excellent Writting (step 2)</p>
<span id="more"></span>

<h1 id="Classic-Framwork-of-a-NLP-paper"><a href="#Classic-Framwork-of-a-NLP-paper" class="headerlink" title="Classic Framwork of a NLP paper"></a>Classic Framwork of a NLP paper</h1><p>Most of the conference papers (8-10 pages) should include 6 components: Abstract, Introduction, Related Work, Method, Experiment, and Conclusion.</p>
<ul>
<li>Abstract: Using 100-200 words to describe clearly the task, existing challenges, your methodology, your experiment results, and finally, your conclusion.</li>
<li>Introduction: Leaving 1 page to detail the research problem, existing state-of-the-arts, main challenges, typology of methods, specific methods in each branch, and overall performance of each method. </li>
<li>Related Work: Using 0.5-1 page for related works, distinguish the differences between your work and others.</li>
<li>Method: Using 2-3 pages to introduce all details of your proposal.</li>
<li>Experiment: Using 2-3 pages to recommend the datasets, experimental criteria, parameter setting, experimental results, and analysis of these results. </li>
<li>Conclusion: Summing up the main work and contributions, and proposing some possible directions for the future.</li>
</ul>
<p>tips:</p>
<ol>
<li>Writing in the interest of readers. Remember to describe all new concepts in your paper, and detail the work to the extend that can your reader easily to grap your idea.</li>
<li>Writing with rigorous logic. Guarantee the consistency and coherence of your chapeters, paragraphs, and sentences. </li>
</ol>
<p>For example. (1) If you mentioned 3 challenges in your introduction, then, make sure you have 3 components in your proposal to deal with all challenges, 3 algorithms in your method part, and 3 types of experiments to verifying each of your algorithms; (2) You should clear the strctures of your paragraphs, whehter they are organized parallelly, or incrementally. Make sure there is a sentence or adverb to connect paragraphs or sentences. </p>
<h1 id="How-to-write-Abstract-and-Introduction-part"><a href="#How-to-write-Abstract-and-Introduction-part" class="headerlink" title="How to write Abstract and Introduction part"></a>How to write Abstract and Introduction part</h1><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><ol>
<li>Problem description and the importance of solving it. For a well-known problem, you don’t need to emphasis much. However, for a new research problem, you should write more words to highlight the importance of this problem.</li>
<li>Existing Works. Standing upon the gaint’s shoulder, introduce the representative of all methods. You are going to improve the representative.</li>
<li>Presenting challenges and shortcomings of the representative. Make objective criticism on those works.</li>
<li>How can your method solve those challenges you mentioned before? </li>
<li>Proofing that your method can work better considering those challenges. </li>
<li>Summing up the main contributions or your work with precise and concise sentences.</li>
</ol>
<h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>Abstract can be view as a brief of your introduction. But you should paraphrase the content in introduction part. You can see clearly the conrespondence between abstract and introduction. </p>
<h1 id="How-to-write-Method-part"><a href="#How-to-write-Method-part" class="headerlink" title="How to write Method part"></a>How to write Method part</h1><ol>
<li>You should introduce the total framework of your method, which offers an overview of your work. Then, give a mathematical formula to describe your prolbem if possible. All notations you going to use should be listed. Finally, introduce all components of your method.</li>
<li>You detail every component from the whole to the part, and bold the title of each part. This will navigate the reader to look through your content with a clear clue.</li>
</ol>
<p>Make the description of framework different from what has been mentioned in introduction part. The description here should be correlated with that in introduction part, but offers more details. Another thing is that you should explain every new notation explicitly. </p>
<h1 id="How-to-write-Experiment-part"><a href="#How-to-write-Experiment-part" class="headerlink" title="How to write Experiment part"></a>How to write Experiment part</h1><p>Before posting the experimental results, you should mention the datasets you used, those criteria you chosen, and all baselines you compared in your expriments. </p>
<p>For presenting your experiments. You should mainly focus on valid the effectiveness of your method on the challenges you dealing with. That’s means your method should be proofed to improve the performance after using it. However, Comparison with the most recent state-of-the-art is not required. </p>
<p>In order to present the advantage and characteristic of your method. You can do some experiment to test the <strong>hyperparameter effects</strong>, <strong>Ablation Test</strong> (how much contribution each component made), <strong>Impact of Datsets</strong> (few-shot, class-imbalanced), <strong>Error Analysis</strong> (limitation of your method, where your method fails), <strong>Case study</strong> (strength of your method, where your method works best) and so on.</p>
<h1 id="How-to-write-Related-Work-part"><a href="#How-to-write-Related-Work-part" class="headerlink" title="How to write Related Work part"></a>How to write Related Work part</h1><p>The function of this part is to conclude, classify, and analyse the existing works. The content can be organized chronically or taxonomically. The content should emphasis the challenges they tackled, and the problems they didn’t fix. Finally, you should highlight the differences of your method compared with others. </p>
<h1 id="How-to-write-Conclusion"><a href="#How-to-write-Conclusion" class="headerlink" title="How to write Conclusion"></a>How to write Conclusion</h1><p>Conclusion is used to summarize contributions and the results to support those contributions. Additionally, one may further possible research topics for future. </p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://mp.weixin.qq.com/s/X48Cm58eub_sULlLRk-VIA">https://mp.weixin.qq.com/s/X48Cm58eub_sULlLRk-VIA</a></li>
</ol>
]]></content>
      <categories>
        <category>Research Method</category>
      </categories>
      <tags>
        <tag>Writing</tag>
      </tags>
  </entry>
  <entry>
    <title>信息论</title>
    <url>/2021/05/31/Probability/%E4%BF%A1%E6%81%AF%E8%AE%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="自信息"><a href="#自信息" class="headerlink" title="自信息"></a>自信息</h1><p>量化事件的信息量<br>$I(X=x)=-log p(X=x)$</p>
<span id="more"></span>
<h1 id="信息熵"><a href="#信息熵" class="headerlink" title="信息熵"></a>信息熵</h1><p>对概率分布不确定性总量的量化（信息量的期望）：</p>
<p>$H(X) = E_{X}(I(X))=-\sum_{x\in X}p(X=x)logp(X=x)$</p>
<h1 id="条件熵"><a href="#条件熵" class="headerlink" title="条件熵"></a>条件熵</h1><p>表示在已知随机变量 X 的条件下，随机变量 Y 的不确定性（熵）</p>
<p>$H(Y|X)=\sum_{x\in X} P(X=x)H(Y|X=x)$</p>
<h1 id="信息增益"><a href="#信息增益" class="headerlink" title="信息增益"></a>信息增益</h1><p>某个随机变量的信息熵-该变量的条件熵</p>
<p>$IG(Y,X)=H(Y)-H(Y|X)$</p>
<p>该方法的决策树 ID3 所选择的特征会偏好于属性值较多的特征</p>
<h1 id="Gini-系数"><a href="#Gini-系数" class="headerlink" title="Gini 系数"></a>Gini 系数</h1><p>将熵定义中的 $-log(p(x))$ 替换成 $1-p(x)$</p>
<p>$Gini(X)= \sum_{x\in X}p(X=x) (1-p(X=x))=1-\sum_{x\in X}p(X=x)$<br>基于 Gini 系数的决策树同样具有偏好于属性值较多的特征的问题</p>
<h1 id="信息增益率"><a href="#信息增益率" class="headerlink" title="信息增益率"></a>信息增益率</h1><p>$GainRatio(Y,X) = IG(Y,X)/H(X)$</p>
<p>直接采样该方法的决策树又会偏好属性取值较少的特征。因此，决策树 C4.5 先通过一遍筛选，先把信息增益低于平均水平的属性剔除掉，之后从剩下的属性中选择信息增益率最高的.</p>
<h1 id="交叉熵"><a href="#交叉熵" class="headerlink" title="交叉熵"></a>交叉熵</h1><p>P 为某样本真实分布，Q 为该样本的估计分布，如果用估计分布 Q 来表示真实分布 P 的平均编码长度就是交叉熵，当我们对分布估计不准确时，总会引入额外的不必要信息期望（可以理解为引入了额外的偏差）</p>
<p>$H(P, Q)=-\sum_{x}P(x)log(Q(x))$</p>
<h1 id="相对熵（KL散度）"><a href="#相对熵（KL散度）" class="headerlink" title="相对熵（KL散度）"></a>相对熵（KL散度）</h1><p>用估计的概率分布来表示真实分布多使用的信息量。估计分布表示真实分布所用的平均编码长度-用真实分布编码的平均长度=相对熵</p>
<p>$D(P|Q)=KL(P,Q)=H(P,Q)-H(P)\=-\sum_{x}P(x)log(Q(x))+sum_{x}P(x)logP(x)\=\sum_{x}P(x)log\frac{P(x)}{Q(x)}$</p>
<h1 id="互信息"><a href="#互信息" class="headerlink" title="互信息"></a>互信息</h1><p>两个随机变量的联合分布 (P) 与它们的独立分布的乘积 (Q) 之间的相对熵，<br>两事件的互信息为各自事件单独发生所代表的信息量之和减去两事件同时发生所代表的信息量之后剩余的信息量，这表明了两事件单独发生给出的信息量之和是有重复的，互信息度量了这种重复的信息量大小</p>
<p>$I(X;Y)=\sum_{x\in X}\sum_{y \in Y} p(x,y)\frac{p(x,y)}{p(x)p(y)}$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210604172829.png"></p>
<h1 id="困惑度"><a href="#困惑度" class="headerlink" title="困惑度"></a>困惑度</h1><p>给定语言L的样本 $l_1^n=l_1,l_2,…,l_n$，模型对数据的困惑度为</p>
<p>$2^{H(L,q)}\approx 2^{-\frac{1}{n}log q(l_1^n)}={[q(l_1^n)]}^{-\frac{1}{n}}$</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://baike.baidu.com/item/%E7%9B%B8%E5%AF%B9%E7%86%B5/4233536?fr=aladdin">https://baike.baidu.com/item/%E7%9B%B8%E5%AF%B9%E7%86%B5/4233536?fr=aladdin</a></li>
<li><a href="https://baike.baidu.com/item/%E4%BA%92%E4%BF%A1%E6%81%AF/7423853?fr=aladdin">https://baike.baidu.com/item/%E4%BA%92%E4%BF%A1%E6%81%AF/7423853?fr=aladdin</a></li>
<li><a href="https://www.zhihu.com/question/41252833">https://www.zhihu.com/question/41252833</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/136100996">https://zhuanlan.zhihu.com/p/136100996</a></li>
</ol>
]]></content>
      <categories>
        <category>Probability</category>
      </categories>
      <tags>
        <tag>信息论</tag>
        <tag>熵</tag>
      </tags>
  </entry>
  <entry>
    <title>github 图床 + typora 自动上传</title>
    <url>/2021/05/03/Blog%20Building/github%20%E5%9B%BE%E5%BA%8A%20typora%20%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="配置-Github-Repository"><a href="#配置-Github-Repository" class="headerlink" title="配置 Github Repository"></a>配置 Github Repository</h1><p>创建仓库 (Repository)，注意选择为 public，设置为 private，可以上传，但是图片链接没办法访问。</p>
<p>注意如果你的Picgo中配置的分支是 “master“，你一定把新建的分支改名为 ”master”。否则，会报错：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">StatusCodeError</span>: <span class="number">404</span> - &#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;Branch master not found&quot;</span>,<span class="string">&quot;documentation_url&quot;</span>:<span class="string">&quot;https://docs.github.com/rest/reference/repos#create-or-update-file-contents&quot;</span>&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508220511.png"></p>
<h1 id="配置-Picgo"><a href="#配置-Picgo" class="headerlink" title="配置 Picgo"></a>配置 Picgo</h1><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508214232.png"></p>
<figure class="highlight xl"><table><tr><td class="code"><pre><span class="line">说明</span><br><span class="line"><span class="number">1</span>. 设置仓库名：你的 Github 账号名/你的放图片的仓库名称</span><br><span class="line"><span class="number">2</span>. 设置分支名：这里填的是 <span class="function"><span class="title">master</span>，一定要检查你的仓库新建之后一定要更改你原有的分支名称 main -&gt;</span> master. 也可以直接用 main 分支填在这里</span><br><span class="line"><span class="number">3</span>. 设置T<span class="function"><span class="title">oken</span>：进入你的 GitHub 账号 -&gt;</span> <span class="function"><span class="title">settting</span> -&gt;</span> D<span class="function"><span class="title">eveloper</span> settings -&gt;</span> P<span class="function"><span class="title">ersonal</span> access tokens -&gt;</span> <span class="function"><span class="title">generate</span> new token -&gt;</span> Generate token 绿色按钮</span><br><span class="line"><span class="number">4</span>. 指定存储路径：在你的仓库中放图片的文件夹（会自动新建）</span><br><span class="line"><span class="number">5</span>. 设置自定义域名：一个免费的CDN服务器，用于加速你的 Github 访问速度。设置地址为：https:<span class="comment">//cdn.jsdelivr.net/gh/你的 Github 账号名/你的放图片的仓库名称</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>第 3 步中的截图<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508214915.png"></p>
<h1 id="为-typora-设置-PicGo-自动上传"><a href="#为-typora-设置-PicGo-自动上传" class="headerlink" title="为 typora 设置 PicGo 自动上传"></a>为 typora 设置 PicGo 自动上传</h1><p>typora 使用 Picgo 要先设置语言为中文，才能有 Picgo 选项，否则只有 Picgo-Core (commend line) 选项。<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508220617.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li>typora 官方图片上传 PicGo.app (Chinese Language Only) <a href="https://support.typora.io/Upload-Image/#option-2-config-via-cli">https://support.typora.io/Upload-Image/#option-2-config-via-cli</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1651601">https://cloud.tencent.com/developer/article/1651601</a></li>
</ol>
]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客界面样式优化</title>
    <url>/2021/05/09/Blog%20Building/hexo%E5%8D%9A%E5%AE%A2%E7%95%8C%E9%9D%A2%E6%A0%B7%E5%BC%8F%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="修改分类页面样式"><a href="#修改分类页面样式" class="headerlink" title="修改分类页面样式"></a>修改分类页面样式</h1><p>在 hexo/source/_data/styles.styl 添加下面内容。(只适合黑色主题)</p>
<span id="more"></span>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 分类&amp;&amp;标签 页面样式</span><br><span class="line"><span class="selector-class">.post-block</span><span class="selector-class">.page</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line">// 分类页面page</span><br><span class="line"><span class="selector-class">.category-all-page</span> &#123;</span><br><span class="line">    //<span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    //<span class="attribute">background-color</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">30px</span> <span class="number">60px</span> <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-all-title</span> &#123;</span><br><span class="line">    //<span class="attribute">font-family</span>: Impact;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">3px</span> solid <span class="number">#fcfcfc</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-all</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: $red;</span><br><span class="line">    <span class="attribute">font-family</span>: Helvetica, Verdana, sans-serif;</span><br><span class="line">    // <span class="attribute">text-transform</span>: uppercase;</span><br><span class="line">    -webkit-<span class="attribute">transition</span>: all <span class="number">0.5s</span> ease;</span><br><span class="line">    -moz-<span class="attribute">transition</span>: all <span class="number">0.5s</span> ease;</span><br><span class="line">    -o-<span class="attribute">transition</span>: all <span class="number">0.5s</span> ease;</span><br><span class="line">    -ms-<span class="attribute">transition</span>: all <span class="number">0.5s</span> ease;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="标签页面样式"><a href="#标签页面样式" class="headerlink" title="标签页面样式"></a>标签页面样式</h1><p>在 hexo/source/_data/styles.styl 文件加入下面样式。(只使用于黑色主题)</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.tag-cloud-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    //<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="number">#6f42c1</span>, <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="number">#d9534f</span>;</span><br><span class="line">    //<span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>: $red;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">8px</span>;</span><br><span class="line">    //<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">193</span>,<span class="number">66</span>,<span class="number">92</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="阅读全文按钮样式"><a href="#阅读全文按钮样式" class="headerlink" title="阅读全文按钮样式"></a>阅读全文按钮样式</h1><p>next 在需要显示摘要的地方加上 <!--more--> ，就不会显示全文，在 hexo/source/_data/styles.styl 中写入下面内容，修改默认的 Read More 按钮样式。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// <span class="selector-attr">[Read More]</span>按钮样式</span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#555</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">border</span>: none <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: unset;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, <span class="number">#a166ab</span> <span class="number">0%</span>, <span class="number">#ef4e7b</span> <span class="number">25%</span>, <span class="number">#f37055</span> <span class="number">50%</span>, <span class="number">#ef4e7b</span> <span class="number">75%</span>, <span class="number">#a166ab</span> <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="修改Markdown分割线样式"><a href="#修改Markdown分割线样式" class="headerlink" title="修改Markdown分割线样式"></a>修改Markdown分割线样式</h1><p>在<code>blog/themes/next/source/css/_common/scaffolding/base.styl</code>中寻找：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>hr &#123;</span><br><span class="line"><span class="regexp">//</span>  background-image: repeating-linear-gradient(-<span class="number">45</span>deg, <span class="variable">$grey</span>-lighter, <span class="variable">$grey</span>-lighter <span class="number">4</span>px, <span class="regexp">//</span>transparent <span class="number">4</span>px, transparent <span class="number">8</span>px);</span><br><span class="line"><span class="regexp">//</span>  border: <span class="number">1</span>;</span><br><span class="line"><span class="regexp">//</span>  height: <span class="number">3</span>px;</span><br><span class="line"><span class="regexp">//</span>  margin: <span class="number">40</span>px <span class="number">0</span>;</span><br><span class="line"><span class="regexp">//</span>&#125;</span><br></pre></td></tr></table></figure>

<p>按照上面的方式注释掉即可</p>
<h1 id="修改博客背景"><a href="#修改博客背景" class="headerlink" title="修改博客背景"></a>修改博客背景</h1><p>参考网上办法跃跃欲试时发现没有了custom.styl这个文件，查看主题_config.xml后发现可以换个方式实现，于是在根目录source下新建 _data/styles.style</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"> 	<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background.jpg</span>);</span><br><span class="line"> 	<span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-size</span>:<span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将主题hexo/themes/next/_config.xml中对应的#去掉后就可以了</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line">  #head: <span class="keyword">source</span><span class="regexp">/_data/</span>head.swig</span><br><span class="line">  #header: <span class="keyword">source</span><span class="regexp">/_data/</span>header.swig</span><br><span class="line">  #sidebar: <span class="keyword">source</span><span class="regexp">/_data/</span>sidebar.swig</span><br><span class="line">  #postMeta: <span class="keyword">source</span><span class="regexp">/_data/</span>post-meta.swig</span><br><span class="line">  #postBodyEnd: <span class="keyword">source</span><span class="regexp">/_data/</span>post-body-end.swig</span><br><span class="line">  #footer: <span class="keyword">source</span><span class="regexp">/_data/</span>footer.swig</span><br><span class="line">  #bodyEnd: <span class="keyword">source</span><span class="regexp">/_data/</span>body-end.swig</span><br><span class="line">  #variable: <span class="keyword">source</span><span class="regexp">/_data/</span>variables.styl</span><br><span class="line">  #mixin: <span class="keyword">source</span><span class="regexp">/_data/mi</span>xins.styl</span><br><span class="line">  style: <span class="keyword">source</span><span class="regexp">/_data/</span>styles.styl</span><br></pre></td></tr></table></figure>



<h1 id="文章透明阴影和直角圆润"><a href="#文章透明阴影和直角圆润" class="headerlink" title="文章透明阴影和直角圆润"></a>文章透明阴影和直角圆润</h1><p>html结构</p>
<figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">container</span><br><span class="line">-<span class="ruby"> header-inner</span></span><br><span class="line"><span class="ruby">- main</span></span><br><span class="line"><span class="ruby">	- main-inner</span></span><br><span class="line"><span class="ruby">		- content-wrap</span></span><br><span class="line"><span class="ruby">			- post-block</span></span><br><span class="line"></span><br><span class="line"><span class="ruby">		- sidebar</span></span><br><span class="line"><span class="ruby">			-sidebar-inner</span></span><br><span class="line"><span class="ruby">		</span></span><br></pre></td></tr></table></figure>

<p>在根目录hexo/source下新建 _data/styles.style，在其中添加</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//在styles<span class="selector-class">.styl</span>里自定义post, 添加背景图象</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">/images/background.jpg</span>);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>: center;</span><br><span class="line">    //<span class="attribute">background-size</span>:<span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">    //<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// next自身设置的背景有个<span class="selector-tag">main</span>-inner的属性，颜色是继承post <span class="attribute">content</span> <span class="attribute">color</span>，所以我们的思路是自定义<span class="selector-tag">main</span>-inner的<span class="attribute">background-color</span></span><br><span class="line"><span class="selector-class">.main-inner</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">40px</span> <span class="number">40px</span> <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-block</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">1</span>);</span><br><span class="line">    //<span class="attribute">margin-top</span>: <span class="number">24px</span>;</span><br><span class="line">    //<span class="attribute">margin-bottom</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//组件椭圆化</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span>&#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);    </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">30px</span> <span class="number">80px</span> <span class="number">30px</span> <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">8px</span> <span class="number">7px</span> <span class="number">2px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>), <span class="number">7px</span> <span class="number">4px</span> <span class="number">1px</span> -<span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.06</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.12</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//侧边框的透明度设置</span><br><span class="line">//<span class="selector-class">.sidebar-inner</span> &#123;<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.85</span>);&#125;</span><br><span class="line"></span><br><span class="line">//菜单栏的透明度设置</span><br><span class="line">//<span class="selector-class">.header-inner</span> &#123;<span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.85</span>);&#125;</span><br><span class="line"></span><br><span class="line">//搜索框（local-search）的透明度设置</span><br><span class="line">//<span class="selector-class">.popup</span> &#123;<span class="attribute">opacity</span>: <span class="number">0.9</span>;&#125;</span><br><span class="line"></span><br><span class="line">//文章的圆角设置</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">20px</span>; //文章背景设置圆角</span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span>;</span><br><span class="line">	<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.0</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//文章内容的透明度设置</span><br><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.95</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>







<h1 id="菜单栏和预览文章对齐"><a href="#菜单栏和预览文章对齐" class="headerlink" title="菜单栏和预览文章对齐"></a>菜单栏和预览文章对齐</h1><ol>
<li>去掉 headbar 的的颜色，修改文件 hexo/themes/next/source/css/_common/outline/header/headerband.styl 中的内容</li>
</ol>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">.headband &#123;</span><br><span class="line">  <span class="regexp">//</span>background: <span class="variable">$headband</span>-bg;	<span class="regexp">//</span>注释这一行</span><br><span class="line">  height: <span class="variable">$headband</span>-height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>把上面的 20px 空出来</li>
</ol>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin-top</span>:<span class="number">20px</span>;    <span class="comment">// 添加这一行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508222714.png"></p>
<ol>
<li>然后对齐左边菜单栏和右边的预览 blog，在 hexo/source/_data/style.styl 中添加</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">20px</span>; </span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;		//原来的设置 <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">	<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.0</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508222733.png"></p>
<ol>
<li>对齐 article 和 comment 区域左右的边距</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">	<span class="attribute">border-radius</span>: <span class="number">20px</span>; </span><br><span class="line">	<span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span>;		//原来的设置 <span class="number">0px</span> <span class="number">30px</span> <span class="number">30px</span> <span class="number">30px</span>;</span><br><span class="line">	<span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, <span class="number">0.0</span>) none repeat scroll <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508222816.png"></p>
<ol>
<li> 去掉菜单下面的的 siderbar-inner 颜色，习惯 hexo/themes/next/source/css/_common/outline/sidebar/sidebar.styl 文件，如下</li>
</ol>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="comment">//background: $black-deep; //注释这行</span></span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  if (!hexo-config(&#x27;back2top.sidebar&#x27;))&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> black;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  +tablet-mobile() &#123;</span><br><span class="line">    if (!hexo-config(&#x27;sidebar.onmobile&#x27;)) &#123;</span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="去掉博客底部-powered-by-hexo"><a href="#去掉博客底部-powered-by-hexo" class="headerlink" title="去掉博客底部 powered by hexo"></a>去掉博客底部 powered by hexo</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h1 id="网站底部加访问量"><a href="#网站底部加访问量" class="headerlink" title="网站底部加访问量"></a>网站底部加访问量</h1><h1 id="Github-Following"><a href="#Github-Following" class="headerlink" title="Github Following"></a>Github Following</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/jason-huanghao</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>



<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
  </entry>
  <entry>
    <title>hexo文章内容优化</title>
    <url>/2021/05/09/Blog%20Building/hexo%E6%96%87%E7%AB%A0%E5%86%85%E5%AE%B9%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数学公式支持"><a href="#数学公式支持" class="headerlink" title="数学公式支持"></a>数学公式支持</h1><p>安装 <code>hexo-math</code>：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-<span class="keyword">math</span> --save</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>在Next主题配置文件更改设置为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>在需要加载mathjax的文件的头部加入<code>mathjax: true</code> 或者 <code>mathjax: false</code> </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">transformer</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-12-10 17:50:42</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>



<h1 id="实现-Read-more-隐藏多余行"><a href="#实现-Read-more-隐藏多余行" class="headerlink" title="实现 Read more 隐藏多余行"></a>实现 Read more 隐藏多余行</h1><p><strong>第一种方法</strong></p>
<p>用文本编辑器打开 themes/ 目录下的对应的主题的theme文件夹下的 _config.yml 文件，找到这段代码，如果没有则新建，可能不同的主题会不支持这种方法：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use <span class="comment">&lt;!-- more --&gt;</span> in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure>

<p>把 enable 的 false 改成 true 就行了，然后 length 是设定文章预览的文本长度。</p>
<p>修改后重启 hexo 就ok了。</p>
<p><strong>第二种方法</strong></p>
<p>在你写 md 文章的时候，可以在内容中加上 <code>&lt;!--more--&gt;</code>，这样首页和列表页展示的文章内容就是 <code>&lt;!--more--&gt;</code> 之前的文字，而之后的就不会显示了。</p>
<p>效果</p>
<p>上面两种方式展示出来的效果是不一样的。</p>
<p>第一种修改 _config.yml 文件的效果是会格式化你文章的样式，直接把文字挤在一起显示，最后会有 …。</p>
<p>而第二种加上 <code>&lt;!--more--&gt;</code>展示出来的就是你原本文章的样式，最后不会有…。</p>
<h1 id="去除首页文章间隔与短横线"><a href="#去除首页文章间隔与短横线" class="headerlink" title="去除首页文章间隔与短横线"></a>去除首页文章间隔与短横线</h1><p>这里我不需要这个就需要把它删掉，这里要改的地方 hexo/themes/next/source/css/_common/components/post下的post-footer.styl文件，具体如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508220828.png"></p>
<h1 id="文章内链接样式"><a href="#文章内链接样式" class="headerlink" title="文章内链接样式"></a>文章内链接样式</h1><p>主题配置文件 <code>next.yml</code> 去除 <code>styles.styl</code> 的注释</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">style: <span class="keyword">source</span><span class="regexp">/_data/</span>styles.styl</span><br></pre></td></tr></table></figure>

<p>在 <code>hexo/source/_data</code> 目录下新建 <code>styles.styl</code> 文件，添加下面内容</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//文章中链接样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  //<span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="文章底部增加版权信息"><a href="#文章底部增加版权信息" class="headerlink" title="文章底部增加版权信息"></a>文章底部增加版权信息</h1><p>主题配置文件 <code>next.yml</code> 修改 <code>creative_commons</code> 选项。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span> <span class="comment"># 不显示在侧边栏</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>

<p>版权格式 post-copyright.styl</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-copyright</span> &#123;</span><br><span class="line">  <span class="comment">//background: var(--card-bg-color);</span></span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="variable">$red</span>;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="variable">$red</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$red</span>;</span><br><span class="line">  <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="variable">$red</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">2em</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="修改文章底部-tag-图标"><a href="#修改文章底部-tag-图标" class="headerlink" title="修改文章底部 tag 图标"></a>修改文章底部 tag 图标</h1><p>主题配置文件 <code>next.yml</code>，打开底部标签 。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h1 id="添加代码复制功能-next8-X"><a href="#添加代码复制功能-next8-X" class="headerlink" title="添加代码复制功能 (next8.X)"></a>添加代码复制功能 (next8.X)</h1><p>hexo next 8.X</p>
<p>在 hexo/_config.yml 下开启 highlight</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>修改 hexo/themes/next/_config.yml 选择不同的风格</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">night</span> <span class="string">eighties</span> <span class="comment"># galactic </span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span></span><br></pre></td></tr></table></figure>



<h1 id="添加代码复制功能-next其他版本"><a href="#添加代码复制功能-next其他版本" class="headerlink" title="添加代码复制功能 (next其他版本)"></a>添加代码复制功能 (next其他版本)</h1><p>所用工具：<a href="https://clipboardjs.com/">clipboard.js</a></p>
<ol>
<li>下载<a href="https://raw.githubusercontent.com/zenorocha/clipboard.js/master/dist/clipboard.min.js">clipboard.min.js</a>并保存至<code>themes\next\source\js\clipboard.min.js</code></li>
<li>在<code>.\themes\next\source\js\</code>下创建<code>clipboard-use.js</code>,添加如下内容：</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">copy<span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123; </span><br><span class="line">  <span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    copyHtml += <span class="string">&#x27;&lt;button class=&quot;btn-copy&quot; data-clipboard-snippet=&quot;&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="comment">//fa fa-globe可以去字体库替换自己想要的图标</span></span><br><span class="line">    copyHtml += <span class="string">&#x27;  &lt;i class=&quot;fa fa-clipboard&quot;&gt;&lt;/i&gt;&lt;span&gt;copy&lt;/span&gt;&#x27;</span>;</span><br><span class="line">    copyHtml += <span class="string">&#x27;&lt;/button&gt;&#x27;</span>;</span><br><span class="line">    $(<span class="string">&quot;.highlight .code pre&quot;</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">&#x27;.btn-copy&#x27;</span>, &#123;</span><br><span class="line">        target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<ol>
<li>在<code>根目录\source\_data\</code>下创建<code>styles.styl</code>，添加如下内容：</li>
</ol>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">copy// 代码块复制按钮</span><br><span class="line">// --------------------------------------------------</span><br><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">  //方便copy代码按钮（btn-copy）的定位</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">#fcfcfc</span>,<span class="number">#eee</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">    -webkit-appearance: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">    -webkit-<span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    -o-<span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-copy</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4.在<code>source\_data\</code>下创建<code>body-end.swig</code>，添加如下内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">copy<span class="comment">&lt;!-- 代码块复制功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clipboard.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/js/src/clipboard-use.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol>
<li>在next配置文件中启用<code>styles.styl</code>和<code>body-end.swig</code>：</li>
</ol>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">copycustom_file_path:</span><br><span class="line">  bodyEnd: <span class="keyword">source</span><span class="regexp">/_data/</span>body-end.swig</span><br><span class="line">  style: <span class="keyword">source</span><span class="regexp">/_data/</span>styles.styl</span><br></pre></td></tr></table></figure>



<h1 id="分页功能"><a href="#分页功能" class="headerlink" title="分页功能"></a>分页功能</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装相应的插件</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-generator-index</span></span><br><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-generator-archive</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改站点的配置文件</span></span><br><span class="line"><span class="string">cd</span> <span class="string">博客目录</span></span><br><span class="line"><span class="string">vim</span> <span class="string">_config.yml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这一段默认就有的</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 归档页面</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">50</span></span><br><span class="line">  <span class="attr">yearly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">monthly:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h1 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h1><p>请注意，可npm install hexo-blog-encrypt –save能导致文章目录不显示。</p>
<p>安装 hexo-blog-encrypt 插件。</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-<span class="built_in">encrypt</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在需要加密的文章的 header 中添加下面内容。</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">password:</span> <span class="number">123456</span></span><br><span class="line"><span class="symbol">abstract:</span> 加密文章，请输入密码 <span class="number">123456</span> 查看</span><br><span class="line"><span class="symbol">message:</span> 请输入密码</span><br></pre></td></tr></table></figure>



<h1 id="顶部阅读进度条"><a href="#顶部阅读进度条" class="headerlink" title="顶部阅读进度条"></a>顶部阅读进度条</h1><p>主题配置文件 next.yml 中修改 reading_progress 选项。</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">reading_progress:</span></span><br><span class="line"><span class="symbol">  enable:</span> true</span><br><span class="line"><span class="symbol">  position:</span> top</span><br><span class="line"><span class="symbol">  color:</span> <span class="string">&quot;#06d633&quot;</span></span><br><span class="line"><span class="symbol">  height:</span> <span class="number">3</span>px</span><br></pre></td></tr></table></figure>

<h1 id="Next-主题中文章的目录中文项点击不能跳转"><a href="#Next-主题中文章的目录中文项点击不能跳转" class="headerlink" title="Next 主题中文章的目录中文项点击不能跳转"></a>Next 主题中文章的目录中文项点击不能跳转</h1><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210511215643.png"><br>比如上面图片中所有带有的中文的都不能点击跳转到对于的内容，这个问题在 Next github 上已经解决了。<br>参考链接<br><a href="https://github.com/kyangc/hexo-theme-next-1/commit/a3f9764ab57e157b3176f27c42481a4713f8cd94">https://github.com/kyangc/hexo-theme-next-1/commit/a3f9764ab57e157b3176f27c42481a4713f8cd94</a><br>参考链页面修改 next 主题下对应的行，代码中红色行 (带有减号) 是在你博客项目下需要删除的内容；代码中绿色行 (带有加号) 是需要你添加的内容。</p>
<h1 id="Hexo-sitemap-报-xmlParseEntityRef-no-name"><a href="#Hexo-sitemap-报-xmlParseEntityRef-no-name" class="headerlink" title="Hexo sitemap 报 xmlParseEntityRef: no name"></a>Hexo sitemap 报 xmlParseEntityRef: no name</h1><p>去掉博客文件名中的特殊字符 “&amp;”</p>
<h1 id="Blog-隐藏"><a href="#Blog-隐藏" class="headerlink" title="Blog 隐藏"></a>Blog 隐藏</h1><p>hexo-generator-indexed</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo高级功能</title>
    <url>/2021/05/09/Blog%20Building/hexo%E9%AB%98%E7%BA%A7%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h1><p>安装hexo-generator-searchdb</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>在 hexo/themes/next/_config.yml 中修改配置<code>local_search</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>		<span class="comment"># 开启站内搜索</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span>		<span class="comment"># 自动和手动触发</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">3</span>  <span class="comment"># 每篇文章显示的搜索结果数量</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<h1 id="Auto-category"><a href="#Auto-category" class="headerlink" title="Auto category"></a>Auto category</h1><p>下载 Auto Category</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-auto-category <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>在 hexo/_config.yml 文件后添加下面的语句</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Generate categories from directory-tree</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/xu-song/hexo-auto-category</span></span><br><span class="line"><span class="comment"># depth: the max_depth of directory-tree you want to generate, should &gt; 0</span></span><br><span class="line"><span class="attr">auto_category:</span></span><br><span class="line"> <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"> <span class="attr">depth:</span> </span><br></pre></td></tr></table></figure>



<h1 id="Hexo-Next-DaoVoice-实现在线联系-页面不显示问题未解决！暂时不用该功能"><a href="#Hexo-Next-DaoVoice-实现在线联系-页面不显示问题未解决！暂时不用该功能" class="headerlink" title="Hexo Next DaoVoice 实现在线联系 (页面不显示问题未解决！暂时不用该功能)"></a>Hexo Next DaoVoice 实现在线联系 (页面不显示问题未解决！暂时不用该功能)</h1><p><strong>DaoVoice 注册</strong></p>
<p><a href="http://dashboard.daovoice.io/">register link</a> </p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p><strong>head.swig 修改</strong> </p>
<p>在文件 hexo/themes/next/layout/_partials/head/head.swig 中添加以下语句</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.daovoice %&#125;</span><br><span class="line"> &lt;script&gt;(function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#x27;https:&#x27; == document.location.protocol ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &quot;//widget.daovoice.io/widget/b6dbddb6.js&quot;,&quot;daovoice&quot;)</span><br><span class="line"> daovoice(&#x27;init&#x27;, &#123;</span><br><span class="line">  app_id: &quot;APP ID&quot;</span><br><span class="line">&#125;);</span><br><span class="line">daovoice(&#x27;update&#x27;);</span><br><span class="line"> &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>其中 “APP ID” 使用你在 DaoVoice 中的 “app_id”</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221613.png"></p>
<p><strong>config.yml 配置文件修改</strong></p>
<p>在文件 hexo/themes/next/_config.yml 中添加以下语句</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: f32df35e</span><br></pre></td></tr></table></figure>

<p><strong>修改聊天图标等设置</strong></p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">应用设置 -&gt; 聊天设置 -&gt; </span><br></pre></td></tr></table></figure>

<p><strong>部署 DaoVoice</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p><strong>DaoVoice 显示接入成功</strong></p>
<p>![注册</p>
<p>首先需要在 DaoVoice 注册个账号，<a href="http://dashboard.daovoice.io/get-started?invite_code=4e6b4c7f">点击注册</a></p>
<p>注册成功后，进入后台控制台，进入到 应用设置–&gt; 安装到网站 页面，可以得到一个 app_id：</p>
<p><img src="https://leezhiy.github.io/images/daovoice-get-appid.png" alt="获取APPID"></p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p><strong>利用 NexT 主题的 Injects 功能管理 DaoVoice 插件</strong></p>
<p>在 NexT 使用过程中，我们免不了要安装一些 NexT 暂时未集成的插件，但我们又不想修改主题的源码，这时就需要使用 Next 的 <code>theme-inject</code> 功能，它通过注入代码的方式提供多个注入点实现定制内容。 Injects 具体的定义见 <a href="https://theme-next.org/docs/advanced-settings">NexT 文档</a></p>
<p><strong>修改配置文件</strong></p>
<p>首先，打开 主题配置文件 ，在最底部添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">script</span></span><br><span class="line"><span class="comment"># DaoVoice</span></span><br><span class="line"><span class="attr">daovoice:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="comment"># 输入你自己的 app_id</span></span><br></pre></td></tr></table></figure>

<p><strong>注入布局</strong></p>
<p>第二步，我们在 Hexo 的 <code>scripts</code> 创建一个 js 文件 plugins.js（用来管理需要修改代码的第三方插件），添加以下内容。只要是这里面的脚本，Hexo 运行时会执行它。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;theme_inject&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="params">(injects)</span></span> &#123;</span><br><span class="line">    // hexo.theme.<span class="built_in">config</span>.daovoice 就是上面配置的值，我们将配置参数传递给 daovoice.swig</span><br><span class="line">    injects.head.file(<span class="string">&#x27;daovoice&#x27;</span>, <span class="string">&#x27;source/_data/DaoVoice.swig&#x27;</span>, &#123;daovoice: hexo.theme.<span class="built_in">config</span>.daovoice&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>最后，我们创建 <code>Hexo/source/_data/DaoVoice.swig</code> 文件，添加以下内容。</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> daovoice.enabled %&#125;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  (function(i,s,o,g,r,a,m)&#123;i[&quot;DaoVoiceObject&quot;]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset=&quot;utf-8&quot;;m.parentNode.insertBefore(a,m)&#125;)(window,document,&quot;script&quot;,(&#x27;https:&#x27; == document.location.protocol ? &#x27;https:&#x27; : &#x27;http:&#x27;) + &quot;//widget.daovoice.io/widget/0f81ff2f.js&quot;,&quot;daovoice&quot;)</span></span><br><span class="line"><span class="xml">  daovoice(&#x27;init&#x27;, &#123;</span></span><br><span class="line"><span class="xml">    app_id: &#x27;</span><span class="template-variable">&#123;&#123;daovoice.app_id&#125;&#125;</span><span class="xml">&#x27;,   // 必填，您的 APP 标识</span></span><br><span class="line"><span class="xml">  &#125;);</span></span><br><span class="line"><span class="xml">  daovoice(&#x27;update&#x27;);</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>

<p>运行 <code>hexo s</code> , 发现右下角已经出现如图下所示图标，DaoVoice 已经接入成功。</p>
<p><strong>安装 hexo-cake-moon-menu 插件，并添加按钮接管 DaoVoice</strong></p>
<p>安装 hexo-cake-moon-menu 插件, 在 Hexo 目录打开 git bash 并输入命令：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">script</span></span><br><span class="line">$ npm install hexo-cake-moon-menu <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>打开 站点配置文件 ，在最底部添加</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">script</span></span><br><span class="line"><span class="attr">moon_menu:</span></span><br><span class="line">  <span class="attr">back2top:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="string">ture</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-chevron-up</span></span><br><span class="line">    <span class="attr">func:</span> <span class="string">back2top</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">back2bottom:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-chevron-down</span></span><br><span class="line">    <span class="attr">func:</span> <span class="string">back2bottom</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-2</span></span><br></pre></td></tr></table></figure>


<h1 id="Next-Valine-评论系统"><a href="#Next-Valine-评论系统" class="headerlink" title="Next Valine 评论系统"></a>Next Valine 评论系统</h1><p><strong>保证 next 版本最新</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd hexo <span class="comment"># 进入你的blog文件根部</span></span><br><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/theme-next/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br><span class="line">sudo rm -rf .<span class="regexp">/themes/</span><span class="keyword">next</span>/.git <span class="comment"># 删除.git为了主题能同步到github</span></span><br><span class="line">sudo rm -rf .<span class="regexp">/themes/</span><span class="keyword">next</span>/.gitignore <span class="comment"># 删除.gitignore为了主题完整同步到github</span></span><br></pre></td></tr></table></figure>



<p><strong>注册 LeanCloud</strong></p>
<p><a href="https://leancloud.cn/dashboard/login.html#/signin">LeanCloud官网登录入口</a> </p>
<p>创建应用，为了获取 AppID 和 AppKey</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221719.png"></p>
<p>填写 app 信息</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221726.png"></p>
<p>记录 AppID 和 AppKey</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221735.png"></p>
<p><strong>Next 主题配置 valine 的配置</strong></p>
<p>打开 hexo/themes/next/_config.yml，找到comments栏目并开启valine。</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">comments:</span></span><br><span class="line"><span class="symbol">  active:</span> valine</span><br></pre></td></tr></table></figure>

<p>在 hexo/themes/next/_config.yml 搜索 valine，填入appid 和 appkey</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否开启</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">STLjflsxBIAFNnGAcBVgq6Vu-gzGzoHsz</span> <span class="comment"># 上一步获取的 App ID</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">6zO0wFSDgLF6LulPGcifgFOW</span> <span class="comment"># 上一步获取的 App Key</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># 新留言是否需要通知 https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># 是否需要验证，验证比较反人类建议false关闭</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">请在此输入您的留言</span> <span class="comment"># 默认留言框内的文字</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># 默认头像</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail</span> <span class="comment"># 默认留言框的头部需要访问者输入的信息</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size #默认单页的留言条数</span></span><br></pre></td></tr></table></figure>

<p><strong>评论管理</strong></p>
<p>进入 leancloud 官网，找到 <code>控制台</code>-&gt;<code>存储</code>-&gt;<code>commet</code> 中进行管理</p>
<p><strong>评论时报错</strong> </p>
<p>在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名 (就是你的博客主页地址) 加进去</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221809.png"></p>
<h1 id="Hexo-Admin-使用"><a href="#Hexo-Admin-使用" class="headerlink" title="Hexo Admin 使用"></a>Hexo Admin 使用</h1><p><strong>安装 Hexo Admin</strong> </p>
<p>进入 Hexo 根目录</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm install -g hexo</span><br><span class="line">cd ~/</span><br><span class="line">hexo init <span class="keyword">my</span>-blog</span><br><span class="line">cd <span class="keyword">my</span>-blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http:<span class="regexp">//</span>localhost:<span class="number">4000</span><span class="regexp">/admin/</span></span><br></pre></td></tr></table></figure>

<p><strong>安装报错</strong></p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">npm</span> install --save hexo-admin</span><br><span class="line"><span class="built_in">npm</span> WARN deprecated minimatch@<span class="number">2.0</span>.<span class="number">10</span>: Please update <span class="keyword">to</span> minimatch <span class="number">3.0</span>.<span class="number">2</span> <span class="keyword">or</span> higher <span class="keyword">to</span> avoid a <span class="built_in">RegExp</span> DoS issue</span><br><span class="line">hexo-site@<span class="number">0.0</span>.<span class="number">0</span> E:<span class="string">\git\linjin101.github.io</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">npm</span> WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^<span class="number">1.0</span>.<span class="number">0</span> (node_modules<span class="string">\chokidar\node_modules\fsevents):</span></span><br><span class="line"><span class="built_in">npm</span> WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@<span class="number">1.1</span>.<span class="number">1</span>: wanted &#123;<span class="string">&quot;os&quot;</span>:<span class="string">&quot;darwin&quot;</span>,<span class="string">&quot;arch&quot;</span>:<span class="string">&quot;any&quot;</span>&#125; (current: &#123;<span class="string">&quot;os&quot;</span>:<span class="string">&quot;win32&quot;</span>,<span class="string">&quot;arch&quot;</span>:<span class="string">&quot;x64&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>解决方法</strong></p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> install minimatch@<span class="string">&quot;3.0.2&quot;</span>  </span><br><span class="line"><span class="built_in">npm</span> update -d</span><br></pre></td></tr></table></figure>

<p>升级后依旧报错,重装:</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> update minimatch</span><br><span class="line"><span class="built_in">npm</span> -v minimatch</span><br><span class="line"><span class="built_in">npm</span> install -g <span class="built_in">npm</span>@<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p><strong>访问 Hexo Admin</strong> </p>
<p> 访问 <a href="http://localhost:4000/admin/">http://localhost:4000/admin/</a> </p>
<p><strong>hexo deploy 按钮 报错解决</strong> <a href="https://github.com/jaredly/hexo-admin/issues/70">issue</a> </p>
<ul>
<li><p>打开 console，进入 hexo 目录，执行语句</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">$ touch hexo-deploy.sh<span class="comment">; chmod a+x hexo-deploy.sh</span></span><br></pre></td></tr></table></figure>

<p>然后 hexo 下自动创建了一个文件 hexo-deploy.sh</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221827.png"></p>
</li>
<li><p>打开 hexo-deploy.sh，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env sh</span></span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li>
<li><p>编辑 _config.yml，在文件末尾添加</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">admin:</span><br><span class="line">  <span class="keyword">deploy</span>Command: &#x27;<span class="string">./hexo-deploy.sh</span>&#x27;</span><br></pre></td></tr></table></figure></li>
<li><p>重新开启 server，进入 Hexo Admin</p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">server</span> -d</span><br></pre></td></tr></table></figure></li>
<li><p>然后可以😊的进行 deploy 了，✌️✌️✌️</p>
</li>
</ul>
<h1 id="Hexo博客搭建之SEO搜索优化"><a href="#Hexo博客搭建之SEO搜索优化" class="headerlink" title="Hexo博客搭建之SEO搜索优化"></a>Hexo博客搭建之SEO搜索优化</h1><p><strong>启用sitemap功能</strong></p>
<p>为了让博文被google或百度检索，需要使用hexo的sitemap功能。修改themes/next/_config.yml：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / || home</span><br><span class="line">  <span class="meta">#about: /about/ || user</span></span><br><span class="line"><span class="symbol">  tags:</span> <span class="meta-keyword">/tags/</span> || tags</span><br><span class="line"><span class="symbol">  categories:</span> <span class="meta-keyword">/categories/</span> || th</span><br><span class="line"><span class="symbol">  archives:</span> <span class="meta-keyword">/archives/</span> || archive</span><br><span class="line">  <span class="meta">#schedule: /schedule/ || calendar</span></span><br><span class="line"><span class="symbol">  sitemap:</span> /sitemap.xml || sitemap</span><br><span class="line">  <span class="meta">#commonweal: /404/ || heartbeat</span></span><br></pre></td></tr></table></figure>

<p><strong>安装插件</strong></p>
<p>切换到hexo根目录下，安装搜索引擎插件，插件根据自己的需要安装其中一个或者都安装：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-generator-sitemap --save</span><br><span class="line">npm <span class="keyword">install </span>hexo-generator-<span class="keyword">baidu-sitemap </span>--save</span><br></pre></td></tr></table></figure>

<p>对于 next 主题，直接执行如下命令即可访问站点地图：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br></pre></td></tr></table></figure>

<p>此时，在public的静态文件根目录中会多出一个sitemap.xml文件，表示谷歌检索的sitemap安装成功。</p>
<h2 id="谷歌检索"><a href="#谷歌检索" class="headerlink" title="谷歌检索"></a><strong>谷歌检索</strong></h2><p>这块在<a href="http://theme-next.iissnan.com/third-party-services.html#google-webmaster-tools">官方文档</a>里面有提到（官方文档其实很容易上手，跟着官方走还是很容易的，有些地方可能不够详细，但是网上关于 next 的配置博客也不少，如<a href="http://fionat.github.io/blog/2013/10/23/sitemap/">｜Hexo 优化｜如何向 google 提交 sitemap（详细）</a>），这里给出傻瓜式详细步骤：</p>
<ol>
<li>在谷歌搜索栏中输入如下信息进行检索：</li>
</ol>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">site:</span> xxx.github.io</span><br></pre></td></tr></table></figure>

<p>xxx为你的GitHub账号，如果没有被检索，不会显示hexo中的任何博文，如果有下面的步骤就可以省略了。</p>
<ol start="2">
<li><strong>验证站点</strong> </li>
</ol>
<p>需要谷歌账号，没有的可以申请一个。登录<a href="https://www.google.com/webmasters/tools">GoogleSearchConsole</a>，点击立即使用，点击骚红色的”ADD A PROPERTY”，输入需要验证所有权的网站地址，例如本站地址</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>jason-huanghao.github.io</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>对于hexo博客网站，最好使用<strong>HTML tag</strong>法验证网站所有权，在弹出来的小框中加入你的站点地址 <a href="http://yoursite.com/">http://yoursite.com</a> ，然后点击”Continue”Tab 栏选择”Alternate methods”，选中 HTML tag 可以看见</li>
</ol>
<p><strong>千万不要采用修改head.swig文件的方法</strong>，不然在升级 NexT 版本时会遇到很多不必要的麻烦。修改themes/next/_config.yml文件，找到 google_site_verification 字段（找不到就新建）：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># Google Webmaster tools verification.</span></span><br><span class="line"><span class="symbol">google_site_verification:</span> verification=G5BgKB47rsdNz1abyiPJS9_1BIclYVpKGUsKVC7GxJg</span><br><span class="line"></span><br><span class="line"><span class="meta">#Sitemap</span></span><br><span class="line"><span class="symbol">Plugins:</span></span><br><span class="line">- hexo-generator-baidu-sitemap</span><br><span class="line">- hexo-generator-sitemap</span><br><span class="line"></span><br><span class="line"><span class="symbol">sitemap:</span> </span><br><span class="line"><span class="symbol">    path:</span> sitemap.xml</span><br><span class="line"><span class="symbol">baidusitemap:</span></span><br><span class="line"><span class="symbol">    path:</span> baidusitemap.xml</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>然后生成静态文件并发布：</li>
</ol>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li><p>回到 Google Webmaster Central 页面，点击骚红色的”VERIFY”，done！</p>
</li>
<li><p><strong>添加 sitemap.xml</strong></p>
</li>
</ol>
<p>打开谷歌控制台选择上一步添加的网站-&gt;<strong>索引</strong>-&gt;<strong>站点地图</strong>，在添加新的站点地图中填入”sitemap.xml”即可，添加成功会在<strong>已提交的站点地图</strong>中显示，过一段时间在<strong>概述</strong>中会显示被索引的情况。</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221842.png"></p>
<h2 id="百度检索"><a href="#百度检索" class="headerlink" title="百度检索"></a>百度检索</h2><p><strong>添加站点</strong></p>
<p>登录<a href="https://ziyuan.baidu.com/">百度资源管理平台</a>，依次点击<strong>用户中心</strong>-&gt;<strong>站点管理</strong>-&gt;<strong>添加网站</strong>（网站会随时更新，路径可能不同，只要找到添加网站的位置就可以）。</p>
<ol>
<li><p>输入网址</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https<span class="regexp">//</span>eericzeng.github.io</span><br><span class="line"><span class="regexp">//</span>（注意协议头，gitpage在http基础上要加s）</span><br></pre></td></tr></table></figure></li>
<li><p>站点属性<br>最多可以选择三项，建议相关的都选上，提高曝光度</p>
</li>
<li><p>验证网站<br>NexT主题选择<strong>HTML标签验证即可</strong>，复制标签中的content值，修改next配置文件_config.yml：</p>
<figure class="highlight ldif"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Baidu Webmaster tools verification.</span></span><br><span class="line"><span class="comment"># See: https://ziyuan.baidu.com/site</span></span><br><span class="line"><span class="attribute">baidu_site_verification</span>: code-SnIEO2eNeq</span><br><span class="line"><span class="comment"># &lt;meta name=&quot;baidu-site-verification&quot; content=&quot;code-SnIEO2eNeq&quot; /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO.</span></span><br><span class="line"><span class="attribute">baidu_push</span>: ture</span><br></pre></td></tr></table></figure>

<p><strong>baidu 验证只能修改head.swig文件</strong> </p>
<p>将 上面设置为 baidu_site_verification: true</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221852.png"></p>
<p>百度资源页面先不要关闭，执行下面的步骤之后再点击<strong>完成验证</strong>。</p>
<p><strong>发布+验证</strong></p>
<p>hexo根目录下执行如下命令：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure>

<p>回到百度资源网站，点击<strong>完成验证</strong>。</p>
<h1 id="置顶"><a href="#置顶" class="headerlink" title="置顶"></a>置顶</h1><p><strong>1 卸载原插件和安装置顶插件</strong></p>
<p>执行下面两行命令：</p>
<figure class="highlight fortran"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-<span class="built_in">index</span> --<span class="keyword">save</span></span><br><span class="line">npm install hexo-generator-<span class="built_in">index</span>-pin-top --<span class="keyword">save</span></span><br><span class="line">复制代码</span><br></pre></td></tr></table></figure>

<p>在新增文章的开头中加入<strong>top: true</strong>，比如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> <span class="string">Next主题设置文章置顶</span></span><br><span class="line"><span class="attr">id:</span> <span class="string">a1</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-01-03 17:26:01</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Hexo</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">Next主题</span></span><br><span class="line"><span class="attr">top:</span> <span class="literal">true</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="string">复制代码</span></span><br></pre></td></tr></table></figure>

<p><strong>2 设置置顶标志</strong></p>
<p>打开<strong>\themes\your theme\layout_macro\post.swig</strong></p>
<p>找到<div class="post-meta">下面插入一下代码：</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.top %&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;RED&quot;</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br><span class="line"><span class="xml">复制代码</span></span><br></pre></td></tr></table></figure>

<p>至此，功能已完成。</p>
<h1 id="Hexo接入Google-AdSense广告"><a href="#Hexo接入Google-AdSense广告" class="headerlink" title="Hexo接入Google AdSense广告"></a>Hexo接入Google AdSense广告</h1><p><strong>注册账号</strong></p>
<p>Google Adsense 注册账号流程，入口在这里：<a href="https://www.google.com/adsense/">Google Adsense</a></p>
<p><strong>添加 Google 广告代码</strong></p>
<ol>
<li>注册账号完成之后，google会生成一段代码。</li>
<li>需要将谷歌提供给你的一份代码添加到你网站的中，因为我目前是next主题，因此放到 <code>\themes\next\layout\partials\head.swig</code> 任意一个位置 (本人放在了最后) 即可。</li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">data-ad-client</span>=<span class="string">&quot;ca-pub-2691877571661707&quot;</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>在你添加完成之后，<code>hexo gen &amp;&amp; hexo deploy</code> 更新你的网站，点击确认，谷歌会到你的网站上进行核查和验收，一般没问题的话几分钟就会出结果，有问题的话要等待一段时间。</li>
</ol>
<p><strong>Google 广告投放</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210509100945.png"></p>
<ol>
<li><p>自动广告 (by site)，会根据你的内容精准投放，投放概率低，不推荐</p>
</li>
<li><p>广告单元 (by ad unit)，这种比较灵活，可以充分利用自己的博客广告位，推荐</p>
<ul>
<li>文字广告和展示广告 (即侧边栏，评论区之类的固定广告位)</li>
<li>信息流广告 (插入在信息流内容的广告位置)</li>
<li>文章内嵌广告 (主要是插入在每篇文章内部的开始，中间，结尾部分，展示次数比较多，强烈推荐)</li>
</ul>
<p>使用了第三种。具体的操作流程是:</p>
<ul>
<li><p>在网站上，选择广告单元-&gt;新建广告位-&gt;选择对应的广告类型-&gt;生成对应的广告代码。</p>
</li>
<li><p>在themes/next/layout/_custom 下新建 google_adsense.swig 文件，将代码复制过去。</p>
</li>
<li><p>google_adsense.swig 文件引用位置决定广告展示位置，位置自己决定。</p>
</li>
<li><p>插入评论区：将代码插入<em>\themes\next\layout_partials\comments.swig</em> 中的末尾即可</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">ins</span> <span class="attr">class</span>=<span class="string">&quot;adsbygoogle&quot;</span></span></span></span><br><span class="line"><span class="xml">     style=&quot;display:block; text-align:center;&quot;</span></span><br><span class="line"><span class="xml">     data-ad-layout=&quot;in-article&quot;</span></span><br><span class="line"><span class="xml">     data-ad-format=&quot;fluid&quot;</span></span><br><span class="line"><span class="xml">     data-ad-client=&quot;ca-pub-9110130131408694&quot;</span></span><br><span class="line"><span class="xml">     data-ad-slot=&quot;6644558881&quot;&gt;<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">     (adsbygoogle = window.adsbygoogle || []).push(</span><span class="template-variable">&#123;&#125;</span><span class="xml">);</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li><p>hexo deploy代码到github pages上，可能需要20-30分钟广告才会显示在网页上。我的很快，基本1-2分钟就显示了。</p>
</li>
</ul>
</li>
</ol>
<h1 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h1><p>参考 <a href="https://leezhiy.github.io/">https://leezhiy.github.io</a></p>
<h2 id="使用-hexo-tag-aplayer-插件"><a href="#使用-hexo-tag-aplayer-插件" class="headerlink" title="使用 hexo-tag-aplayer 插件"></a>使用 hexo-tag-aplayer 插件</h2><p><a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a> 就是将 <a href="https://github.com/DIYgod/APlayer">APlayer</a> 内嵌入博客页面的 Hexo 插件。</p>
<p>安装执行：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ npm install <span class="comment">--save hexo-tag-aplayer</span></span><br></pre></td></tr></table></figure>

<p>原先 <code>hexo-tag-aplayer</code> 不支持 <code>MetingJS</code>，使得需要图片 url，音乐 url 等等参数，操作起来都很麻烦，需要去音乐网站扒音乐播放链接或者下载下来存储在七牛云或本地，要了解具体参数和使用可以查看其<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">中文文档</a>了解。</p>
<h2 id="MeingJS-支持-3-0-新功能"><a href="#MeingJS-支持-3-0-新功能" class="headerlink" title="MeingJS 支持 (3.0 新功能)"></a>MeingJS 支持 (3.0 新功能)</h2><p><a href="https://github.com/metowolf/MetingJS">MetingJS</a> 是基于 <a href="https://github.com/metowolf/Meting">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ 音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p>
<p>如果想在本插件中使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span>                                  <span class="comment"># Meting support, default: false</span></span><br></pre></td></tr></table></figure>

<p>接着就可以 在<strong>文章</strong>中使用 MetingJS 播放器了，例如打开网易云音乐网站找一个歌单，例如： <a href="https://music.163.com/#/playlist?id=3136952023%EF%BC%8C">https://music.163.com/#/playlist?id=3136952023，</a> 这个歌单的 id 就是 3136952023，按下面格式即可使用：</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;% meting <span class="string">&quot;3136952023&quot;</span> <span class="string">&quot;netease&quot;</span> <span class="string">&quot;playlist&quot;</span> <span class="string">&quot;theme:#FF4081&quot;</span> <span class="string">&quot;mode:circulation&quot;</span> <span class="string">&quot;mutex:true&quot;</span> <span class="string">&quot;listmaxheight:340px&quot;</span> <span class="string">&quot;preload:auto&quot;</span> %&#125;</span><br></pre></td></tr></table></figure>

<h2 id="全局音乐插件"><a href="#全局音乐插件" class="headerlink" title="全局音乐插件"></a>全局音乐插件</h2><p>如果想在非 Post 页面使用插件功能，直接使用上面的方法修改 layout 的话会报以下错误</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Error: </span>Unexpected tag &quot;meting&quot;</span><br></pre></td></tr></table></figure>

<p>所以我们只能使用另一种办法，创建 <code>Hexo/source/_data/APlayer.swig</code> 文件，添加以下内容。</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml">&#123;% if aplayer.enabled %&#125;</span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- require APlayer --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">aplayer.cdn.css</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">aplayer.cdn.js</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- require MetingJS --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">aplayer.cdn.meting</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  &lt;meting-js</span></span><br><span class="line"><span class="xml">    server=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.server</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    type=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.type</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    fixed=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.fixed</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    id=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.id</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    auto=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.auto</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    mini=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.mini</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    autoplay=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.autoplay</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    theme=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.theme</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    loop=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.loop</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    order=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.order</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    preload=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.preload</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    volume=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.volume</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    mutex=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.mutex</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    list-folded=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.listfolded</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    list-max-height=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.listmaxheight</span>&#125;&#125;</span><span class="xml">&quot;</span></span><br><span class="line"><span class="xml">    storage-name=&quot;</span><span class="template-variable">&#123;&#123;<span class="name">aplayer.storagename</span>&#125;&#125;</span><span class="xml">&quot; &gt;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">meting-js</span>&gt;</span></span></span><br><span class="line"><span class="xml">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p>接着打开 hexo/themes/next/_config.yml主题配置文件 ，在最底部添加</p>
<figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta"># --------------------------------------------------------------</span></span><br><span class="line"><span class="meta"># APlayer settings</span></span><br><span class="line"><span class="meta"># --------------------------------------------------------------</span></span><br><span class="line"><span class="meta"># enabled:  true/false   开启/关闭</span></span><br><span class="line"><span class="meta"># id: song id / playlist id / album id / search keyword   歌曲ID、歌单ID、关键字</span></span><br><span class="line"><span class="meta"># server: netease, tencent, kugou, xiami, baidu     音乐平台</span></span><br><span class="line"><span class="meta"># type: song, playlist, album, search, artist  类型</span></span><br><span class="line"><span class="meta"># auto: music link, support: netease, tencent, xiami</span></span><br><span class="line"><span class="meta"># fixed: true/false   吸底模式</span></span><br><span class="line"><span class="meta"># mini: true/false   迷你模式</span></span><br><span class="line"><span class="meta"># autoplay: true/false   自动播放</span></span><br><span class="line"><span class="meta"># theme: #eeeeee 主题颜色</span></span><br><span class="line"><span class="meta"># loop: values: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27; 循环播放</span></span><br><span class="line"><span class="meta"># order: values: &#x27;list&#x27;, &#x27;random&#x27; 是否随机播放</span></span><br><span class="line"><span class="meta"># preload: values: &#x27;none&#x27;, &#x27;metadata&#x27;, &#x27;auto&#x27; 预载入</span></span><br><span class="line"><span class="meta"># volume:	0.7	默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span></span><br><span class="line"><span class="meta"># mutex: true/false	互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</span></span><br><span class="line"><span class="meta"># list-folded:	true/false	列表默认折叠</span></span><br><span class="line"><span class="meta"># list-max-height:	340px	列表最大高度</span></span><br><span class="line"><span class="meta"># storage-name:	metingjs	存储播放器设置的 localStorage key</span></span><br><span class="line">aplayer:</span><br><span class="line">  enabled: <span class="literal">true</span></span><br><span class="line">  id: <span class="number">3099335800</span></span><br><span class="line">  server: netease</span><br><span class="line">  type: playlist</span><br><span class="line">  auto:</span><br><span class="line">  fixed: <span class="literal">true</span></span><br><span class="line">  mini: <span class="literal">true</span></span><br><span class="line">  autoplay: <span class="literal">true</span></span><br><span class="line">  theme: #<span class="number">607</span>d8b</span><br><span class="line">  loop: <span class="string">&#x27;all&#x27;</span></span><br><span class="line">  order: <span class="string">&#x27;random&#x27;</span></span><br><span class="line">  preload: <span class="string">&#x27;auto&#x27;</span></span><br><span class="line">  volume: <span class="number">0.7</span></span><br><span class="line">  mutex: <span class="literal">true</span></span><br><span class="line">  listfolded: <span class="literal">true</span></span><br><span class="line">  listmaxheight: <span class="number">340</span>px</span><br><span class="line">  storagename: metingjs</span><br><span class="line">  cdn:</span><br><span class="line">    css: https:<span class="comment">//cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css</span></span><br><span class="line">    js: https:<span class="comment">//cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js</span></span><br><span class="line">    meting: https:<span class="comment">//cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js</span></span><br></pre></td></tr></table></figure>

<p>打开 <code>hexo/scripts/plugins.js</code>, 在 head 注入点<a href="https://theme-next.org/docs/advanced-settings">注入</a> APlayer</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">hexo.extend.filter.register(<span class="string">&#x27;theme_inject&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="params">(injects)</span> </span>&#123;</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  <span class="comment">// 引入 APlayer</span></span><br><span class="line">  injects.head.file(<span class="string">&#x27;aplayer&#x27;</span>, <span class="string">&#x27;source/_data/APlayer.swig&#x27;</span>, &#123;aplayer: hexo.theme.config.aplayer&#125;);</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">  .</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>最后是 MetingJs 的参数详情：</p>
<table>
<thead>
<tr>
<th align="left">参数名</th>
<th align="left">默认</th>
<th align="left">description</th>
</tr>
</thead>
<tbody><tr>
<td align="left">id</td>
<td align="left">require</td>
<td align="left">歌曲 ID / 播放列表 ID / 专辑 ID / 搜索关键字</td>
</tr>
<tr>
<td align="left">server</td>
<td align="left">require</td>
<td align="left">音乐平台，可选值： ‘netease’，’tencent’，’kugou’，’xiami’，’baidu’</td>
</tr>
<tr>
<td align="left">type</td>
<td align="left">require</td>
<td align="left">类型，可选值：’song’, ‘playlist’, ‘album’, ‘search’, ‘artist’</td>
</tr>
<tr>
<td align="left">auto</td>
<td align="left">options</td>
<td align="left">音乐链接，支持： ‘netease’, ‘tencent’, ‘xiami’</td>
</tr>
<tr>
<td align="left">fixed</td>
<td align="left">false</td>
<td align="left">开启吸底模式，<a href="https://aplayer.js.org/#/home?id=fixed-mode">详情</a></td>
</tr>
<tr>
<td align="left">mini</td>
<td align="left">false</td>
<td align="left">开启迷你模式，<a href="https://aplayer.js.org/#/home?id=mini-mode">详情</a></td>
</tr>
<tr>
<td align="left">autoplay</td>
<td align="left">false</td>
<td align="left">音频自动播放</td>
</tr>
<tr>
<td align="left">theme</td>
<td align="left">#2980b9</td>
<td align="left">主题色</td>
</tr>
<tr>
<td align="left">loop</td>
<td align="left">all</td>
<td align="left">音频循环播放，可选值: ‘all’, ‘one’, ‘none’</td>
</tr>
<tr>
<td align="left">order</td>
<td align="left">list</td>
<td align="left">音频循环顺序，可选值: ‘list’, ‘random’</td>
</tr>
<tr>
<td align="left">preload</td>
<td align="left">auto</td>
<td align="left">预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td>
</tr>
<tr>
<td align="left">volume</td>
<td align="left">0.7</td>
<td align="left">默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td>
</tr>
<tr>
<td align="left">mutex</td>
<td align="left">true</td>
<td align="left">互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器</td>
</tr>
<tr>
<td align="left">lrc-type</td>
<td align="left">0</td>
<td align="left"><a href="https://aplayer.js.org/#/home?id=lrc">详情</a></td>
</tr>
<tr>
<td align="left">list-folded</td>
<td align="left">false</td>
<td align="left">列表默认折叠</td>
</tr>
<tr>
<td align="left">list-max-height</td>
<td align="left">340px</td>
<td align="left">列表最大高度</td>
</tr>
<tr>
<td align="left">storage-name</td>
<td align="left">metingjs</td>
<td align="left">存储播放器设置的 localStorage key</td>
</tr>
</tbody></table>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h1 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h1><h1 id="RSS-订阅设置"><a href="#RSS-订阅设置" class="headerlink" title="RSS 订阅设置"></a>RSS 订阅设置</h1><h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
  </entry>
  <entry>
    <title>博客搭建/hexo 博客环境搭建</title>
    <url>/2021/05/09/Blog%20Building/hexo%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Install-Brew"><a href="#Install-Brew" class="headerlink" title="Install Brew"></a>Install Brew</h1><p><strong>中科大镜像使用，加速安装</strong></p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/">参考链接</a> </p>
<p>首先，需要确保系统中安装了 bash、git 和 curl，对于 macOS 用户需额外要求安装 Command Line Tools (CLT) for Xcode。</p>
<span id="more"></span>

<ul>
<li>对于 macOS 用户，系统自带 bash、git 和 curl，在命令行输入 <code>xcode-select --install</code> 安装 CLT for Xcode 即可。</li>
<li>对于 Linux 用户，系统自带 bash，仅需额外安装 git 和 curl。</li>
</ul>
<p>接着，在终端输入以下几行命令设置环境变量：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$(uname -s)</span>&quot;</span> == <span class="string">&quot;Linux&quot;</span> ]]; then <span class="attribute">BREW_TYPE</span>=<span class="string">&quot;linuxbrew&quot;</span>; <span class="keyword">else</span> <span class="attribute">BREW_TYPE</span>=<span class="string">&quot;homebrew&quot;</span>; fi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HOMEBREW_BREW_GIT_REMOTE</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HOMEBREW_CORE_GIT_REMOTE</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/<span class="variable">$&#123;BREW_TYPE&#125;</span>-core.git&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">HOMEBREW_BOTTLE_DOMAIN</span>=<span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/<span class="variable">$&#123;BREW_TYPE&#125;</span>-bottles&quot;</span></span><br></pre></td></tr></table></figure>

<p>最后，在终端运行以下命令以安装 Homebrew / Linuxbrew：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 从本镜像下载安装脚本并安装 Homebrew / Linuxbrew</span></span><br><span class="line">git clone --depth=<span class="number">1</span> https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/git/</span>homebrew/install.git brew-install</span><br><span class="line"><span class="regexp">/bin/</span>bash brew-install/install.sh</span><br><span class="line">rm -rf brew-install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可从 GitHub 获取官方安装脚本安装 Homebrew / Linuxbrew</span></span><br><span class="line"><span class="regexp">/bin/</span>bash -c <span class="string">&quot;$(curl -fsSL https://github.com/Homebrew/install/raw/master/install.sh)&quot;</span></span><br></pre></td></tr></table></figure>

<p>检查是否安装成功</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew doctor</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="string">&quot;/usr/local/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>



<p><strong>fatal: unable to access ‘<a href="https://github.com/&#39;">https://github.com/&#39;</a>: Could not resolve proxy: aproxy</strong></p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> --<span class="keyword">unset</span> <span class="keyword">http</span>.proxy</span><br><span class="line">git config --<span class="keyword">global</span> --<span class="keyword">unset</span> https.proxy</span><br></pre></td></tr></table></figure>



<p><strong>uninstall brew</strong></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># uninstall</span></span><br><span class="line">cd `brew --prefix`</span><br><span class="line">rm -rf Cellar</span><br><span class="line">brew prune</span><br><span class="line">rm -rf Library .git .gitignore bin<span class="regexp">/brew README.md share/m</span>an<span class="regexp">/man1/</span>brew</span><br><span class="line">rm -rf ~<span class="regexp">/Library/</span>Caches/Homebrew</span><br><span class="line"></span><br><span class="line"><span class="comment"># uninstall</span></span><br><span class="line"><span class="regexp">/bin/</span>bash -c <span class="string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install</span></span><br><span class="line"><span class="regexp">/bin/</span>bash -c <span class="string">&quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span><br></pre></td></tr></table></figure>



<h1 id="Install-Node-and-npm-by-NVM"><a href="#Install-Node-and-npm-by-NVM" class="headerlink" title="Install Node and npm by NVM"></a>Install Node and npm by NVM</h1><p><strong>NVM 安装</strong> (node version manager)</p>
<p>install nvm by brew <a href="https://formulae.brew.sh/formula/nvm">link</a></p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>nvm</span><br></pre></td></tr></table></figure>

<p>install by </p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">curl -o- https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/nvm-sh/</span>nvm<span class="regexp">/v0.35.3/i</span>nstall.sh | bash</span><br></pre></td></tr></table></figure>



<p><strong>报错 “zsh: command not found: nvm”</strong></p>
<p>原因：安装未成功<br>创建一个nvm的文件用来装载nvm的内容<br>在命令行执行：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">mkdir ~/.nvm</span><br></pre></td></tr></table></figure>

<p>需要在~/.zshrc 文件里面增加以下配置<br>用vim打开该文件</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">vim ~<span class="string">/.zshrc</span></span><br></pre></td></tr></table></figure>

<p>如果有swp文件妨碍修改，删掉即可<br>按 i 进入书写模式，黏贴以下代码</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">NVM_DIR</span>=<span class="string">&quot;<span class="variable">$HOME</span>/.nvm&quot;</span>[ -s <span class="string">&quot;/usr/local/opt/nvm/nvm.sh&quot;</span> ] &amp;&amp; . <span class="string">&quot;/usr/local/opt/nvm/nvm.sh&quot;</span>  # This loads nvm[ -s <span class="string">&quot;/usr/local/opt/nvm/etc/bash_completion&quot;</span> ] &amp;&amp; . <span class="string">&quot;/usr/local/opt/nvm/etc/bash_completion&quot;</span></span><br></pre></td></tr></table></figure>

<p>按 esc 键  :wq 保存退出</p>
<p>执行命令使配置生效：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>

<p>再次执行brew install nvm</p>
<p><strong>nvm 安装 Node and npm</strong></p>
<p>查看 version </p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm ls-remote</span></span><br></pre></td></tr></table></figure>

<p>安装版本</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">nvm install &lt;<span class="built_in">version</span>&gt;</span><br></pre></td></tr></table></figure>

<p>查看本地安装的 node 版本</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm list</span></span><br></pre></td></tr></table></figure>

<p>指定使用的版本</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm</span> use &lt;version&gt; # v<span class="number">15</span>.<span class="number">12</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>检查使用的 node 版本</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">nvm currentornode -<span class="built_in">version</span></span><br></pre></td></tr></table></figure>

<p>卸载版本</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">nvm uninstall &lt;<span class="built_in">version</span>&gt;</span><br></pre></td></tr></table></figure>



<h1 id="Install-Node-and-npm"><a href="#Install-Node-and-npm" class="headerlink" title="Install Node and npm"></a>Install Node and npm</h1><p>不推荐使用官方的安装包安装（<a href="https://nodejs.org/en/download/%EF%BC%89">https://nodejs.org/en/download/）</a></p>
<p>原因：since the Node installation process installs npm in a directory with local permissions and can cause permissions errors when you run npm packages globally</p>
<p><strong>Solve EACCES error</strong></p>
<p>If you see an <code>EACCES</code> error when you try to <a href="https://docs.npmjs.com/downloading-and-installing-packages-globally">install a package globally</a>, you can either:</p>
<ol>
<li>Reinstall npm with a node version manager (recommended),</li>
</ol>
<p>do not need to remove your current version of npm or Node.js before installing a node version manager.</p>
<ol start="2">
<li>Manually change npm’s default directory</li>
</ol>
<p><strong>卸载 Node &amp; npm completely</strong></p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="keyword">cd</span> usrcd localcd <span class="keyword">include</span> sudo <span class="keyword">rm</span> -R nodecd ../libsudo <span class="keyword">rm</span> -R node_modulescd ../binsudo <span class="keyword">rm</span> -R node</span><br></pre></td></tr></table></figure>

<p><strong>use brew install node</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew uninstall nodebrew doctorbrew cleanup --prune-prefix<span class="comment"># installbrew install node;which node # =&gt; /usr/local/bin/nodeexport NODE_PATH=&#x27;/usr/local/lib/node_modules&#x27; # &lt;--- add this ~/.bashrc</span></span><br></pre></td></tr></table></figure>



<p><strong>npm 使用</strong></p>
<p>安装 package</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm install &lt;pacakge <span class="built_in">name</span>&gt; <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>卸载 package</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm uninstall &lt;pacakge <span class="built_in">name</span>&gt;</span><br></pre></td></tr></table></figure>



<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>next博客入门设置</title>
    <url>/2021/05/09/Blog%20Building/next%E5%8D%9A%E5%AE%A2%E5%85%A5%E9%97%A8%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Install-hexo"><a href="#Install-hexo" class="headerlink" title="Install hexo"></a>Install hexo</h1><p>安装完成后，需要安装hexo：</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">sudo <span class="keyword">su</span></span><br><span class="line"># <span class="keyword">input</span> password</span><br><span class="line">npm install -<span class="keyword">g</span> hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo <span class="comment">--save</span></span><br><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm install hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm install hexo-renderer-pandoc <span class="comment">--save</span></span><br><span class="line"></span><br><span class="line">如果出问题的话，可以尝试更换渲染工具为 hexo-renderer-pandoc：</span><br><span class="line">npm uninstall hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm install hexo-renderer-pandoc <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>建站</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">init</span></span><br></pre></td></tr></table></figure>

<p>安装依赖包：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure>

<p>安装一下hexo-deployer-git</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">git init</span><br></pre></td></tr></table></figure>

<h1 id="Hexo-使用自定义模板"><a href="#Hexo-使用自定义模板" class="headerlink" title="Hexo 使用自定义模板"></a>Hexo 使用自定义模板</h1><ol>
<li>新建命令行</li>
</ol>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> [layout] &lt;<span class="built_in">title</span>&gt;</span><br></pre></td></tr></table></figure>

<ol>
<li><p>Layout 介绍</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221258.png"></p>
<ul>
<li>post:  saved in source/_posts (public)</li>
<li>page: saved in source</li>
<li>draft: saved in source/_drafts (private)</li>
<li>self-defined layout: saved in source/_posts (public)</li>
</ul>
</li>
<li><p>自定义模板</p>
<ul>
<li><p>用户自定义模板在 scaffolds 文件夹中，比如 “self-module.md”</p>
</li>
<li><p>命令行如下</p>
<figure class="highlight monkey"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="built_in">self</span>-<span class="keyword">module</span> 【<span class="keyword">module</span> name】</span><br></pre></td></tr></table></figure></li>
<li><p>模板内容，以后可以通过 <code>next new self-module [blog name]</code> 就可以以这个模板初始你的博文内容如下<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210509111020.png"></p>
</li>
</ul>
</li>
</ol>
<h1 id="Hexo-免密部署-hexo-deploy"><a href="#Hexo-免密部署-hexo-deploy" class="headerlink" title="Hexo 免密部署 (hexo deploy)"></a>Hexo 免密部署 (hexo deploy)</h1><p><strong>生成 SSH 秘钥</strong></p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;[your_email@example.com]&quot;</span></span><br><span class="line"># Creates a <span class="keyword">new</span> ssh key using the provided email</span><br><span class="line">Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key pair.</span><br><span class="line">Enter <span class="keyword">file</span> in which to save the key (<span class="regexp">/home/y</span>ou<span class="regexp">/.ssh/i</span>d_rsa):</span><br></pre></td></tr></table></figure>

<p>将整个 [<a href="mailto:&#x79;&#111;&#117;&#114;&#x5f;&#101;&#109;&#x61;&#105;&#x6c;&#64;&#x65;&#120;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;">&#x79;&#111;&#117;&#114;&#x5f;&#101;&#109;&#x61;&#105;&#x6c;&#64;&#x65;&#120;&#97;&#109;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#109;</a>] 替换成你们的 github 账户注册邮箱</p>
<p><strong>提示输入密码</strong></p>
<p>直接 enter 键，也可以设置 ssh 的密码，以后 deploy 的时候每次也需要使用这个密码，建议直接 enter (用enter 替代 [Type a passphrase])</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): [<span class="keyword">Type</span> <span class="type">a </span>passphrase]Enter same passphrase again: [<span class="keyword">Type</span> <span class="type">passphrase </span>again]</span><br></pre></td></tr></table></figure>

<p><strong>秘钥生成成功</strong></p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">Your identification has been saved in <span class="regexp">/home/y</span>ou<span class="regexp">/.ssh/i</span>d_rsa.Your <span class="keyword">public</span> key has been saved in <span class="regexp">/home/y</span>ou<span class="regexp">/.ssh/i</span>d_rsa.pub.The key fingerprint is:…………………此处是密钥内容…………………… your_email@example.com</span><br></pre></td></tr></table></figure>

<p><strong>复制秘钥至你的 GitHub 账户</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">vim <span class="selector-tag">i</span></span><br></pre></td></tr></table></figure>

<p>将文件 “id_rsa.pub” 所有的内容复制出来粘贴到</p>
<p>在 <code>jason-huanghao.github.io</code> 的首页菜单栏中点击 Settings –&gt; Deploy keys –&gt; Add deploy key，然后将生成的 <code>id_rsa.pub</code> 中的内容全选复制到 key 输入框中，然后点击 Add key 完成添加公钥</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210508221421.png"></p>
<p><strong>测试是否成功</strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ssh -T <span class="symbol">git@</span>github.com</span><br></pre></td></tr></table></figure>

<p>收到下面提示，则配置成功</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">Hi username! You<span class="symbol">&#x27;ve</span> successfully authenticated, but GitHub does <span class="keyword">not</span> provide shell <span class="keyword">access</span>.</span><br></pre></td></tr></table></figure>

<p><strong>配置hexo/_config.yml</strong></p>
<p>打开 <code>Hexo</code> 的配置文件 <code>_config.yml</code> ，把 <code>deploy</code> 下的 <code>repo</code> 改为</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># Deployment## Doc<span class="variable">s:</span> http<span class="variable">s:</span>//hexo.io/docs/one-<span class="keyword">command</span>-deploymentdeploy:  <span class="built_in">type</span>: git  repo: git@github.<span class="keyword">com</span>:jason-huanghao/jason-huanghao.github.io.git  branch: master</span><br></pre></td></tr></table></figure>

<h1 id="Hexo-命令详解"><a href="#Hexo-命令详解" class="headerlink" title="Hexo 命令详解"></a>Hexo 命令详解</h1><ol>
<li><p>hexo init [folder]<br>这个命令是 Hexo 初始化命令。[folder] 表示你要初始化的文件夹。如果你要初始化本地，直接 hexo init . 。</p>
</li>
<li><p>hexo new [layout]<br>这个命令是新建文章或页面用的命令。其中 [layout] 表示他的模板（即页面或者文章），表示标题。</p>
<p>用法：</p>
<p>hexo new post 001 ，表示新建了一个标题为 001 的文章。<br>hexo new page 001 ，表示新建了一个标题为 001 的页面。<br>如果你不想在终端中新建文章或页面，可以直接在 博客根目录/source/_post/ 目录下创建 Markdown 文件写文章。或者在 博客根目录/source/ 目录下创建一个文件夹，然后在新文件夹里创建 index.md 写页面即可。</p>
<p>:::tip 提醒</p>
<p>当你新建页面后，页面的链接就是你页面所在的文件夹的名字。</p>
<p>例如：我在 博客根目录/source/ 下新建了一个名为 test 的文件夹，然后在 test 文件夹下写 Markdown 文件，那么这个页面的链接就是 网址/test。</p>
</li>
<li><p>hexo server<br>当你要在本地查看网站的时候，就可以用这个命令。</p>
<p>默认在 <a href="http://localhost:8080/">http://localhost:8080/</a> 这里，可能会不同，注意提示信息即可。</p>
<p>:::tip 提醒</p>
<p>如果你想要换端口号（上面的 8080 就是端口号），可以在终端里输入 hexo s -p 端口号。</p>
<p>如果遇到端口占用，在hexo/_config.yml 中添加下面语句修改 hexo 启动端口号</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">server</span>:  port: <span class="number">4001</span>  compress: <span class="keyword">true</span>  <span class="keyword">header</span>: <span class="keyword">true</span></span><br></pre></td></tr></table></figure></li>
<li><p>hexo generate<br>这个命令是生成网站静态文件的时候用的，生成后网页将会放在根目录下面的 public 文件夹里。</p>
</li>
<li><p>hexo deploy<br>这个命令用来部署网站，使用此命令将会把生成好的页面（即 public 文件夹里的内容）部署到指定的地方上。</p>
</li>
<li><p>hexo clean<br>这个命令用来清空 public 文件夹。</p>
</li>
<li><p>hexo version<br>这个命令用来输出你所使用的 Hexo 目前的版本号。</p>
</li>
<li><p>部署本地文件到GitHub上</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">$ hexo clean <span class="meta">&amp;&amp; hexo d -g</span></span><br></pre></td></tr></table></figure></li>
<li><p>Hexo -v 查看 hexo 版本</p>
</li>
</ol>
<h1 id="Next-主题使用"><a href="#Next-主题使用" class="headerlink" title="Next 主题使用"></a>Next 主题使用</h1><p><strong>下载 Next 主题</strong></p>
<p>cd themes 文件夹</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/iissnan/</span>hexo-theme-<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p><strong>修改 theme</strong></p>
<p>编辑 hexo/_config.yml，找到 theme 那一行配置，修改为 next</p>
<p><strong>添加“分类”，“关于”和“标签”菜单</strong></p>
<p><strong>打开 tags，about，categories</strong></p>
<p>在主题配置文件 next/_config.yml 在 menu 下去掉 tags，about，categories 注释。<br>注意这里“主题配置文件”指的是 themes/next 目录的下的 _config.yml。</p>
<p><strong>创建 tags，about，categories</strong></p>
<p>在 hexo 文件夹</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> tags</span><br></pre></td></tr></table></figure>

<p>会在 source 文件夹生成 tags 文件夹，编辑里面的 index.md ，添加</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span>: <span class="string">&quot;tags&quot;</span>comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>同样的方法添加 categories；<br>添加 about 不需要修改 md 文件的 type，因为 tags，categories 是特殊目录类型，about 只是简单的一个 md。</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://www.youtube.com/watch?v=erKYtw4Rfhk">https://www.youtube.com/watch?v=erKYtw4Rfhk</a></li>
</ol>
]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>博客域名绑定</title>
    <url>/2021/05/16/Blog%20Building/%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Namesilo-域名注册平台介绍"><a href="#Namesilo-域名注册平台介绍" class="headerlink" title="Namesilo 域名注册平台介绍"></a>Namesilo 域名注册平台介绍</h1><p>去<a href="https://www.namesilo.com/">namesilo</a>官网查找到自己满意的域名，价格都有标注。一些冷门域名后缀第一年比较便宜，续费可能会比较贵(注意关注Renewal后面的价格，这是续费的价格)，比如我搜索 “hao1234” 这个域名，“hao1234.buzz”虽然便宜，但是续费需要27.99刀每年 (简直贵出天际) 。一般的.com顶级域名价格是$8.99，且目前续费不涨价，挺划算的。相比其他平台价格很美丽，访问速度也还行，老牌的域名销售平台了。</p>
<span id="more"></span>
<p>在首页根据关键词搜素你感兴趣的域名，点击 “Add” 添加你心仪的域名。<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516152110.png"></p>
<h1 id="Namesilo-域名购买"><a href="#Namesilo-域名购买" class="headerlink" title="Namesilo 域名购买"></a>Namesilo 域名购买</h1><ol>
<li>注册账号<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516152456.png"></li>
<li>完善个人信息，必须项，等你购买域名时也会要求填信息，其中蓝色标 * 项为必填项<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516152624.png"></li>
<li>选择好了之后购买域名，注意可以选择是否自动续费，把隐私保护项选起来(有些平台隐私保护还要单独收费，Namesilo可谓良心了)<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516152747.png"></li>
<li>支付支持非常多，可以支付宝，微信，我选择微信支付。<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516152956.png"></li>
</ol>
<h1 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h1><ol>
<li><p>点击个人账户右上角的 “Manage My Domains”，自己购买的域名的蓝色按钮来配置自己的域名<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516153512.png"></p>
</li>
<li><p>添加 A 记录，IP地址通过 <code>ping yourusername.github.io</code> 得到，这就是你的github部署的博客的IP地址，改 TTL 为3600<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516153632.png"></p>
</li>
<li><p>添加 CNAME 记录，添加一条 CNAME，实现绑定你的域名和你的github博客<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516153850.png"></p>
</li>
<li><p>到你的本地博客目录添加一个不带后缀的文件 <code>hexo/source/CNAME</code>，在其中输入你后买的域名，比如我购买的是 “jason-hao.cyou”，那么就把它输入这个文件中，最后重新生成部署下 hexo <code>hexo gen &amp;&amp; hexo d</code>.</p>
</li>
<li><p>令你的域名网站支持 <code>https</code><br>进入你的github博客仓库（不是bolg网址）, 然后 <code>Settings-&gt;Pages-&gt;Enforce HTTPS</code><br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516154750.png"></p>
</li>
<li><p>最后一步，添加你的新域名到 Goolge 检索<br>进入 <a href="https://search.google.com/search-console">Google Search Console</a>，左上角 <code>Add property</code> 添加你注册的新域名比如 <code>hao1234.buzz</code>，<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516155153.png"></p>
</li>
</ol>
<p>复制 Google 给的验证字段<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516155232.png"></p>
<p>粘贴到你的 Namessilo 注册的域名下，进入域名配置页面，按如下操作。TEXT 就是上一步复制的 Google 验证字段<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516155649.png"></p>
<p>回到 <a href="https://search.google.com/search-console">Google Search Console</a>，继续验证 <code>VERIFY</code>，这一步可能失败，一般域名解析需要时间，大概等个半天一天就可以了<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516155935.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://ftzzloo.com/github-pages-and-domain-name-setting/">https://ftzzloo.com/github-pages-and-domain-name-setting/</a></li>
<li><a href="https://juejin.cn/post/6844903477051654152">https://juejin.cn/post/6844903477051654152</a></li>
</ol>
]]></content>
      <categories>
        <category>Blog Building</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>GNN Survey</title>
    <url>/2021/06/23/Paper%20Reading/GNN/GNN-Survey/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210620095515.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="">Graph Neural Networks for Natural Language Processing: A Survey, 2021</a></li>
</ol>
]]></content>
      <categories>
        <category>Paper Reading</category>
        <category>GNN</category>
      </categories>
      <tags>
        <tag>GNN</tag>
      </tags>
  </entry>
  <entry>
    <title>养生</title>
    <url>/2021/06/01/Life/%E5%85%BB%E7%94%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span>

<p>养生两个目标</p>
<ol>
<li>养气血</li>
<li>排垃圾</li>
</ol>
<p>按摩 </p>
<ol>
<li>头部</li>
</ol>
<p>梳头，从前额往后梳（100次）<br>头侧边的胆经，从前往后，往下梳（100次）</p>
<ol>
<li><p>背部</p>
</li>
<li><p>手部</p>
</li>
</ol>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Life</category>
      </categories>
  </entry>
  <entry>
    <title>学校申请</title>
    <url>/2021/06/02/Life/%E5%AD%A6%E6%A0%A1%E7%94%B3%E8%AF%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="大区职位申请链接"><a href="#大区职位申请链接" class="headerlink" title="大区职位申请链接"></a>大区职位申请链接</h1><ol>
<li><a href="https://euraxess.ec.europa.eu/">https://euraxess.ec.europa.eu</a></li>
<li><a href="https://scholarshipdb.net/">https://scholarshipdb.net/</a></li>
</ol>
<h1 id="Potential-Position"><a href="#Potential-Position" class="headerlink" title="Potential Position"></a>Potential Position</h1><h2 id="GNN"><a href="#GNN" class="headerlink" title="GNN"></a>GNN</h2><ol>
<li><a href="https://www.kth.se/profile/mvaz">Michail Vazirgiannis</a>, <a href="https://www.kth.se/profile/annaoj">Anna Olanås Jansson</a> from KTH, </li>
</ol>
<h2 id="Knowledge-Graph"><a href="#Knowledge-Graph" class="headerlink" title="Knowledge Graph"></a>Knowledge Graph</h2><h1 id="欧盟Erasmus-与EIT奖学金项目"><a href="#欧盟Erasmus-与EIT奖学金项目" class="headerlink" title="欧盟Erasmus+与EIT奖学金项目"></a>欧盟Erasmus+与EIT奖学金项目</h1><p>欧盟Erasmus+奖学金：<br>大部分在12月份-1月份之间，也有个别早一点在11月份就截止申请，或晚一点在3月份截止申请</p>
<p>EIT奖学金：<br>截止日期是1月中旬到3月初之间</p>
<span id="more"></span>

<h1 id="瑞士留学"><a href="#瑞士留学" class="headerlink" title="瑞士留学"></a>瑞士留学</h1><p>苏黎世联邦理工学院（申请截止日期12月15日）、洛桑联邦理工学院（申请截止日期12月15日）、巴塞尔大学（申请截止日期4月30日）、伯尔尼大学（申请截止日期4月30日）、日内瓦大学（申请截止日期2月28日）、苏黎世大学（申请截止日期2月28日）、洛桑大学（申请截止日期2月28日）等</p>
<h1 id="荷兰留学"><a href="#荷兰留学" class="headerlink" title="荷兰留学"></a>荷兰留学</h1><p>荷兰大学的奖学金，截止日期大多在12月份到2月份之间，比如代尔夫特理工大学的奖学金一般是12月1日截止申请，乌特勒支大学的奖学金也是12月1日截止申请，阿姆斯特丹大学的奖学金是2月1日截止申请</p>
<p>阿姆斯特丹大学（申请截止日期3月1日或4月1日，根据学校不同而不同）、代尔夫特理工大学（4月1日）、瓦格宁根大学（申请截止日期5月1日）、莱顿大学（申请截止日期4月1日）、乌特勒支大学（申请截止日期4月1日）、鹿特丹Erasmus大学（申请截止日期4月15日至6月1日，根据学院不同而不同）、格罗宁根大学（申请截止日期5月1日）、马斯特里赫特大学（申请截止日期5月1日）、内梅亨大学（申请截止日期4月1日）、埃因霍温科技大学（申请截止日期5月1日）、阿姆斯特丹自由大学（申请截止日期4月1日）、屯特大学（申请截止日期5月1日）、蒂尔堡大学（申请截止日期4月1日）等</p>
<h1 id="德国留学"><a href="#德国留学" class="headerlink" title="德国留学"></a>德国留学</h1><p>慕尼黑工业大学（申请截止日期大部分项目5月31日截止，个别项目3月截止）、亚琛工业大学（申请截止日期3月1日）、德累斯顿工业大学（申请截止日期5月31日）、柏林工业大学（申请截止日期3月至5月，根据项目不同而不同）、达姆斯塔特工业大学（申请截止日期7月15日）、卡尔斯鲁厄理工学院（申请截止日期4月至6月，根据项目不同而不同）、斯图加特大学（申请截止日期2月15日）、汉诺威大学（申请截止日期5月31日）、布伦瑞克工业大学（申请截止日期3月15日）；其他知名大学：慕尼黑大学（申请截止日期7月15日）、海德堡大学（申请截止日期3月至7月，根据项目不同而不同）、柏林洪堡大学（申请截止日期3月至7月，根据项目不同而不同）、弗赖堡大学（申请截止日期5月至7月，根据项目不同而不同）、柏林自由大学（申请截止日期5月31日）、图宾根大学（申请截止日期5月15日7月15日，根据项目不同而不同）、波恩大学（申请截止日期3月至7月，根据项目不同而不同）、曼海姆大学（申请截止日期4月30日或5月31日，根据项目不同而不同）、哥廷根大学（申请截止日期1月至7月，根据项目不同而不同）、乌尔姆大学（申请截止日期3月至5月，根据项目不同而不同）、埃尔朗根纽伦堡大学（申请截止日期3月至7月，根据项目不同而不同）、明斯特大学（申请截止日期5月31日）、科隆大学（申请截止日期6月至7月，根据项目不同而不同，国际管理学硕士3月31日截止）、汉堡大学（申请截止日期3月至7月，根据项目不同而不同）、维尔茨堡大学（申请截止日期7月15日，个别项目3月截止）、康斯坦茨大学（申请截止日期3月至7月，根据项目不同而不同）、杜伊斯堡-埃森大学（申请截止日期6月15日或7月15日，根据项目不同而不同）、法兰克福大学（申请截止日期6月至8月，根据项目不同而不同）、魏玛包豪斯大学（申请截止日期5月至7月，根据项目不同而不同）、霍恩海姆大学（申请截止日期3月15日）等</p>
<p>德国留学需要做APS审核，该审核周期需要3-6个月，所以申请德国大学，需要提前3-6个月时间用来做APS审核</p>
<h1 id="法国留学"><a href="#法国留学" class="headerlink" title="法国留学"></a>法国留学</h1><p>申请截止日期都比较晚，一般在每年3月份之后。法国知名高等商学院的申请一般都分为4轮，从9月份开通申请，一直到延续到4月份。但申请埃菲尔奖学金的学生，必须赶在第一轮截止前提交申请。</p>
<p>巴黎六大、巴黎十一大、巴黎一大、巴黎七大、马赛大学、巴黎高等师范学院、巴黎政治学院、里昂高等师范学院、巴黎高科工程师集团Paris Tech、N+i工程师联盟、巴黎综合理工学院、巴黎中央理工学院、巴黎HEC商学院、ESSEC商学院、EDHEC商学院、EM里昂商学院、ESCP商学院</p>
<h1 id="比利时留学"><a href="#比利时留学" class="headerlink" title="比利时留学"></a>比利时留学</h1><p>荷兰语区大学申请截止日期大部分为3月1日，法语区大学申请截止日期基本上都是4月30日</p>
<p>荷兰语鲁汶大学（申请截止日期3月1日）、法语鲁汶大学（申请截止日期4月30日）、根特大学（申请截止日期3月1日）、法语布鲁塞尔自由大学（申请截止日期4月30日）、荷兰语布鲁塞尔自由大学（申请截止日期4月1日）、安特卫普大学（申请截止日期3月1日，个别项目例外）、VLERICK鲁汶根特管理学院（申请截止日期4月30日）等</p>
<h1 id="北欧五国（丹麦、瑞典、芬兰、挪威、冰岛）"><a href="#北欧五国（丹麦、瑞典、芬兰、挪威、冰岛）" class="headerlink" title="北欧五国（丹麦、瑞典、芬兰、挪威、冰岛）"></a>北欧五国（丹麦、瑞典、芬兰、挪威、冰岛）</h1><p>瑞典卡罗林斯卡学院、芬兰赫尔辛基大学、瑞典乌普萨拉大学、丹麦哥本哈根大学、瑞典隆德大学、挪威奥斯陆大学、瑞典斯德哥尔摩大学、丹麦奥胡斯大学、瑞典哥德堡大学、挪威卑尔根大学、冰岛大学、瑞典KTH皇家理工大学、丹麦技术大学排名、瑞典查尔姆斯理工大学、挪威科技大学、芬兰阿尔托大学、斯德哥尔摩经济学院、哥本哈根商学院、挪威BI管理学院、挪威经经济管理学院、芬兰阿尔托大学等</p>
<h1 id="英国留学与爱尔兰"><a href="#英国留学与爱尔兰" class="headerlink" title="英国留学与爱尔兰"></a>英国留学与爱尔兰</h1><h1 id="意大利留学"><a href="#意大利留学" class="headerlink" title="意大利留学"></a>意大利留学</h1><p>截止申请最早的是米兰理工大学，第一轮申请在11月截止，其余大学的申请截止日期都比较晚，在3月至6月之间</p>
<p>博洛尼亚大学、罗马大学、博科尼商业大学、米兰理工大学、米兰大学、都灵大学、都灵理工大学、帕多瓦大学、比萨大学等</p>
<h1 id="西班牙留学"><a href="#西班牙留学" class="headerlink" title="西班牙留学"></a>西班牙留学</h1><p>申请截止日期普遍较晚，大部分在3月以后，有的大学甚至在7、8月份还可以申请当年秋季入学项目</p>
<p>巴塞罗那大学、庞培法布拉大学、巴塞罗那自治大学、马德里大学、马德里自治大学、加泰罗尼亚理工大学、马德里理工大学等</p>
<h1 id="奥地利留学"><a href="#奥地利留学" class="headerlink" title="奥地利留学"></a>奥地利留学</h1><p>当年秋季入学项目的申请截止日期都在4月30日及以后，主要是因为奥地利大学开学时间比较晚，在10月份才开学</p>
<p>维也纳大学、因斯布鲁克大学、维也纳经济大学、维也纳医科大学、萨尔茨堡大学</p>
<h1 id="卢森堡留学"><a href="#卢森堡留学" class="headerlink" title="卢森堡留学"></a>卢森堡留学</h1><h1 id="波兰-捷克与匈牙利"><a href="#波兰-捷克与匈牙利" class="headerlink" title="波兰 捷克与匈牙利"></a>波兰 捷克与匈牙利</h1><p>中欧的捷克、波兰和匈牙利，都是欧盟申根国家。这三个国家都有众多历史悠久而知名的大学，包括捷克的布拉格查理大学、布拉格经济大学等，波兰的华沙大学、雅盖隆大学、华沙工业大学、华沙经济学院等，匈牙利的罗兰大学</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>院校申请</tag>
      </tags>
  </entry>
  <entry>
    <title>王阳明心学</title>
    <url>/2021/06/19/Life/%E7%8E%8B%E9%98%B3%E6%98%8E%E5%BF%83%E5%AD%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="梁启超语录"><a href="#梁启超语录" class="headerlink" title="梁启超语录"></a>梁启超语录</h1><ol>
<li><p>大师通常能把自己的阅历甘苦用于指示我们，我们跟着他的路走，自然能事半功倍</p>
</li>
<li><p>口号的几个要素：（1）语句简单；（2）意义明确；（3）内容丰富；（4）刺激性强；（5）法门可实行，不管聪明才智多少，都能有个下手处</p>
</li>
<li><p>口号两个小计要素：（1）不要带宗教迷信；（2）不要带玄学性</p>
<span id="more"></span></li>
<li><p>格物–致知–诚意–正心–修身–齐家–治国–平天下</p>
</li>
<li><p>知行合一：（1）未有知者而不行者，知而不行只是未知；（2）知是行的主意，行是知的功夫。知识行之始，行是知之成；（3）知行原是两个字说一个功夫，知之真切笃行处便是行，行之明觉精察处便是知</p>
</li>
<li><p>“知识行之始”：只要决心实行，则知识虽缺少些也不足为病，因为实行起来，便逼着你不能不设法求知识，知识便跟着来了；“行是知之成”：除了实行外，再没有第二条路得到知识。只有实地经验，行一步，得一点，再行一步，再得一点</p>
</li>
<li><p>只有打定主意诚诚恳恳去做这件事，自然着手之前逼着做预备知识功夫。这首之后，一步一步地磨练出知识来。并不需要把万事万物格个遍再去实行</p>
</li>
<li><p>“心外无物”：凡不在我们意识范围内的物（王阳明所谓意念不涉着者），最多只能承认他是物理学、数学或者几何学上的存在，而不能承认它有伦理学或认识论上的存在。再进一步看，物理学、数学、几何学的本身，也不能离开人类的意识而单独存在</p>
</li>
<li><p> 王阳明认为，人类一切罪恶，皆由“间形骸分尔我”的私见衍生出来的，而这种私见，实非我们心体所本有</p>
</li>
<li><p>致良知功夫，最要紧的是把这些私欲化除净尽</p>
</li>
<li><p>良知唯一的仇敌是功利主义，不把这个病根拔了，一切学问无从做起</p>
</li>
<li><p>善恶唯一标准：凡做一事，发一念，其动机是否出自自私自利（然这一点除了自己的良知之外，没有别人或者别的方法能知得真切确实的）</p>
</li>
<li><p>欲廓清自私自利念头，除却良知没有第二法门</p>
</li>
<li><p>王阳明固为确信心外无物物外无心，灼然见得我身外人们及天地万物们都是“真我”或者“大我”的构成要素，因此得着“物我同体”的结论</p>
</li>
<li><p>一切行为，都是目的，不是手段</p>
</li>
<li><p>圣人是以质计，不以量计，固而人人可为圣贤</p>
</li>
</ol>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>哲学</tag>
      </tags>
  </entry>
  <entry>
    <title>Measuring Fine-Grained Domain Relevance of Terms ACL2021</title>
    <url>/2021/07/09/Paper%20Reading/Term%20Weight/Measuring-Fine-Grained-Domain-Relevance-of-Terms-ACL2021/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="What’s-the-Problem"><a href="#What’s-the-Problem" class="headerlink" title="What’s the Problem?"></a>What’s the Problem?</h1><p>This paper is targeted to measure the domain relevance of terms. </p>
<span id="more"></span>

<h1 id="Why-they-do-this-Work"><a href="#Why-they-do-this-Work" class="headerlink" title="Why they do this Work?"></a>Why they do this Work?</h1><p>The author mentioned <font color=red>3 challenges</font>: </p>
<ol>
<li>How to measure the domain relevance of a long-tail terms (not frequently used, and lake of descirptive information).</li>
<li>How to measure domain relevance of a term without using domain-specific corpus.</li>
<li>How to reduce human efforts.</li>
</ol>
<h1 id="How-they-deal-with-the-problem-amp-solve-the-challenges"><a href="#How-they-deal-with-the-problem-amp-solve-the-challenges" class="headerlink" title="How they deal with the problem &amp; solve the challenges?"></a>How they deal with the problem &amp; solve the challenges?</h1><p>The overview of the framework is described in following picture. They assume that if a term is highly relevant to a target domain, this term should also be highly relevant to some other terms with high domain relevance.<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210709111925.png"></p>
<h2 id="1-Core-Anchored-Semantic-Graph-for-challenge-1"><a href="#1-Core-Anchored-Semantic-Graph-for-challenge-1" class="headerlink" title="1. Core-Anchored Semantic Graph (for challenge 1)"></a>1. Core-Anchored Semantic Graph (for challenge <strong>1</strong>)</h2><p>(1) First, the seed terms are provided by a term/phrase extraction method. </p>
<p>(2) the seed terms can be divided into <em>core terms</em> (which is descibed by a Wikipedia article page) and <em>fringe terms</em> (which can not retrieve any description page from Wikipedia)</p>
<p>(3) For each query term (a seed term), search it form <a href="https://en.wikipedia.org/w/index.php?search">Wikipedia search engine</a> by extract match. Link those <em>core terms</em> to the query term by checking the top 2k (k=5) returned Wiki pages (build up links with top k <em>core terms</em>). If the number of returned pages is no more k, than use relevance search to get return pages and build up links.</p>
<p>(4) By searching each seed term from Wikipage search engine and building up links between them, we construct a term graph.</p>
<p>The idea is using the term relevance between <em>core terms</em> and query term, thereofre, helping identifying the domain relevance of a query term. </p>
<h2 id="2-Hierarchical-Core-Fringe-Learning-for-challenge-2"><a href="#2-Hierarchical-Core-Fringe-Learning-for-challenge-2" class="headerlink" title="2. Hierarchical Core-Fringe Learning (for challenge 2)"></a>2. Hierarchical Core-Fringe Learning (for challenge <strong>2</strong>)</h2><p>(1) For meansuring the doamin relevance with a broad domain, they proposed a Core-Fringe Domain Relevance Learniing (CFL) framework. </p>
<p>The graph convolution operation (GCNConv) at $l$th layer is formulated as:</p>
<p>$h_i^{(l+1)}=\phi(\sum_{j\in \mathcal{N}<em>I\cup {i}}\frac{1}{c</em>{ij}}W_c^{(l)}b_c^{(l)}+b_c^{(l)})$</p>
<p>The loss function is defined as:</p>
<p>$\mathcal{L}=-\sum_{i\in \mathcal{V}_{core}}(y_ilog(z_i)+(1-y_i)log(1-z_i))$</p>
<p>where $\mathcal{V}_{core}$ is the nodes of <em>core terms</em>, $y_i$ is the label of node $i$ regarding the target domain (can be obtained in next step 3). The domain relevance is obtained from $z$.</p>
<p>(2) For a narrow domain, they proposed a Hierarchical CFL (HiCFL) framework.</p>
<ul>
<li><p>Get the last GCNConv layer $h_i^{(l_c)}$, where $l_c<br>$ is the total layer of GCN. </p>
</li>
<li><p>Obtain the hierarchical global hidden state $a_p$ by </p>
<p>$a_p^{(l+1)}=\phi(W_p^{(l)}[a_p^{(i)};h^{(l_c)}]+b_p^{(l)})$, and $a_p^{(0)}=\phi(W_p^{(0)}h^{l_c}+b_{p}^{(0)})$, where $l_p$ is the total number of hierarchical level.</p>
<p>The global information is produced by<br>$z_p = \sigma(W_p^{(l_p)}a_p^{(l_p)}+b_p^{(l)})$</p>
</li>
<li><p>Obtain local hidden state $a_q^{(l)}$ for each level of hierarchy</p>
<p>$a_q^{(l)}=\phi(W_t^{(l)}a_p^{(l)}+b_t^{(l)})$, note this formula has related to global hidden state.</p>
<p>The local information of $l$th level of hierarchy is $z_q^{(l)}=\sigma(W_q^{(l)}a_q^{(l)}+b_q^{(l)})$</p>
</li>
<li><p>The loss function is defined as<br>$\mathcal{L}<em>h=\epsilon(z_p,y^{(l_p)})+\sum</em>{l=1}^{l_p}\epsilon(z_q^{(l)}, y^{(l)})$, where the $\epsilon(z,y) = -\sum_{i\in \mathcal{V_{core}}}(y_ilog(z_i)+(1-y_i)log(1-z_i))$</p>
</li>
<li><p>The final domain relevance can be calculated by<br>$s = \alpha \cdot z_p+(1-\alpha\cdot(z_q^{(1)}\circ z_q^{(2)},..,z_q^{(l_p)})$</p>
</li>
</ul>
<h2 id="3-Automatic-Annotation-and-Hierarchical-Positive-Unlabeled-Leraning-for-challenge-3"><a href="#3-Automatic-Annotation-and-Hierarchical-Positive-Unlabeled-Leraning-for-challenge-3" class="headerlink" title="3. Automatic Annotation and Hierarchical Positive-Unlabeled Leraning (for challenge 3)"></a>3. Automatic Annotation and Hierarchical Positive-Unlabeled Leraning (for challenge <strong>3</strong>)</h2><p>(1) If the target domain is general enough to get its sub fields (sub-categories) form wikipedia or other existing domain taxonomies. Then get those sub-categories as the <em>gold subcategories</em> $GSC$ of this domain. Then label those <em>core terms</em> whose Wiki page has a category in $GSC$ with positive label. Otherwise, label it as non-domain terms.</p>
<p>(2) If the target domain is a low-level category in a domain taxonomy. Then let user offer some terms of this domain and label them as positive. And label other terms which not belong to the parent of this domain to negatives. For example, For a hierarchy CS $\rightarrow$ AI $\rightarrow$ ML $\rightarrow$ DL. The user can offer some terms to be positives. Then other terms in CS but non-ML terms to be automatically labeled as negatives. </p>
<h1 id="Why-this-method-works-better-amp-Any-evidence"><a href="#Why-this-method-works-better-amp-Any-evidence" class="headerlink" title="Why this method works better &amp; Any evidence?"></a>Why this method works better &amp; Any evidence?</h1><h1 id="Any-shortcoming"><a href="#Any-shortcoming" class="headerlink" title="Any shortcoming?"></a>Any shortcoming?</h1><ol>
<li>The representation for each node may not elaborate enough, we may provide some embeddings learning form the Wiki page so that representing nodes with more semantic information.</li>
</ol>
<h1 id="Further-Readings"><a href="#Further-Readings" class="headerlink" title="Further Readings"></a>Further Readings</h1><p>About term extraction</p>
<ol>
<li>Bag of what? simple noun phrase extraction for text analysis</li>
<li>Automated phrase mining from massive text corpora </li>
</ol>
<h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><ol>
<li><a href="https://arxiv.org/pdf/2105.13255.pdf">https://arxiv.org/pdf/2105.13255.pdf</a></li>
<li><a href="https://github.com/jeffhj/domain-relevance">https://github.com/jeffhj/domain-relevance</a></li>
</ol>
]]></content>
      <categories>
        <category>Paper Reading</category>
        <category>Term Weight</category>
      </categories>
  </entry>
  <entry>
    <title>pybind使用</title>
    <url>/2021/05/16/Programming/python/pybind%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Pybind11-主要的思想"><a href="#Pybind11-主要的思想" class="headerlink" title="Pybind11 主要的思想"></a>Pybind11 主要的思想</h1><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210516104650.png" alt="image-20210426165542076"></p>
<span id="more"></span>

<h1 id="Pybind11-环境配置"><a href="#Pybind11-环境配置" class="headerlink" title="Pybind11 环境配置"></a>Pybind11 环境配置</h1><ol>
<li><p>下载pybind11  <a href="https://github.com/pybind/pybind11">https://github.com/pybind/pybind11</a> 解压到 C:\pybind11-master，解压后就可以直接使用(head-only)</p>
</li>
<li><p>Windows 软件 Visual Studio 2017 (VS2017), Python3.6</p>
</li>
<li><p>Python中安装：pip install pybind11</p>
</li>
<li><p>VS2017 配置:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）设置编译输出类型 </span><br><span class="line">      配置属性--常规--常规--目标文件扩展名：.pyd</span><br><span class="line">      配置属性--常规--项目默认值-配置类型：动态库.dll</span><br><span class="line">  </span><br><span class="line"> <span class="number">2</span>）添加include包含： </span><br><span class="line">      配置属性--VC++目录--常规--包含目录：</span><br><span class="line">      C:\pybind11-master\include  <span class="comment">// 这个是pybind的include目录</span></span><br><span class="line">      C:\ProgramData\Anaconda3\envs\python36\indclude  <span class="comment">//这个是python环境的include目录，你也可以用anaconda自带的环境</span></span><br><span class="line"> </span><br><span class="line"> <span class="number">3</span>）链接器配置：</span><br><span class="line">      链接器-常规-附加库目录：C:\ProgramData\envs\python36\indclude\libs  <span class="comment">//这个是python环境的libs目录，你也可以用anaconda自带的环境</span></span><br><span class="line">      链接器-输入-附加依赖项：python3.lib</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="Pybind11-Python-调用-C"><a href="#Pybind11-Python-调用-C" class="headerlink" title="Pybind11 Python 调用 C++"></a>Pybind11 Python 调用 C++</h1><ol>
<li>C++ code</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pybind11/pybind11.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;example1.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> py = pybind11;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;<span class="keyword">return</span> i + j;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">PYBIND11_MODULE</span>(example, m) &#123;	<span class="comment">//&quot;example&quot; is python module name</span></span><br><span class="line">	m.<span class="built_in">doc</span>() = <span class="string">&quot;pybind11 example plugin&quot;</span>; <span class="comment">// optional module docstring</span></span><br><span class="line">	m.<span class="built_in">def</span>(<span class="string">&quot;add&quot;</span>, &amp;add, <span class="string">&quot;A function which adds two numbers&quot;</span>); <span class="comment">// &quot;add&quot; is method name</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>



<ol start="2">
<li>VS2017 compiling…</li>
</ol>
<p>produced a XXX.pyd file in directory “dir” (XXX is the C++ project name)</p>
<p>change XXX to the module name so that can be used in Python</p>
<ol start="3">
<li>Python use module provided by C++</li>
</ol>
<p>3.1 using with sys.path</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.path.append(<span class="string">&quot;dir&quot;</span>)	<span class="comment"># dir includes the XXX.pyd file</span></span><br><span class="line"><span class="keyword">import</span> example 					<span class="comment"># defined module name</span></span><br><span class="line">example.add()						<span class="comment"># use the method from the module</span></span><br></pre></td></tr></table></figure>

<p>3.2 use with setuptools</p>
<p>write a setup.py file in the dir of the .cpp file</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">from</span> <span class="string">setuptools import setup, Extension</span></span><br><span class="line"></span><br><span class="line"><span class="attr">functions_module</span> = <span class="string">Extension(</span></span><br><span class="line">    <span class="attr">name</span> =<span class="string">&#x27;example&#x27;,</span></span><br><span class="line">    <span class="attr">sources</span> = <span class="string">[&#x27;first_pybind.cpp&#x27;],</span></span><br><span class="line">    <span class="attr">include_dirs</span> = <span class="string">[&#x27;F:\\Anaconda\\Anaconda3_201910\\envs\\env_pybind11\\lib\\site-packages\\pybind11\\include&#x27;,</span></span><br><span class="line">                   <span class="meta">&#x27;F</span>:<span class="string">\\Anaconda\\Anaconda3_201910\\envs\\env_pybind11\\include&#x27;]</span></span><br><span class="line"><span class="comment"># include_dirs 中的路径 更改为自己虚拟环境下相应 pybind11的路径 和 python的include路径</span></span><br><span class="line"><span class="attr">)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">setup(ext_modules</span> = <span class="string">[functions_module])</span></span><br></pre></td></tr></table></figure>

<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">cd dir of (.cpp <span class="keyword">file</span> <span class="keyword">and</span> setup.py <span class="keyword">file</span>)</span><br><span class="line">python setup.py build_ext --inplace</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> example</span><br><span class="line"><span class="built_in">print</span>(example.add(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure>


<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>Programming</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>pybind</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Bert笔记</title>
    <url>/2021/06/10/NLP/Bert%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>使用了Mask Language Model(MLM) 和 Next Sentence Prediction(NSP) 的多任务训练目标；</p>
<span id="more"></span>

<h1 id="输入向量"><a href="#输入向量" class="headerlink" title="输入向量"></a>输入向量</h1><p>输入为每个 Token 位置上的 Token Embedding，Segment Embedding 和 Position Embedding 的和</p>
<p>Token Embedding: 就是单词的词向量表达（比如 Word2vec）。第一个单词是 <code>CLS</code> 标志，用于做句子分类任务；<code>SEP</code> 标志用于区分两个句子前后顺序（当输入有两个句子时）</p>
<p>Segment Embedding：用于区分两个句子，用于帮助做句子对的任务（如果只有一个句子则只需要 $E_A$）</p>
<p>Position Embedding：用于编码单词的位置信息，跟 Transformer 一样<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210610161040.png"></p>
<h1 id="预训练任务"><a href="#预训练任务" class="headerlink" title="预训练任务"></a>预训练任务</h1><h2 id="预训练-Next-Sentence-Prediction（NSP）-任务"><a href="#预训练-Next-Sentence-Prediction（NSP）-任务" class="headerlink" title="预训练 Next Sentence Prediction（NSP） 任务"></a>预训练 Next Sentence Prediction（NSP） 任务</h2><p>这是一个二分类任务，用于判断 Sentence B 是不是 Sentence A 的下一句（IsNext 或者 NotNext） </p>
<p>对于语料库中的句子，50% 的句对（Sentence Pair）是前后句关系，50% 的 B 句是随机选择的</p>
<p>A 句加 B 句的总长度不超过 512</p>
<h2 id="Mask-语言模型"><a href="#Mask-语言模型" class="headerlink" title="Mask 语言模型"></a>Mask 语言模型</h2><p>根据上面构造的句对数据，再对句对中的 Token Embedding 进行随机掩盖，要求模型去预测被掩盖的单词。作者对数据集中的 15% 进行掩盖操作。于这 15% 的单词，分三个部分用不同方法来 Mask</p>
<figure class="highlight xl"><table><tr><td class="code"><pre><span class="line"><span class="number">80</span>%：<span class="function"><span class="title">my</span> dog <span class="keyword">is</span> hairy -&gt;</span> my dog <span class="keyword">is</span> [mask]</span><br><span class="line"><span class="number">10</span>%：<span class="function"><span class="title">my</span> dog <span class="keyword">is</span> hairy -&gt;</span> my dog <span class="keyword">is</span> apple</span><br><span class="line"><span class="number">10</span>%：<span class="function"><span class="title">my</span> dog <span class="keyword">is</span> hairy -&gt;</span> my dog <span class="keyword">is</span> hairy</span><br></pre></td></tr></table></figure>


<h1 id="特殊任务（Fine-Tuning）"><a href="#特殊任务（Fine-Tuning）" class="headerlink" title="特殊任务（Fine Tuning）"></a>特殊任务（Fine Tuning）</h1><p>预训练的 Bert 已经学习到了较通用的知识，但是为了进一步提升在特殊任务上的表现，被训练过的 Bert 需要用特定任务的数据再进行一次训练，这次训练就叫做 FineTuning</p>
<p>(a) 多句子分类：CLS+句子A+SEP+句子B。利用CLS分类</p>
<p>(b) 单句子分类：CLS+句子。利用CLS进行分类</p>
<p>(c) SQuAD：CLS+问题+SEP+文章。利用所有文章单词的输出做计算答案的 start 和 end 位置，用一个向量 $S$（设置一个模型内部参数）与句子 B 中每个位置的 Bert 最后一层输出 $T_i$ 做內积，那么位置 $j$ 为答案开始的概率为  $P_{start}(j)=\frac{e^{S\cdot T_j}}{\sum_i S\cdot T_i}$；对于结束位置也可以设置一个向量 $E$ 来做类似训练</p>
<p>(d) NER：CLS+句子。利用句子单词做标记，然后用输出的词汇的 Tag 来进行 Fine-Tuning</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210610164248.png"></p>
<p>两种不同类型的任务所需要的向量，详情见特定任务的BERT</p>
<p>sentence-level：一般只拿CLS位置的向量，过线性层再softmax即可得到分类结果<br>token-level：SQuAD或NER，取对应位置的向量，过线性层再softmax得到相应的结果</p>
<h1 id="如何构建词向量？"><a href="#如何构建词向量？" class="headerlink" title="如何构建词向量？"></a>如何构建词向量？</h1><p>对于一个单词而言，通过整合它在 Bert 不同层输出的向量，一共提供了 6 中构建词向量方法。通过对 NER 任务的实验，发现效果最好的是拼接最后四层的输出向量<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210610165712.png"></p>
<h1 id="跟其他模型对比"><a href="#跟其他模型对比" class="headerlink" title="跟其他模型对比"></a>跟其他模型对比</h1><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210610164248.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://arxiv.org/pdf/1810.04805.pdf">Bert:: Pre-training of Deep Bidirectional Transformers for Language Understanding</a></li>
<li><a href="https://plmsmile.github.io/2018/12/15/52-bert/">https://plmsmile.github.io/2018/12/15/52-bert/</a></li>
<li><a href="https://wmathor.com/index.php/archives/1456/">https://wmathor.com/index.php/archives/1456/</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/48612853">https://zhuanlan.zhihu.com/p/48612853</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/46652512">https://zhuanlan.zhihu.com/p/46652512</a></li>
<li><a href="http://fancyerii.github.io/2019/03/09/bert-theory/">http://fancyerii.github.io/2019/03/09/bert-theory/</a></li>
</ol>
]]></content>
      <categories>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>Bert</tag>
      </tags>
  </entry>
  <entry>
    <title>Concept Formation</title>
    <url>/2021/06/18/NLP/Concept-Formation/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><span id="more"></span>


<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://link.springer.com/chapter/10.1007/978-3-642-03079-6_2">Concept Formation in Linguistic Ontologies</a></li>
<li><a href="https://cw.fel.cvut.cz/old/_media/courses/osw/learning-ontologies-osw.pdf">Ontology Learning</a></li>
<li><a href="">Handbook on ontologies</a></li>
<li><a href="https://pub.uni-bielefeld.de/download/2497696/2525557/pci_OL-Book-Intro.pdf">Ontology learning from text: An overview</a></li>
<li><a href="https://academic.oup.com/database/article/doi/10.1093/database/bay101/5116160">A survey of ontology learning techniques and applications, 2018</a></li>
<li><a href="https://www.researchgate.net/publication/220271682_Concept_Formation_in_Linguistic_Ontologies">Concept Formation in Linguistic Ontologies</a></li>
</ol>
]]></content>
      <categories>
        <category>NLP</category>
      </categories>
  </entry>
  <entry>
    <title>NLP Datasets</title>
    <url>/2021/07/05/NLP/NLP-Datasets/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>No matter which problem you are dealing with, it is always important to find suitable datasets. Here are some accecible public datasets.</p>
<ol>
<li><a href="https://datasetsearch.research.google.com/">Google Datasets</a> contains 2.5 million datasets, which can be searched by keywords. It collects datasets from vast domains. </li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210705161329.png"></p>
<ol start="2">
<li><a href="https://huggingface.co/datasets">Huggingface Datsets</a> (<a href="https://github.com/huggingface/datasets">spare github link</a>) includes many datasets for NLP tasks.<span id="more"></span></li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210705161503.png"></p>
<ol start="3">
<li><a href="https://www.kaggle.com/datasets">Kaggle Datasets</a> is a well-known machine learning dataset collection.</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210705161731.png"></p>
<ol start="4">
<li><a href="https://www.paperswithcode.com/datasets">Paper with Code datasets</a> contains 4075 machine learning datasets. It contacts papers with their code and dataset.</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210705161924.png"></p>
<ol start="5">
<li><a href="https://www.reddit.com/r/datasets/">Reddit Datasets</a> is also a famous dataset which supports discussion over each dataset.</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210705162956.png"></p>
<ol start="6">
<li><a href="https://www.cluebenchmarks.com/dataSet_search.html">CLUE Datasets</a> is a big Chinese NLP dataset.</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210705162920.png"></p>
<ol start="7">
<li>Some other datasets: <ul>
<li><a href="https://www.datasetlist.com/">https://www.datasetlist.com/</a></li>
<li><a href="https://github.com/awesomedata/awesome-public-datasets">https://github.com/awesomedata/awesome-public-datasets</a></li>
<li><a href="https://tinyletter.com/data-is-plural">https://tinyletter.com/data-is-plural</a></li>
<li><a href="https://jupyter-tutorial.readthedocs.io/en/latest/data/index.html">https://jupyter-tutorial.readthedocs.io/en/latest/data/index.html</a></li>
<li><a href="https://www.openml.org/search?type=data">https://www.openml.org/search?type=data</a></li>
<li><a href="https://github.com/InsaneLife/ChineseNLPCorpus">https://github.com/InsaneLife/ChineseNLPCorpus</a></li>
</ul>
</li>
</ol>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>NLP</tag>
      </tags>
  </entry>
  <entry>
    <title>Transformer笔记</title>
    <url>/2021/06/09/NLP/Transformer%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Transformer 主包括两个部分，Encoder 和 Decoder，整体流程如下</p>
<span id="more"></span>

<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210609174026.png"></p>
<h1 id="Encoder"><a href="#Encoder" class="headerlink" title="Encoder"></a>Encoder</h1><p>Encoder 包含了两个子层，一个 multi-headed attention 子层，一个全连接子层。此外这两个子模块都是用了残差连接，然后从一个归一化层输出</p>
<p>$Encoding(x,mask)=FeedForward(MultiHeadAttention(x))$</p>
<h2 id="多头注意力-Sublayer"><a href="#多头注意力-Sublayer" class="headerlink" title="多头注意力 Sublayer"></a>多头注意力 Sublayer</h2><p>$Z=MultiHead(X)=Concat(head_0,…,head_h)W^O$</p>
<p>$head_i=Z_i=Attention(Q,K,V)=softmax(\frac{QK^T}{\sqrt{d_k}})V; Q=XW^Q, K=XW^K, V=XW^V$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210609122322.png"></p>
<h2 id="全连接层-Sublayer"><a href="#全连接层-Sublayer" class="headerlink" title="全连接层 Sublayer"></a>全连接层 Sublayer</h2><p>从全连接层输出的向量维度跟输入的维度一致，<br>$FFN(x)=max(0, xW_1+b_1)W_2+b_2$</p>
<h2 id="Add-amp-Norm"><a href="#Add-amp-Norm" class="headerlink" title="Add&amp;Norm"></a>Add&amp;Norm</h2><p>$Z_n=LayerNorm(Z_{n-1}, SubLayer(Z_{n-1}))$</p>
<h1 id="Decoder"><a href="#Decoder" class="headerlink" title="Decoder"></a>Decoder</h1><p>根据 Transformer 最后一层 Encoder 出来的向量，也就是 $LayerNorm(Z_{n-1}+Z_{n})$，$n$ 为 Encoder 的数量计算得到的 attention 向量 $K$ 和 $V$。这两个矩阵将作为 Decoder 的输入来帮助 Decoder 关注输入序列中的重要位置信息</p>
<p>$Decoding(x,memory,mask1,mask2)=FeedForward(MultiHeadAttention(MultiHeadAttention(x,mask1),memory,mask2))$</p>
<h2 id="第一个-multi-headed-self-attention-层"><a href="#第一个-multi-headed-self-attention-层" class="headerlink" title="第一个 multi-headed self attention 层"></a>第一个 multi-headed self attention 层</h2><p>用于训练 Decoder 的输出序列按照时间步来进行，每个时间步输入当前位置的前面所有的序列信息，这可以通过在 self-attnetion 子模块中的 softmax 层前面用 $-inf$ mask 掉当前位置之后的序列信息。这样 self attention 层输出的就是被 mask 后的输出序列的 $Z$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210609160537.png"><br>对于机器对话任务而言，Decoder 的工作模式如下图所示</p>
<h2 id="第二个-multi-headed-encoder-decoder-层"><a href="#第二个-multi-headed-encoder-decoder-层" class="headerlink" title="第二个 multi-headed encoder-decoder 层"></a>第二个 multi-headed encoder-decoder 层</h2><p>对于这个 encoder-decoder 子模块而言，它使用了从 Encoder 的输出向量复制两份作为 $Q$ 和 $K$，使用了 Decoder self-attention 子模块的 $V$ 作为输入，这个子模块为输出序列匹配了输入序列。读者肯定会有疑问，输入序列的长度（也就是 $Q$ 和 $K$ 矩阵的高度）和输出序列的长度（也就是 $V$ 矩阵的高度）不一样，怎么能进行计算呢？答案是 Transformer 给输入和输入序列定长为 512，多余的没有内容的地方用一些空字符替代。</p>
<h2 id="线性分类器和最后一个-softmax"><a href="#线性分类器和最后一个-softmax" class="headerlink" title="线性分类器和最后一个 softmax"></a>线性分类器和最后一个 softmax</h2><p>最后一层分类器根据前面的输出序列信息和输入序列信息来预测对于当前位置的词汇，因此最后 softmax 的输出向量的维度为所有输出序列包含的词汇表的大小<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210609175256.png"></p>
<h2 id="Loss-Function"><a href="#Loss-Function" class="headerlink" title="Loss Function"></a>Loss Function</h2><p>对于某个翻译的实例 (“Je suis etudiant, merci” –&gt; “I am a student, thanks”)，此时预测的词是 “I”，那么我们需要 softmax 层输出的是 $[0,0,1,0,0,0]$，通过softmax 层的输出向量和这个期望的向量进行交叉熵或者 KL 距离计算，来作为 Loss</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210609180115.png"></p>
<h1 id="Position-Encoding"><a href="#Position-Encoding" class="headerlink" title="Position Encoding"></a>Position Encoding</h1><p>为了向 Transformer 引入词汇的位置信息，通过下面的方法对位置进行编码来实现，最终得到下图的矩阵，形状为 $len_{seq}\times dim_{embed}$</p>
<p>对于句子中第 $pos$ 个词汇的位置向量的偶数位，$PE(pos,2i)=sin(\frac{pos}{10000^{2i/dim_{embed}}})$</p>
<p>对于句子中第 $pos$ 个词汇的位置向量的奇数位，$PE(pos,2i+1)=cos(\frac{pos}{10000^{2i/dim_{embed}}})$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210609123150.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://arxiv.org/abs/1706.03762">Attention is All You Need</a></li>
<li><a href="http://nlp.seas.harvard.edu/2018/04/03/attention.html">Stanford implement of Transformer</a></li>
<li><a href="https://jalammar.github.io/illustrated-transformer/">https://jalammar.github.io/illustrated-transformer/</a></li>
<li><a href="https://towardsdatascience.com/illustrated-guide-to-transformers-step-by-step-explanation-f74876522bc0">https://towardsdatascience.com/illustrated-guide-to-transformers-step-by-step-explanation-f74876522bc0</a></li>
<li><a href="https://wandb.ai/authors/One-Shot-3D-Photography/reports/-Transformer---Vmlldzo0MDIwMjc">https://wandb.ai/authors/One-Shot-3D-Photography/reports/-Transformer---Vmlldzo0MDIwMjc</a></li>
</ol>
]]></content>
      <categories>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>Transformer</tag>
      </tags>
  </entry>
  <entry>
    <title>word2vec详解</title>
    <url>/2021/05/21/NLP/word2vec%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Word2vec的训练目标"><a href="#Word2vec的训练目标" class="headerlink" title="Word2vec的训练目标"></a>Word2vec的训练目标</h1><p>Word2vec都被认为是用于训练词向量表达的工具。但是词向量其实是一个完成了Word2vec网络模型的一个副产品。它的训练目标是训练一个三层神经网络，使得上下文相似的词汇的相似度变高。达到这个目标后，发现输入层到隐藏层的参数竟然奇迹般的能用于词的向量表示，并且还有些神奇的效果，比如 ”King“-“Men”+”Women”=”Queen”、 ”日本“-”东京“+”中国”=”北京”；或者 “北京”和”烤鸭”的相似性 &gt; “北京”和”早茶”的相似性。</p>
<span id="more"></span>
<p>假设数据集为 $D$，数据集中的词汇表为 $C$。如果当前词为 $w_t$，上下文窗口大小为 5. 那么这个词的上下文 $Context(w_t)=[w_{t-2},w_{t-1},w_{t+1},w_{t+2}]$。对于下面的例子的第三个窗口而言，当前输入词为“brown”，它的上下文为 [“the”，“quick”，“fox”，“jumps”]</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210521220013.png"></p>
<p><strong>Skip-gram</strong></p>
<p>Skip-gram 通过当前词汇来预测上下文，为此它的最大化目标函数为</p>
<p>$L=\sum_{w\in D}logp(w|Context(w))$</p>
<p><strong>CBOW</strong></p>
<p>CBOW 的思想则是通过上下文来预测当前词汇，为此它的最大化目标函数为</p>
<p>$L=\sum_{w\in D}logp(Context(w)|w)$</p>
<h1 id="Word2vec模型"><a href="#Word2vec模型" class="headerlink" title="Word2vec模型"></a>Word2vec模型</h1><p>Word2vedc 模型由输入层，隐藏层和输出层组成，它的模型参数包括了输入层到隐藏层的权重矩阵 $W$（最终保留的词向量矩阵），以及隐藏层到输出层的权重矩阵 $W’$，数据集的词汇表中一共包含 $V$ 个唯一的词汇，词向量的维度设置为 $N$。</p>
<h2 id="CBOW-模型"><a href="#CBOW-模型" class="headerlink" title="CBOW 模型"></a>CBOW 模型</h2><p>对于当前词汇 $w_t$ 而言，它是词汇表中第 $v$ 个词汇。它的一个训练样本为 $(Context(w_t), w_t)$. 输入层是一个只包含 0 和 1 的向量，1 的位置代表词汇表中该位置的词汇在上下文 $Context(w_t)$ 中. 隐藏层的向量 $h=x^TW=\sum_{w’\in Context(w_t)}W_{w’}$. 其实隐藏层就是上下文词汇的词向量的和。输出层为向量 $o=hW’=x^TWW’$。对于向量 $o$ 而言，希望第 $v$ 个位置为 1，其他位置为 0.  对于这一个训练样本而言，我们希望最大化</p>
<p>$L=\sum_{w_t\in C}log(\prod_{w\in C}p(w|Context(w_t)))$</p>
<p>$g(w_t,w)=p(w|Context(w_t))={[\sigma(hW’<em>{w})]}^{L^{w_t}(w)}\times {[1-\sigma(hW’</em>{w})]}^{1-L^{w_t}(w)}$</p>
<p>其中 $\sigma(x)=\frac{1}{1+e^{-x}}$，$L^{w_t}(w)=1$ if $w_t=w$，$L^{w_t}(w)=1$ if $w_t\neq w$. </p>
<p>对 $W’_{w}$ 求导 $\frac{\partial g(w_t,w)}{\partial W’<em>w}=[L^{w_t}(w)-\sigma(hW’</em>{w})]h$</p>
<p>对 $h$ 求导 $\frac{\partial g(w_t,w)}{\partial h}=[L^{w_t}(w)-\sigma(hW’<em>{w})]W’</em>{w}$</p>
<p>更新 $W’<em>{w}=W’</em>{w}+\eta \frac{\partial g(w_t,w)}{\partial W’_w}$</p>
<p>更新 $W_{w’} (w’\in Context(w_t))$， $W_{w’}=W_{w’} + \eta \sum_{w\in C} \frac{\partial g(w_t,w)}{\partial h}$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210531085347.png"></p>
<h2 id="SKip-gram-模型"><a href="#SKip-gram-模型" class="headerlink" title="SKip-gram 模型"></a>SKip-gram 模型</h2><p>对于当前词汇 $w_t$ 而言，它是词汇表中第 $v$ 个词汇。它的一个训练样本为 $(w_t,Context(w_t))$. 输入层是一个 one-hot 向量，其中第 $v$ 个位置为 1，其他位置为 0. 隐藏层的向量 $h=x^TW=\sum_{w\in Context(w_t)}W_{w}$. 其实隐藏层就是上下文词汇的词向量的和。输出层为向量 $o=hW’=x^TWW’$。对于向量 $o$ 而言，希望所有与 $Context(w_t)$ 中词汇对应的位置为 1，其他位置为 0. 对于这一个训练样本而言，我们希望最大化</p>
<p>$L=\sum_{w_t\in C}log(\prod_{u\in Context(w_t)}\prod_{w\in C}p(w|w_t,u))$</p>
<p>$g(w_t,u,w)=p(w|w_t,u)={[\sigma(W_{u}^T W’<em>{w})]}^{L^{w_t}(w)}\times{[1-\sigma(W</em>{u}^T W’_{w})]}^{1-L^{w_t}(w)}$</p>
<p>其中 $\sigma(x)=\frac{1}{1+e^{-x}}$，$L^{w_t}(w)=1$ if $w_t=w$，$L^{w_t}(w)=1$ if $w_t\neq w$. </p>
<p>对 $W’<em>{w}$ 求导 $\frac{\partial g(w_t,w,u)}{\partial W’<em>w}=[L^{w_t}(w)-\sigma(W</em>{u}W’</em>{w})]W_{u}$</p>
<p>对 $W_u$ 求导 $\frac{\partial g(w_t,w)}{\partial W_{u}}=[L^{w_t}(w)-\sigma(W_{u}W’<em>{w})]W</em>{u}$</p>
<p>更新 $W’<em>{w}=W’</em>{w}+\eta \frac{\partial g(w_t,w)}{\partial W’_w}$</p>
<p>更新 $W_{u} (u\in Context(w_t))$， $W_{u}=W_{u} + \eta \sum_{w\in C} \frac{\partial g(w_t,w)}{\partial W_u}$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210531085440.png"></p>
<h1 id="负采样"><a href="#负采样" class="headerlink" title="负采样"></a>负采样</h1><p>从上面的模型可以看到，每个训练样本经过，都需要更新整个 $W’$，这样代价太大了，因此，负采样对于上面的 $w\in C$ 更改为 $w\in NEG(w_t)\cup w_t$. 这样每次只需要更新更少的参数. 对于 $w_t$ 而言，除了自己，其他词汇都是负样本词汇. 但是有那么多个负样本词汇，我们怎么去挑选呢，答案是根据负样本词汇的词频。为此 Word2vec 模型定义了一个概率计算公式用于挑选负样本词汇：$P(w)=\frac{tf(w)^{3/4}}{\sum_{w’}tf(w’)^{3/4}}$.公式中加了一个 $3/4$ 次方纯粹是一个经验值.</p>
<h1 id="下采样"><a href="#下采样" class="headerlink" title="下采样"></a>下采样</h1><p>回到一个图中的例子中我们构建的训练样本。里面会存在大量的（”fox”, “the”）这样的词对，并且像（”the”, XXX）这样词对也会频繁出现在训练样本中。我们知道其实 “the” 并不能为 “fox” 这样的词提供多少语义含义，此外对于（”the”, XXX）这样的词对，XXX有很高的重复率。为此，Word2vec使用下采样来对付这样的情况。简单来说对于像 ”fox” 这样有意义的词语，我们去掉它的包含 “the” 的词对；对于 “the” 这样的词汇，我们采用更少的训练样本量。</p>
<p>那么对于一个像 “the” 这样的高频词汇，我们按照怎样的方法来选择性的丢掉它的一些样本呢？Word2vec 采用了一个计算词汇被保留的概率公式 $P(w)=(\sqrt{\frac{z(w)}{0.001}}+1)\frac{0.001}{z(w)}$，其中 $z(w)=\frac{tf(w)}{corpus\ size}$。函数$f(x)=(\sqrt{\frac{x}{0.001}}+1)\frac{0.001}{x}$的图像如下图所示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210522112249.png"></p>
<p>从图中可以看出，高频词汇被保留的概率较少，低频词汇被保留的概率较高。当 $z(w)\leq 0.0026$ 时，$P(w)=1$，此时 $w$ 所有的词对样本都被保留；当  $z(w)= 0.00746$ 时，$P(w)=0.5$，此时 $w$ 的词对样本只保留一半。</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="http://mccormickml.com/2016/04/19/word2vec-tutorial-the-skip-gram-model/">http://mccormickml.com/2016/04/19/word2vec-tutorial-the-skip-gram-model/</a></li>
<li><a href="http://mccormickml.com/2017/01/11/word2vec-tutorial-part-2-negative-sampling/">http://mccormickml.com/2017/01/11/word2vec-tutorial-part-2-negative-sampling/</a></li>
</ol>
]]></content>
      <categories>
        <category>NLP</category>
      </categories>
      <tags>
        <tag>NLP</tag>
        <tag>word2vec</tag>
        <tag>词向量</tag>
      </tags>
  </entry>
  <entry>
    <title>知识图谱构建</title>
    <url>/2021/06/03/NLP/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1%E6%9E%84%E5%BB%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="知识图谱构建法"><a href="#知识图谱构建法" class="headerlink" title="知识图谱构建法"></a>知识图谱构建法</h1><ol>
<li>自顶向下</li>
</ol>
<p>先定义好本体（Ontology 或称为 Schema），再基于输入数据完成信息抽取到图谱构建的过程，适用于专业知识（领域）方面图谱的构建</p>
<span id="more"></span>
<ol start="2">
<li>自底向上</li>
</ol>
<p>从开放的 Open Linked Data 中抽取置信度高的知识，或从非结构化文本中抽取知识，完成知识图谱的构建，适合于常识性的知识，比如人名、机构名等通用知识图谱的构建，因为无法区分与领域无关的信息</p>
<h1 id="自顶向下的知识图谱构建"><a href="#自顶向下的知识图谱构建" class="headerlink" title="自顶向下的知识图谱构建"></a>自顶向下的知识图谱构建</h1><p>本体构建 –&gt; 数据源配置 –&gt; 信息抽取 –&gt; 知识融合</p>
<h1 id="本体构建"><a href="#本体构建" class="headerlink" title="本体构建"></a>本体构建</h1><p>本体是知识图谱的定义语言，就像是数据库中新建表时用的 schema 一样，定义了数据表的格式。通过梳理领域知识、术语词典、专家的人工经验等作为本体构建的基础，结合知识图谱的应用场景来完善图谱的构建，最终获得实体类别、类别之间的关系、实体包含的属性定义</p>
<h1 id="数据源配置"><a href="#数据源配置" class="headerlink" title="数据源配置"></a>数据源配置</h1><ol>
<li>非电子文档：扫描，OCR识别</li>
<li>电子文档：根据类别整合成统一格式</li>
<li>网络资源：爬虫技术</li>
<li>第三方数据：接口获取</li>
</ol>
<h1 id="信息抽取"><a href="#信息抽取" class="headerlink" title="信息抽取"></a>信息抽取</h1><p>对实体，属性和关系的抽取，用（主语，谓语，宾语）三元组表示。</p>
<h1 id="知识融合"><a href="#知识融合" class="headerlink" title="知识融合"></a>知识融合</h1><p>对上一步抽取的三元组进行融合。完成实体对齐和知识融合。实体对齐是一个技术难点，通常由基于实体属性相似度的框架、基于联合表征的深度学习框架着两种方法</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://xie.infoq.cn/article/eb0d3f2a5691bf3aabb73966f">https://xie.infoq.cn/article/eb0d3f2a5691bf3aabb73966f</a></li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>NLP</category>
      </categories>
  </entry>
  <entry>
    <title>自然语言理解任务</title>
    <url>/2021/06/10/NLP/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E7%90%86%E8%A7%A3%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>9项GLUE任务<br>General Language Understanding Evaluation 包含了很多自然语言理解的任务。</p>
<span id="more"></span>
<h1 id="MNLI"><a href="#MNLI" class="headerlink" title="MNLI"></a>MNLI</h1><p>Multi-Genre Natural Language Inference是一个众包大规模的文本蕴含任务。</p>
<p>给2个句子，判断第二个句子与第一个句子之间的关系。蕴含、矛盾、中立的</p>
<h1 id="QQP"><a href="#QQP" class="headerlink" title="QQP"></a>QQP</h1><p>Quora Question Pairs</p>
<p>给2个问题，判断是否语义相同</p>
<h1 id="QNLI"><a href="#QNLI" class="headerlink" title="QNLI"></a>QNLI</h1><p>Question Natural Language Inference 是一个二分类任务，由SQuAD数据变成。</p>
<p>给1个(问题，句子)对，判断句子是否包含正确答案</p>
<h1 id="SST-2"><a href="#SST-2" class="headerlink" title="SST-2"></a>SST-2</h1><p>Stanford Sentiment Treebank，二分类任务，从电影评论中提取。</p>
<p>给1个评论句子，判断情感</p>
<h1 id="CoLA"><a href="#CoLA" class="headerlink" title="CoLA"></a>CoLA</h1><p>The Corpus of Linguistic Acceptablity，二分类任务，判断一个英语句子是否符合语法的</p>
<p>给1个英语句子，判断是否符合语法</p>
<h1 id="STS-B"><a href="#STS-B" class="headerlink" title="STS-B"></a>STS-B</h1><p>The Semantic Textual Similarity Benchmark，多分类任务，判断两个句子的相似性，0-5。由新闻标题和其他组成</p>
<p>给2个句子，看相似性</p>
<h1 id="MRPC"><a href="#MRPC" class="headerlink" title="MRPC"></a>MRPC</h1><p>Microsoft Research Paraphrase Corpus，2分类任务，判断两个句子是否语义相等，由网上新闻组成。05年的，3600条训练数据。</p>
<p>给1个句子对，判断2个句子语义是否相同</p>
<h1 id="RTE"><a href="#RTE" class="headerlink" title="RTE"></a>RTE</h1><p>Recognizing Textual Entailment，二分类任务，类似于MNLI，但是只是蕴含或者不蕴含。训练数据更少</p>
<h1 id="WNLI"><a href="#WNLI" class="headerlink" title="WNLI"></a>WNLI</h1><p>Winograd NLI一个小数据集的NLI。据说官网评测有问题。所以评测后面的评测没有加入这个</p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1>]]></content>
      <categories>
        <category>NLP</category>
      </categories>
  </entry>
  <entry>
    <title>GNN Note</title>
    <url>/2021/06/20/Deep%20Learning/GNN-Note/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Why-need-GNN"><a href="#Why-need-GNN" class="headerlink" title="Why need GNN"></a>Why need GNN</h1><ol>
<li>utilize the structure and relationship of data (CNN cannot deal with non-Euclidean space)</li>
<li>semi-supervised learning (partial labels)</li>
</ol>
<span id="more"></span>

<h1 id="How-to-Embed-node-into-a-feature-space-using-convolution"><a href="#How-to-Embed-node-into-a-feature-space-using-convolution" class="headerlink" title="How to Embed node into a feature space using convolution?"></a>How to Embed node into a feature space using convolution?</h1><p>Suppose a graph $G={V, E}$, $V$ is a set of $N=|V|$ nodes, $E\subseteq V\times V$ is a set of edges between nodes. There are two different groups of GNN:</p>
<ol>
<li>Generalize convolution into Graph: Spatial-based Convolution</li>
<li>Back into signal processing: Spectral-based Convolution</li>
</ol>
<h1 id="1-Spatial-based-Convolution"><a href="#1-Spatial-based-Convolution" class="headerlink" title="1. Spatial-based Convolution"></a>1. Spatial-based Convolution</h1><p>Two important problem to be solved:</p>
<ol>
<li>Aggreation: how to update the next hidden sate by using neighbor’s information</li>
<li>Readout: how to represent graph using features from all nodes</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621200951.png"></p>
<h2 id="NN4G"><a href="#NN4G" class="headerlink" title="NN4G"></a>NN4G</h2><p><a href="https://ieeexplore.ieee.org/document/4773279">reference paper</a></p>
<p><strong>Aggregate</strong> by sum</p>
<ol>
<li><p>from input layer to $0_{th}$ hidden layer</p>
<p> $h_{n}^0=x_n \cdot w_n, n \in [1,2…,N]$</p>
</li>
<li><p>from hidden layer $k$ to hidden layer $k+1$</p>
<p> $h_n^{k+1}=w_n^{k,k+1}\cdot \sum_{v\in \mathcal{N}(h_n^k)}h_v^k$</p>
<p> where $\mathcal{N}(x)$ is all neighbors of $x$</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621203710.png"></p>
<p><strong>Readout</strong> </p>
<p>$y=\sum_{k=0}^K{w_k}^T(mean(h^k)), h^k=[h_0^k,…,h_N^k]$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621203834.png"></p>
<h2 id="DCNN"><a href="#DCNN" class="headerlink" title="DCNN"></a>DCNN</h2><p><a href="https://arxiv.org/abs/1511.02136">reference paper</a></p>
<p><strong>Aggregate</strong> by mean</p>
<ol>
<li><p>from input layer to $0_{th}$ hidden layer (the same as NN4G)</p>
<p> $h_{n}^0=x_n \cdot w_n, n \in [1,2…,N]$</p>
</li>
<li><p>from hidden layer $k$ to hidden layer $k+1$</p>
<p> $h_n^{k+1}=w_n^{k,k+1} Mean(h_{d(n,.)=k+1}^k)$, $d(n,.)=k+1$ is these nodes that has a distance of $k+1$ to node $n$</p>
</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621203428.png"></p>
<p><strong>Readout</strong> </p>
<p>$y_n=[h_n^0,h_n^1,…,h_n^K]^T W$</p>
<p>the feature of a node $v_1$ is<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621204309.png"></p>
<h2 id="DGC"><a href="#DGC" class="headerlink" title="DGC"></a>DGC</h2><p><a href="https://arxiv.org/pdf/1707.01926.pdf">reference paper ICLR 2018</a></p>
<p><strong>Aggregate</strong> by mean</p>
<p>similar to DCNN</p>
<p><strong>Readout</strong> </p>
<p>the feature of each node is directly sum over multiple hideen sates<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621204924.png"></p>
<h2 id="MoNET"><a href="#MoNET" class="headerlink" title="MoNET"></a>MoNET</h2><p><a href="https://arxiv.org/pdf/1611.08402.pdf">reference paper</a></p>
<p><strong>Aggregate</strong> by weighted sum</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622105032.png"><br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621210209.png"></p>
<p>$D_j(x)f=\sum_{y\in\mathcal{N}(x)}w_j(u(x,y))f(y),j=1,…,J$</p>
<p>$(f*g)(x)-\sum_{j=1}^Jg_j D_j(x)f$</p>
<p>where $u(x,y)$ is used for measuring distance between $x$ and $y$, but it is a $d$-dementional vector. Then using a list of weight functions (kernels) $w_{\Theta}(u)=(w_1(u),…,w_J(u))$ to extract features and aggregate feature for hidden state of next layer</p>
<p>Different Spatial based GNN differ in choosing on the pseudo-coordinates $u$ and the weight functions $w(u)$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622110851.png"></p>
<h2 id="GraphSAGE"><a href="#GraphSAGE" class="headerlink" title="GraphSAGE"></a>GraphSAGE</h2><p><a href="https://arxiv.org/pdf/1706.02216.pdf">GraphSAGE</a> is Sample and Aggregate, learning how to embed node features from neighors</p>
<p><strong>Aggregate</strong> </p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621210811.png"></p>
<ol>
<li><p>Aggregate by Mean</p>
<p> replace line 4 and line 5 with<br> $h_v^k\leftarrow \sigma(W\cdot Mean({h_v^{k-1}}\cup {h_u^{k-1}}),u\in \mathcal{N}(v)$</p>
</li>
<li><p>Aggregate by LSTM</p>
<p> applying LSTM to a random permutation of the node’s neighbors</p>
</li>
<li><p>Aggregate by Pooling</p>
<p> $AGGREGATE_k^{pool}=max({\sigma(W_{pool}h_{u}^k)+b}), u\in\mathcal{N}(v)$</p>
</li>
</ol>
<p>Loss Function:</p>
<p>$J_{\mathcal{G}}(z_u)=-log(\sigma(z_u^Tz_v))-Q\cdot \mathbb{E}<em>{v_n\sim P_n(v)}log(\sigma(-z_u^Tz</em>{v_n}))$</p>
<p>where $Q$ is the number of samples by negative sampling process. In supervised method, $v$ is postive samples, $v_n$ is negative samples; In unsupervised method, $v$ is neighboring nodes, $v_n$ is nodes that far away from $u$.</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621212722.png"></p>
<h2 id="GAT"><a href="#GAT" class="headerlink" title="GAT"></a>GAT</h2><p><a href="https://arxiv.org/pdf/1710.10903.pdf">reference paper ICLR 2018</a></p>
<p>In MoNet, the distance measurement $u(i,j)$ and kernel $w_j(u)$ is manually defined. GAT, however learn these measurements and weight functions as engergy $e_{i,j}$.</p>
<p><strong>Aggregate</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621212959.png"></p>
<p>Node feature $h={\vec h_1, \vec h_2,…,\vec h_N},\vec h_i\in \mathbb{R}^F$</p>
<p>Energy Calculation: $e_{i,j}=a(W\vec h_i, W\vec h_j)$</p>
<p>Attention Score over neighbors: $a_{i,j}=\frac{exp(LeakyReLU(\vec \alpha^T [W\vec h_i || W\vec h_j]))}{\sum_{k\in\mathcal{N}(i)} exp(LeakyReLU(\vec \alpha^T [W\vec h_i || W\vec h_k]))}$ </p>
<p>where $j$ is one neighbor of $i$, $||$ means concatenation, $\vec \alpha \in \mathbb{R}^{2F’}$ is the parameter of the feedforward neural network</p>
<p>Node $i$ is updated by $\vec h_i’ = \sigma(\sum_{j\in \mathcal{N}(i)}\alpha_{i,j}W\vec h_j)$, which is a 1-head attention. One can even use a Multi-head attention like </p>
<p>$\vec h_i’ = {||}<em>{k=1}^K \sigma(\sum</em>{j\in \mathcal{N}(i)}\alpha_{i,j}W^k \vec h_j)$ or $\vec h_i’ = \sigma(\frac{1}{K}\sum_{k=1}^K \sum_{j\in \mathcal{N}(i)}\alpha_{i,j}W^k \vec h_j)$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621214351.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621214821.png"></p>
<p>Transductive task: the feature of testing data can be used in training stage, but the label can not be observed.</p>
<p>Inductive task: the testing data can not be used in training stage.</p>
<h2 id="GIN"><a href="#GIN" class="headerlink" title="GIN"></a>GIN</h2><p><a href="https://openreview.net/forum?id=ryGs6iA5Km">reference paper ICLR 2019</a></p>
<p>A GNN can be at most as powerful as WL isomorphic test</p>
<p>Theoretical proofs were provided</p>
<p><strong>Aggregate</strong></p>
<p>$h_v^k = MLP^{k}((1+\epsilon^k)\cdot h_v^{k-1} +\sum_{u\in \mathcal{N}(n)}h_u^{k-1})$</p>
<ol>
<li>suggest using Sum instead of mean or max</li>
<li>suggest using MLP instead of 1-layer</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621215353.png"></p>
<h1 id="2-Spectral-based-Convolution"><a href="#2-Spectral-based-Convolution" class="headerlink" title="2. Spectral-based Convolution"></a>2. Spectral-based Convolution</h1><p>Main idea of spectral-based convolution: </p>
<p>(1) transform signal from time domain into frequency domain; </p>
<p>(2) using filter to process signal; </p>
<p>(3) transform signal back into time domain</p>
<p><strong>Different spectral-based models differ in the way of learning filter $g_{\theta}(L)$</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210621215520.png"></p>
<h2 id="Fourier-Transformation"><a href="#Fourier-Transformation" class="headerlink" title="Fourier Transformation"></a>Fourier Transformation</h2><p>In order to understand better what’s the transformation between Time Domain and Frequency Domain, thinking about the Fourier Transformation.</p>
<h3 id="Time-Domain"><a href="#Time-Domain" class="headerlink" title="Time Domain"></a>Time Domain</h3><p>$\vec A=\sum_i a_i \vec v_i$</p>
<p>$x(t)=\int_{-\infty}^{\infty}x(\tau)\delta(t-\tau)d\tau$</p>
<h3 id="Frequency-Domain"><a href="#Frequency-Domain" class="headerlink" title="Frequency Domain"></a>Frequency Domain</h3><p>$\vec A=\sum_k b_k \vec u_k$</p>
<p>$x(t)=\frac{1}{2\pi}\int_{-\infty}^{\infty}X(j\omega)e^{j\omega t}d\omega$</p>
<p>A signal can be represented by the weighted combination of infinite basis. The basis is $e^{-j\omega t}$, whose weight is $X(j\omega)$. For spectral-based Convolution GNNs, the idea is behind the designing of a list of basis and weights. </p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622101443.png"></p>
<h2 id="Spectral-Graph-Theory"><a href="#Spectral-Graph-Theory" class="headerlink" title="Spectral Graph Theory"></a>Spectral Graph Theory</h2><p>the spectral graph theory will provide a way to obtaining a group of basis and their weights.</p>
<p><strong>Notations</strong></p>
<p>For a undirected graph $G=(V,E),N=|V|$. </p>
<p>The adjacency matrix of $G$ is $A\in \mathbb{R}^{N\times N}$, where $A_{i,j}=0\ if\ e_{i,j}\notin E, else\ A_{i,j}=w(i,j)$. </p>
<p>The degree matrix of $G$ is $D\in \mathbb{R}^{N\times N}$, where $D_{i,j}=d(i)\ if\ i=j, else\ D_{i,j}=0, d(i)=\sum_j A_{i,j}$.</p>
<p>The signal on $G$(vertices) is $f:V\rightarrow \mathbb{R}^{N}$, where $f(i)$ denotes the signal of vertex $i$.</p>
<p><strong>Spectral Decomposition</strong></p>
<p>The Laplacian Matrix of $G$ is $L=D-A$ (one type of Laplacian Matrix, it is positive semidefinite). Do decomposition on $L=U\Lambda U^T$, where $\Lambda=diag(\lambda_0,…,\lambda_{N-1})\in \mathbb{R}^{N\times N}$, $U=[u_0,…,u_{N-1}]\in \mathbb{R}^{N\times N}$ (they are orthonormal with each other). Therefore, we found the basis $u_n$ and its corresponding weight $\lambda_n,n=0,…,N-1$.</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622190152.png"></p>
<p><strong>Example</strong><br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622190608.png"></p>
<p><strong>The meaning of $Lf$</strong> is actually represent the sum of signal (state) difference between node $i$ and its neighbors<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622191918.png"><br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622192254.png"></p>
<p><strong>Graph Fourier Transform of signal</strong><br>$\hat x=U^T x$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622193501.png"></p>
<p><strong>Filtering</strong></p>
<p>Convolution in time domain is multiplication in frequency domain<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622194440.png"></p>
<p><strong>Inverse Graph Fourier Transform of signal</strong><br>$x=U\hat x$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622193523.png"></p>
<h2 id="What-are-spectral-based-GNN-need-to-learnt"><a href="#What-are-spectral-based-GNN-need-to-learnt" class="headerlink" title="What are spectral-based GNN need to learnt?"></a>What are spectral-based GNN need to learnt?</h2><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622194715.png"><br>The GNN basically learnt the filter $g_{\theta}(L)$, and this function can be any function.</p>
<p>For example $g_{\theta}(L)=log(I+L)=L-\frac{L^2}{2}+\frac{L^3}{3}…, L=D-A$. </p>
<p><strong>Two problem will happen</strong> if we use this function $log(I+L)$</p>
<ol>
<li>The size of parameters is growing up with $O(N)$, $N=|V|$ is dimention of $\theta$. Because the decomposition of $L$ must produce $N$ eigenvectors (bases)</li>
<li>The signal $y$ is not localized (over smoothing). Because when $k$ (of $L^{k}$) becomes bigger, signal of all other nodes will be aggregated in current node. finally, the output of different nodes will be the same. ($K$ should be resonably small)</li>
<li>The decomposition of $L$ is time-costing $O(N^2)$</li>
</ol>
<p>When $g_{\theta}(L)=L$, each node will just consider aggregate the information from their neighbors. When $g_{\theta}(L)=L^2$, each node will consider all nodes that has a distance (within 2) from this node. $x=[f(0),f(1),f(2),f(3)]$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210623090134.png"></p>
<p>Therefore all those spectral-based GNN use different strategy to overcome the difficulty of learning $g_{\theta}(L)$</p>
<h2 id="ChebNet"><a href="#ChebNet" class="headerlink" title="ChebNet"></a>ChebNet</h2><p><a href="https://arxiv.org/pdf/1606.09375.pdf">reference paper</a></p>
<p>ChebNet use polynomial to parametrize $g_{\theta}(L)$ and prevent the decomposition of $L$ (explicitly calculate eigenvectors). The localization is managed by $K$ (K-hop neighbors).</p>
<p>$g_{\theta}(L)=\sum_{k=1}^K \theta_k L^k$</p>
<p>$g_{\theta}(\Lambda)=\sum_{k=1}^K \theta_k \Lambda^k$</p>
<p>$y=Ug_{\theta}(\Lambda)U^Tx=\sum_{k=1}^K \theta_k L^kx=U(\sum_{k=1}^K \theta_k \Lambda^k)U^Tx$</p>
<p>Therefore, the size of parameter is $K$, and the localization is fixed by $K$. But the calculate $L^k$ and obtaining eigenvectors $U$ need time complexity of $O(N^2)$</p>
<p>Therefore Chebyshev poluyomial is used to calculate $\Lambda^k$ in a recursive way and also prohibit the calculation of eigenvectors $U$.</p>
<p>$T_0(\tilde \Lambda)=I, T_1(\tilde \Lambda)=\tilde{\Lambda}, T_l(\tilde \Lambda)=2\tilde \Lambda\ T_{k-1}(\tilde \Lambda)-T_{k-2}(\tilde \Lambda)$, where $\tilde \Lambda=\frac{2\Lambda}{\lambda_{max}}-I, \tilde \lambda\in[-1,1]$</p>
<p>$g_{\theta}(\Lambda)=\sum_{k=1}^K \theta_k \Lambda^k\rightarrow g_{\theta’}(\Lambda)=\sum_{k=1}^K \theta_k’ T_k(\tilde{\Lambda})$</p>
<p>Therefore the final signal $y$ can be efficiently computed, $y=g_{\theta’}(\tilde{L})x=\sum_{k=1}^K \theta_k’ T_k(\tilde{L})x$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622210221.png"><br><strong>ChebNet</strong><br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210622210316.png"></p>
<h2 id="GCN"><a href="#GCN" class="headerlink" title="GCN"></a>GCN</h2><p><a href="https://openreview.net/pdf?id=SJU4ayYgl">reference paper</a></p>
<p>The designing of $g_{\theta}(L)$</p>
<p>$y=g_{\theta’}(L)x\approx \sum_{k=0}^K\theta_k’ T_k(\tilde{L})x, K=1$</p>
<p>$y=g_{\theta’}(L)x\approx\theta_0’x+\theta_1’\tilde{L}x,\ \ \ \ \tilde{L}=\frac{2L}{\lambda_{max}}-I$</p>
<p>$=\theta_0’x+\theta_1’(\frac{2L}{\lambda_{max}}-I)x,\ \ \ \ \lambda_{max}\approx 2$</p>
<p>$=\theta_0’x+\theta_1’(L-I)x,\ \ \ \ L=I-D^{-\frac{1}{2}}AD^{-\frac{1}{2}}$</p>
<p>$=\theta_0’x-\theta_1’(D^{-\frac{1}{2}}AD^{-\frac{1}{2}})x,\ \ \ \ \theta=\theta_0’=-\theta_1’$</p>
<p>$=\theta(I+D^{-\frac{1}{2}}AD^{-\frac{1}{2}})x$</p>
<p>Use the renomalization trick: $I+D^{-\frac{1}{2}}AD^{-\frac{1}{2}}\rightarrow \tilde{D}^{-\frac{1}{2}}\tilde{A}\tilde{D}^{-\frac{1}{2}}$, where $\tilde{A}=A+I$, and $\tilde{D}<em>{ii}=\sum_j \tilde{A}</em>{i,j}$</p>
<p>Therefore, the classic GCN use $y\approx \theta(\tilde{D}^{-\frac{1}{2}}\tilde{A}\tilde{D}^{-\frac{1}{2}})x$, why GCN use $\tilde{D}^{-\frac1{2}}$, because it can reduce the information from neighbors according to the degree of node. Node with a few neighbors will get more information from its neighbors, while node with many neighbors should get less information from its neighbors.</p>
<p>The updating function of layer $l+1$ is<br>$H^{(l+1)}=\sigma(\tilde{D}^{-\frac{1}{2}}\tilde{A}\tilde{D}^{-\frac{1}{2}}H^{(l)}W^{(l)})$</p>
<p>An example of 2 layer GCN is </p>
<p>$Z=f(X,\tilde{A})=softmax(\tilde{A}\ ReLU(\tilde{A}X\ W^{(0)})\ W^{(1)}), \tilde{A}=\tilde{D}^{-\frac{1}{2}}\tilde{A}\tilde{D}^{-\frac{1}{2}}$</p>
<h2 id="HyperGCN"><a href="#HyperGCN" class="headerlink" title="HyperGCN"></a>HyperGCN</h2><p><a href="https://arxiv.org/pdf/1809.02589.pdf">reference paper 2019 NeurIPS</a> deals with the network of co-author, co-citation. The main idea is simplifying the hypergraph into a simple graph that can be processed by GNN.</p>
<p>Hypergraph<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210623111406.png"></p>
<p>Graph Convolution on a hypernode $v$ using HyperGCN, where </p>
<p>$\tau$ is the number of epoch</p>
<p>$h_v^{\tau+1}$ is the hidden state in epoch $\tau+1$</p>
<p>$\mathcal{N}(v)$ is neighbors of node $v$</p>
<p>$[\bar A_s^{(\tau)}]_{u,v}$ is the normalized weight between node $v$ and $u$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210623111955.png"></p>
<h1 id="Differences-between-Spatial-based-GNN-and-Spectral-based-GNN"><a href="#Differences-between-Spatial-based-GNN-and-Spectral-based-GNN" class="headerlink" title="Differences between Spatial-based GNN and Spectral-based GNN"></a>Differences between Spatial-based GNN and Spectral-based GNN</h1><ol>
<li>Spectral-based GNN can not assign different weights for neighbors in different hop, GAT (spatial-based GNN) solved this problem. For example, $w_{0,2},w_{1,2},w_{2,2}$ are hop-1 neighbors of $v_2$, while $w_{3,2}$ is is hop-2 neighbor of $v_2$. In spectral-based GNN, $w_{0,2}=w_{1,2}=w_{2,2}\neq w_{3,2}$; in GAT, $w_{0,2}\neq w_{1,2}\neq w_{2,2}\neq w_{3,2}$</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210623105003.png"></p>
<h1 id="Python-implementation-of-GNN"><a href="#Python-implementation-of-GNN" class="headerlink" title="Python implementation of GNN"></a>Python implementation of GNN</h1><ol>
<li><a href="https://github.com/rusty1s/pytorch_geometric">Pytorch Geometric</a></li>
<li><a href="https://www.dgl.ai/">Deep Graph Library</a></li>
<li><a href="https://github.com/graph4ai/graph4nlp">Graph4NLP</a></li>
</ol>
<h1 id="Dataset"><a href="#Dataset" class="headerlink" title="Dataset"></a>Dataset</h1><ol>
<li>CORA: citation network. 2.7k nodes and 5.4k links </li>
<li>TU-MUTAG: 188  molecules with 18 nodes on average</li>
</ol>
<h1 id="Summarization"><a href="#Summarization" class="headerlink" title="Summarization"></a>Summarization</h1><p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210623114430.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://blog.csdn.net/weixin_37589575/article/details/106540831">Graph Neural Networks (GNN)（一）：Spatial-GNN</a></li>
<li><a href="https://blog.csdn.net/weixin_37589575/article/details/107013739">Graph Neural Networks (GNN)（三）：Spectral-GNN</a></li>
<li><a href="https://www.youtube.com/watch?v=eybCCtNKwzA">姜成翰 GNN 李宏毅</a></li>
<li><a href="http://speech.ee.ntu.edu.tw/~tlkagk/courses/ML2020/GNN.pdf">姜成翰 GNN 李宏毅 PPT</a></li>
</ol>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>GNN</tag>
      </tags>
  </entry>
  <entry>
    <title>LSTM详解</title>
    <url>/2021/06/06/Deep%20Learning/LSTM%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h1><p>LSTM 是一类循环神经网络，它的提出是为了化解传统循环神经网络（RNN）在 back propagation 中梯度弥散问题，这导致了 RNN 的短期记忆问题，使得 RNN 不能学习长距离的依赖关系。LSTM 通过引入 $sigmoid$ 控制门来控制信息的保留和丢弃，使得它能够记住重要的信息，遗忘不重要的信息</p>
<span id="more"></span>

<h1 id="LSTM-几个重要的门介绍"><a href="#LSTM-几个重要的门介绍" class="headerlink" title="LSTM 几个重要的门介绍"></a>LSTM 几个重要的门介绍</h1><p>从 <a href="https://blog.mlreview.com/understanding-lstm-and-its-diagrams-37e2f46f1714">Understanding LSTM and its diagrams</a> 这个博客中，我找到了一个最佳的描述 LSTM 细节的图。这是 LSTM 的一个胞元结构，它有两条主要的水平方向的数据流，上面的是胞元状态（$C_{t-1}$ 包含了 $t-1$ 时刻及以前序列的信息），下面的是输出或者隐状态（$h_t$ 包含了当前输入 $x_t$ 的重要信息）。下面我们介绍下 LSTM 的三个控制门<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210606173408.png"></p>
<h2 id="遗忘门"><a href="#遗忘门" class="headerlink" title="遗忘门"></a>遗忘门</h2><p>遗忘门根据隐状态 $h_t$ 和当前输入 $x_t$ 来决定遗忘 $C_{t-1}$ 中的哪些信息，其中 $\sigma(x)=\frac{1}{1+e^{-x}}$ 是一个将输入向量的每一位映射到 $(0,1)$ 的函数，映射后的值越大，$C_{t-1}$ 的信息保留越多，反之则遗忘越多</p>
<p>$f_t=\sigma(W_f \cdot [h_{t-1}, x_t] + b_f)$<br><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210606174445.png"></p>
<h2 id="输入门"><a href="#输入门" class="headerlink" title="输入门"></a>输入门</h2><p>输入门根据输入 $x_t$，前一时刻输出 $h_{t-1}$ 和前一时刻胞元状态 $C_{t-1}$ 来计算 $t$ 时刻下的胞元状态 $C_t$，其中 $f_t\otimes C_{t-1}$ 是 $t-1$ 时刻遗忘过后剩余的胞元信息，$i_t \otimes \tilde{C_{t}}$ 是 $t$ 时刻新增的胞元状态信息</p>
<p>$i_t=\sigma(W_i\cdot [h_{t-1}, x_t] + b_i)$</p>
<p>$\tilde{C_t}=tanh(W_c\cdot [h_{t-1}, x_t] + b_C)$</p>
<p>$C_t=f_t\otimes C_{t-1}+i_t \otimes \tilde{C_t}$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210606174539.png"></p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210606174746.png"></p>
<h2 id="输出门"><a href="#输出门" class="headerlink" title="输出门"></a>输出门</h2><p>输出门根据 $t-1$ 时刻的输出，$t$ 时刻的输入 $x_t$ 和 $t$ 时刻的胞元信息来计算 $t$ 时刻的输出信息</p>
<p>$o_t=\sigma(W_o\cdot [h_{t-1}, x_t] + b_o)$</p>
<p>$h_t=o_t\otimes tanh(C_t)$</p>
<p><img src="https://cdn.jsdelivr.net/gh/jason-huanghao/PicGoBed/imgs/20210606174906.png"></p>
<h1 id="参考-References"><a href="#参考-References" class="headerlink" title="参考 (References)"></a>参考 (References)</h1><ol>
<li><a href="https://blog.mlreview.com/understanding-lstm-and-its-diagrams-37e2f46f1714">Understanding LSTM and its diagrams</a></li>
<li><a href="https://towardsdatascience.com/illustrated-guide-to-lstms-and-gru-s-a-step-by-step-explanation-44e9eb85bf21">Illustrated Guide to LSTM’s and GRU’s: A step by step explanation</a></li>
<li><a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/">Understanding LSTM Networks</a></li>
<li><a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">The Unreasonable Effectiveness of Recurrent Neural Networks</a></li>
</ol>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>LSTM</tag>
      </tags>
  </entry>
</search>
